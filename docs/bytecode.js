C$bytecode = "CRAYON@#3FA2w#1g8&05LUKEWARM%303y303@Cu303@9g3030&05L U K E W A R M%&05Campaign%&05Dance, Dog%&05WASD to move, click to shoot, F2 to restart%302130313020303@1p303@1P303c303@1L303e3032303W303D303@6S303@4q303@3E303@2Q303@7G303@47303@24&05Time: %&05Health: %&09lib_random_random_float%&040.02%&05Score: %201&05Invalid argument.%3033&05Filter function returned a non-boolean value.%&05Can only get methods from an instance or class reference.%&040.434294481903252%&041%&041.4426950408@296%&09lib_random_random_int%&05First argument must be a positive integer.%&05randomInt requires two integers, where the latter is larger.%&09lib_random_random_bool%&05Abstract method not overridden!%&046.28318530717959%&040%&045%&0418%&0415%&042%&048%&040.5%&046%&043%3035303@36&040.05%&04-2%&05fonts/Lato-Bold.ttf%303m303G303H303X303Z303@13303@163034&09lib_game_getScreenInfo%&09lib_game_clock_tick%&09lib_game_pump_events%&05%&05Title cannot be empty.%&09lib_game_set_title%&05Title must be a string.%&05 must be a number.%&05width%&05height%&05FPS%&05screen %&05Cannot create multiple GameWindows.%&05 must be positive.%&09lib_game_initialize%&09lib_game_initialize_screen%303b&09lib_graphics2d_renderQueueAction%&09lib_graphics2d_renderQueueValidateArgs%&09lib_graphics2d_isOpenGlBased%&09lib_graphics2d_lineToQuad%&09lib_graphics2d_isPlatformUsingTextureAtlas%&09lib_graphics2d_initializeTextureResource%&09lib_graphics2d_initializeTexture%&09lib_graphics2d_addImageRenderEvent%&05Invalid arguments%3038303B303C303F&09lib_graphics2d_flip%&05Image dimensions must be non-zero integers.%&09lib_graphics2d_scale%&05:%&09lib_graphics2dtext_isGlRenderer%&05~0A%&05Expected a FontResource instance%&09lib_graphics2dtext_isResourceAvailable%&05Font resource not found: ~0d%&05~0d%&09lib_graphics2dtext_isSystemFontPresent%&05Font not installed: ~0d%&05 %&05~0D%3036303A&09lib_graphics2dtext_glSetNativeDataIntArray%303@GW&09lib_graphics2dtext_glGenerateAndLoadTexture%&09lib_graphics2dtext_glRenderCharTile%&05Could not render character (%&05)%&09lib_graphics2dtext_getNativeFontUniqueKey%&05|%&09lib_graphics2dtext_createNativeFont%303#2bI&05Error loading font resource.%&040.001%&09lib_graphics2dtext_isDynamicFontLoaded%&09lib_graphics2dtext_glRenderTextSurface%&09lib_graphics2dtext_simpleBlit%3037&09lib_graphics2dtext_renderText%&05Resource ~0d{0}~0d is not included in this sheet.%&05{0}%&05Loading is not finished.%&05Image has already been constructed.%&09lib_imageresources_checkLoaderIsDone%&05Error encountered while loading image.%&09lib_imageresources_yieldRequiredByPlatform%&040.01%&09lib_imageresources_loadAsynchronous%&040.005%&041.2%&09lib_imageresources_loadSynchronous%&05Image load failed%&05Image resource ~0d{0}~0d not found.%&05~0d must be loaded as an ImageSheet.%&05~1U%&05/%&05Resource ~0d{0}~0d does not exist.%&05Resource ~0d{0}~0d is standalone and not included in an image sheet.%&05Image sheet ID must be a string%&05Image sheet with ID of ~0d{0}~0d not found.%&09lib_imageresources_getManifestString%&05,%&05name%&05id%&05chunks%&05tiles%&05Cannot load image from sheet that is not finished loading.%&05Image sheet ~0d%&05~0d does not contain resource: ~0d{0}~0d%&09lib_imageresources_flushImageChanges%&09lib_imageresources_blit%&05Image resource is locked and cannot be used.%&05Image resource must be locked.%&09lib_imageresources_nativeImageDataInit%!1render%!1pumpEvents%!1window%!1eventList%!1i%!1event%!1type%!1length%!1gameState%!1menuChoice%!1env%!1characters%!1draw%!1alignMiddle%!1alignCenter%!1setPos%!1setImage%!1titleImage%!1alignBottom%!1campaignImage%!1alignTop%!1danceDogImage%!1setBgColor%!1campaignDrawing%!1danceDogDrawing%!1instructionsImage%!1update%!1totalTime%!1timeImage%!1health%!1healthImage%!1height%!1pos%!1shoot%!1target%!1gameOver%!1scoreImage%!1clockTick%!1programRunning%!1main%!1condition%!1message%!1assert%!1fail%!1value%!1chr%!1currentTime%!1ord%!1parseFloat%!1parseInt%!1print%!1seconds%!1sleep%!1typeof%!1isString%!1isNumber%!1list%!1fp%!1_LIB_CORE_list_sort_by_key%!1add%!1output%!1t%!1_LIB_CORE_list_map%!1b%!1_LIB_CORE_list_filter%!1getCurrentExecutionToken%!1getExecutionIterationCounter%!1getProjectId%!1args%!1_LIB_CORE_invoke%!1_LIB_CORE_generateException%!1instance%!1getClassFromInstance%!1commonBaseClass%!1isA%!1c%!1filtered%!1getClasses%!1instanceOrClass%!1getMethods%!1ratio%!1arccos%!1arcsin%!1ratio_or_y%!1x%!1arctan%!1theta%!1cos%!1floor%!1sin%!1tan%!1log10%!1ln%!1log2%!1abs%!1a%!1max%!1min%!1minBound%!1maxBound%!1ensureRange%!1num%!1sign%!1randomFloat%!1maxExcl%!1minIncl%!1randomInt%!1msg%!1_randomIntErrorHelper%!1randomBool%!1d%!1n%!1randomChance%!1control%!1controlsTime%!1Agent%!1normalize%!1minus%!1character%!1plus%!1times%!1bulletHeading%!1bullets%!1bulletPos%!1bulletVel%!1vel%!1agent%!1clone%!1getTarget%!1AI%!1direction%!1speed%!1that%!1isZero%!1v%!1radius%!1y%!1p1%!1p2%!1collisionRadiusSquared%!1roots%!1timeStep%!1collidesWith%!1lengthSquared%!1point%!1contains%!1Body%!1trail%!1Bullet%!1source%!1initialPos%!1color%!1r%!1g%!1Character%!1weapon%!1black%!1gray%!1silver%!1white%!1red%!1Color%!1alignLeft%!1alignRight%!1image%!1width%!1left%!1top%!1Drawing%!1hAlign%!1vAlign%!1bgColor%!1remove%!1j%!1body%!1outOfBounds%!1from%!1to%!1Environment%!1setSize%!1setColor%!1getRenderer%!1Font%!1key%!1pressed%!1released%!1down%!1up%!1Input%!1Weapon%!1Pistol%!1equals%!1Player%!1clear%!1Set%!1keys%!1shuffle%!1determinant%!1getQuadraticRoots%!1Util%!1zero%!1k%!1dividedBy%!1l%!1result%!1normalized%!1Vec2%!1Object%!1getTrace%!1Exception%!1cause%!1FatalException%!1m%!1AssertionFailedException%!1DivisionByZeroException%!1IndexOutOfRangeException%!1InvalidArgumentException%!1InvalidAssignmentException%!1InvalidInvocationException%!1InvalidKeyException%!1InvalidOperationException%!1KeyNotFoundException%!1NotImplementedException%!1NullReferenceException%!1UnassignedVariableException%!1UnknownFieldException%!1UnsupportedOperationException%!1Event%!1getScreenInfo%!1e%!1len%!1title%!1setTitle%!1GameWindow%!1_w%!1_h%!1fps%!1screenWidth%!1w%!1screenHeight%!1h%!1KeyEvent%!1MouseEvent%!1MouseClickEvent%!1button%!1MouseMoveEvent%!1MouseScrollEvent%!1amount%!1QuitEvent%!1quitType%!1_renderer%!1_rendererReset%!1ellipse%!1strokeWidth%!1startY%!1endY%!1startX%!1endX%!1line%!1rectangle%!1ax%!1ay%!1bx%!1by%!1cx%!1cy%!1triangle%!1dx%!1dy%!1quad%!1fill%!1Draw%!1imageResource%!1_nativeResource%!1verifyUnlocked%!1atlasNativeResource%!1_width%!1_height%!1resourceFingerprint%!1get%!1textureResource%!1newWidth%!1newHeight%!1atlasDummyWrapper%!1lock%!1img%!1blit%!1unlock%!1_x%!1_y%!1tfw%!1tfh%!1texture%!1textureCoords%!1load%!1walker%!1_nextPowerOf2%!1alpha%!1drawWithAlpha%!1sx%!1sy%!1drawRegion%!1drawStretched%!1sh%!1sw%!1th%!1tw%!1tx%!1ty%!1drawRegionStretched%!1drawRegionStretchedWithAlpha%!1drawRotated%!1drawRotatedWithAlpha%!1drawWithOptions%!1res%!1newRes%!1_createResCopy%!1flip%!1ver%!1hor%!1scale%!1GraphicsTexture%!1_graphicsTextureResource%!1ref%!1GraphicsTextureResource%!1FontNotFoundException%!1green%!1blue%!1size%!1style%!1setStyle%!1_sourceType%!1_source%!1join%!1text%!1textureKey%!1FontRenderer%!1font%!1_native%!1_settingsKey%!1_glRenderer%!1sourceType%!1_getKey%!1_get%!1path%!1fromResource%!1fromDisk%!1name%!1fromSystem%!1isSystemFontPresent%!1getDefaultSerifFont%!1getDefaultSansSerifFont%!1getDefaultMonospaceFont%!1FontResource%!1sourceId%!1renderer%!1nativeFont%!1charIds%!1charId%!1tile%!1newTiles%!1xs%!1leftMargin%!1ys%!1tileList%!1effectiveWidth%!1lastTile%!1sheets%!1sheet%!1tiles%!1textSurfaceWithNativeData%!1sizeOut%!1renderText%!1consolidate%!1GLRenderer%!1sheetByCharId%!1tileByCharId%!1spaceWidth%!1sort%!1rows%!1row%!1tileIndex%!1tilesLength%!1rowCount%!1makeSheets%!1sortByWidthKeyFunction%!1GLTextureSheet%!1tilesByCharId%!1concat%!1sheetX%!1sheetY%!1currentTextureId%!1GLTile%!1lastUsed%!1id%!1getUniqueKey%!1NativeFont%!1status%!1_refreshGlRenderer%!1TextSurface%!1_isGl%!1fontRenderer%!1resourcePath%!1getImage%!1isDone%!1getProgress%!1_weight%!1progress%!1getFiles%!1AggregatedImageSheet%!1_sheetsById%!1_orderedSheets%!1_ids%!1_isLoaded%!1_id%!1ImageNotFoundException%!1replace%!1template%!1SheetNotFoundException%!1LoadFailedException%!1filename%!1loadFromResourcesAsync%!1loadFromResources%!1isGen%!1data%!1nativeImage%!1isAsync%!1loader%!1_nativeImage%!1delay%!1reverse%!1statusOut%!1_loadImpl%!1info%!1getGenName%!1ImageLoader%!1_executionIterationCount%!1_isDoneChecksOnThisFrame%!1_isDone%!1_output%!1getWidth%!1getHeight%!1ImageResource%!1init%!1trim%!1nkey%!1sheetOnly%!1getFileInfo%!1getSheetInfo%!1resourceInfo%!1sheetInfo%!1split%!1manifest%!1parts%!1genFilename%!1activeSheetId%!1activeChunkId%!1bytes%!1files%!1values%!1ensureInitialized%!1ImageResourceManifest%!1allowLists%!1_initImpl%!1completed%!1getStatus%!1chunkMetadata%!1chunkId%!1chunk%!1tilesByName%!1chunks%!1_turnTilesIntoSheet%!1ImageSheet%!1_info%!1_loader%!1_name%!1_chunks%!1lookup%!1genName%!1out%!1ImageSheetLoaderAsync%!1inProgress%!1updateResourceFingerprint%!1other%!1targetLeft%!1targetTop%!1targetBottom%!1targetRight%!1diff%!1sourceRight%!1sourceLeft%!1sourceBottom%!1sourceTop%!1verifyLocked%!1NativeImageData%!1revisionId%!1resourceId%!1_locked%!1instruction%5v0D0q5v1EUq5v2EEq5v3E8q5v4GDq5v5GBq5v6HEq5v7HWq5v8HVq5v9HCq5vAIHq5vBIZq5vCIYq5vDIFq5vEJHq5vFJZq5vGJYq5vHJFq5vIKLq5vJKdq5vKKcq5vLKJq5vMLEq5vNLCq5vONIq5vPNGq5vQO8q5vRO8q5vSPEq5vTPVq5vUPCq5vVQFq5vWQEq5vXRBq5vYR9q5vZREq5vaRIq5vbRRq5vcRGq5vdREq5veSBq5vfSLq5vgSKq5vhS9q5viT7q5vjTCq5vkTLq5vlTIq5vmT7q5vnULq5voUJq5vpRaq5vqRbq5vrRbq5vsRaq5vuYKq5vvYJq5vwY6q5vxaFq5vyaDq5vzdAq5v@10d2q5v@11fMq5v@12fLq5v@13fhq5v@14fyq5v@15fxq5v@16f8q5v@17g7q5v@18g5q5v@19g5q5v@1Ag7q5v@1BiMq5v@1CiLq5v@1Dijq5v@1Ei@10q5v@1Fizq5v@1Gi8q5v@1Hj7q5v@1Ij5q5v@1Jj5q5v@1Kj7q5v@1Ll4q5v@1MlIq5v@1NlFq5v@1Ol4q5v@1PnMq5v@1QnLq5v@1Rnkq5v@1Sn@11q5v@1Tn@10q5v@1Un8q5v@1VoDq5v@1Wo5q5v@1XrJq5v@1YrHq5v@1ZsHq5v@1asBq5v@1bt7q5v@1cuZq5v@1duSq5v@1euoq5v@1fujq5v@1guEq5v@1hvVq5v@1ivSq5v@1jvkq5v@1kvfq5v@1lvEq5v@1mwVq5v@1nwSq5v@1owkq5v@1pwfq5v@1qwEq5v@1rxVq5v@1sxSq5v@1txkq5v@1uxfq5v@1vxEq5v@1wyVq5v@1xySq5v@1yykq5v@1zyfq5v@20yEq5v@21u8q5v@22tMq5v@23@107q5v@24@13Jq5v@25@13Hq5v@26@14Hq5v@27@14Bq5v@28@157q5v@29@15oq5v@2A@15hq5v@2B@15@13q5v@2C@15yq5v@2D@15Tq5v@2E@15Oq5v@2F@15Mq5v@2G@16Iq5v@2H@16Gq5v@2I@177q5v@2J@1BPq5v@2K@1BOq5v@2L@1D8q5v@2M@1EFq5v@2N@1EEq5v@2O@1FDq5v@2P@1FCq5v@2Q@1GHq5v@2R@1HHq5v@2S@1IAq5v@2T@1KQq5v@2U@1LFq5v@2V@1LEq5v@2W@1MDq5v@2X@1MCq5v@2Y@1NHq5v@2Z@1OHq5v@2a@1KKq5v@2b@1QQq5v@2c@1RFq5v@2d@1REq5v@2e@1SDq5v@2f@1SCq5v@2g@1THq5v@2h@1UEq5v@2i@1QKq5v@2j@1WCq5v@2k@1W4q5v@2l@1Y6q5v@2m@1Yhq5v@2n@1Ygq5v@2o@1YWq5v@2p@1Z6q5v@2q@1b6q5v@2r@1bhq5v@2s@1bgq5v@2t@1bWq5v@2u@1c6q5v@2v@1f4q5v@2w@1fOq5v@2x@1g4q5v@2y@1gOq5v@2z@1j8q5v@30@1kFq5v@31@1kEq5v@32@1lDq5v@33@1lCq5v@34@1mHq5v@35@1nHq5v@36@1oAq5v@37@1q4q5v@38@1t4q5v@39@1tCq5v@3A@1w4q5v@3B@1wEq5v@3C@1zGq5v@3D@1zYq5v@3E@1zuq5v@3F@1zxq5v@3G@1ztq5v@3H@1zhq5v@3I@1zXq5v@3J@1zEq5v@3K@208q5v@3L@21Fq5v@3M@21Eq5v@3N@22Dq5v@3O@22Cq5v@3P@23Tq5v@3Q@23Sq5v@3R@23Gq5v@3S@24Aq5v@3T@278q5v@3U@27Bq5v@3V@27Mq5v@3W@27Wq5v@3X@27Uq5v@3Y@278q5v@3Z@28Jq5v@3a@28Zq5v@3b@28mq5v@3c@28pq5v@3d@28@11q5v@3e@28@10q5v@3f@28@13q5v@3g@28kq5v@3h@28Yq5v@3i@28Hq5v@3j@299q5v@3k@2AGq5v@3l@2AFq5v@3m@2BEq5v@3n@2BHq5v@3o@2BQq5v@3p@2BDq5v@3q@2CUq5v@3r@2CTq5v@3s@2CHq5v@3t@2DBq5v@3u@2F4q5v@3v@2IDq5v@3w@2IGq5v@3x@2IRq5v@3y@2Ibq5v@3z@2IZq5v@40@2IDq5v@41@2J7q5v@42@2JAq5v@43@2JMq5v@44@2JLq5v@45@2JOq5v@47@2KXq5v@48@2KWq5v@49@2Kzq5v@4A@2Kyq5v@4B@2KBq5v@4C@2IBq5v@4D@2MQq5v@4E@2MVq5v@4F@2MTq5v@4G@2M8q5v@4H@2N5q5v@4I@2NOq5v@4J@2NSq5v@4K@2NEq5v@4L@2PQq5v@4M@2PVq5v@4N@2PTq5v@4O@2P8q5v@4P@2Q5q5v@4Q@2QOq5v@4R@2QJq5v@4S@2QZq5v@4T@2QEq5v@4U@2SQq5v@4V@2SVq5v@4W@2STq5v@4X@2S8q5v@4Y@2T5q5v@4Z@2TOq5v@4a@2TJq5v@4b@2TZq5v@4c@2TEq5v@4d@2VQq5v@4e@2VVq5v@4f@2VTq5v@4g@2V8q5v@4h@2W5q5v@4i@2WOq5v@4j@2WJq5v@4k@2Wdq5v@4l@2WEq5v@4m@2a4q5v@4n@2aEq5v@4o@2d9q5v@4p@2d8q5v@4q@2dIq5v@4r@2dLq5v@4s@2dOq5v@4t@2dZq5v@4u@2dkq5v@4v@2dhq5v@4w@2d8q5v@4x@2eIq5v@4y@2eZq5v@4z@2ewq5v@50@2ezq5v@51@2evq5v@52@2ejq5v@53@2eYq5v@54@2eGq5v@55@2fGq5v@56@2fEq5v@57@2j4q5v@58@2jCq5v@59@2mGq5v@5A@2mYq5v@5B@2muq5v@5C@2mxq5v@5D@2mtq5v@5E@2mhq5v@5F@2mXq5v@5G@2mEq5v@5H@2n8q5v@5I@2oFq5v@5J@2oEq5v@5K@2pDq5v@5L@2pCq5v@5M@2qTq5v@5N@2qSq5v@5O@2qGq5v@5P@2rAq5v@5Q@2u8q5v@5R@2u8q5v@5S@2w9q5v@5T@2xGq5v@5U@2xFq5v@5V@2yEq5v@5W@2yHq5v@5X@2yQq5v@5Y@2yDq5v@5Z@2zUq5v@5a@2zTq5v@5b@2zHq5v@5c@30Bq5v@5e@33Jq5v@5f@33Zq5v@5g@33mq5v@5h@33pq5v@5i@33@11q5v@5j@33@10q5v@5k@33@13q5v@5l@33kq5v@5m@33Yq5v@5n@33Hq5v@5o@349q5v@5p@35Gq5v@5q@35Fq5v@5r@36Eq5v@5s@36Hq5v@5t@36Qq5v@5u@36Dq5v@5v@37Uq5v@5w@37Tq5v@5x@37Hq5v@5y@38Bq5v@5z@3A4q5v@60@3D2q5v@61@3DIq5v@63D0q5v@64G425v@65Gf25v@66GV25v@67HT25v@68He25v@69Hn25v@6AHF25v@6BH825v@6CK425v@6DLT25v@6ELa25v@6FLj25v@6GLF25v@6HL825v@6IO425v@6JPQ25v@6KPF25v@6LP825v@6MS425v@6NTF25v@6OT825v@6PW425v@6QXQ25v@6RXF25v@6SX825v@6Ta425v@6UbX25v@6VbF25v@6Wb825v@6Xe425v@6YfV25v@6ZfF25v@6af825v@6bi425v@6cjS25v@6djF25v@6ej825v@6fm425v@6goQ25v@6hoC25v@6io@1925v@6jpC25v@6kpN25v@6lpK25v@6mpQ25v@6nHn25v@6onJ25v@6pqS25v@6qqF25v@6rq825v@6st425v@6tuS25v@6uuF25v@6vu825v@6wx425v@6xyT25v@6yyF25v@6zy825v@70@11425v@71@12T25v@72@12F25v@73@12825v@74@15425v@75@16C25v@76@16G25v@77@16Q25v@78@16O25v@79@16C25v@7A@17S25v@7B@17r25v@7C@17v25v@7D@17q25v@7E@17C25v@7F@15425v@7G@1B425v@7H@1CH25v@7I@1CF25v@7L@1DH25v@7M@1DH25v@7N@1D825v@7O@1EC25v@7P@1EN25v@7Q@1EQ25v@7R@1EP25v@7S@1EM25v@7X@1GF25v@7Y@1G825v@7Z@1J425v@7a@1KH25v@7b@1KF25v@7e@1LH25v@7f@1LH25v@7g@1L825v@7h@1MG25v@7i@1MJ25v@7j@1MI25v@7k@1ME25v@7l@1NV25v@7m@1NH25v@7n@1NG25v@7o@1NG25v@7pLT25v@7q@1OQ25v@7rLj25v@7s@1OP25v@7t@1QG25v@7u@1QG25v@7v@1RG25v@7w@1RR25v@7x@1RQ25v@82@1UF25v@83@1U825v@84@1X425v@85@1YF25v@86@1Y825v@87@1b425v@88@1cF25v@89@1c825v@8A@1f425v@8B@1gF25v@8C@1g825v@8D@1k425v@8E@1oF25v@8F@1oI25v@8G@1oH25v@8H@1o825v@8IO435v@8JPG35v@8KP835v@8LQ@1435v@8MQp35v@8NQf35v@8OR@1P35v@8PR@1035v@8QRq35v@8RS@1O35v@8SS@1035v@8TSq35v@8UT@1R35v@8VT@1235v@8WTs35v@8XU@1P35v@8YU@1035v@8ZUq35v@8aV@1T35v@8bV@1235v@8cVs35v@8dW@1T35v@8eW@1235v@8fWs35v@8gX@1F35v@8hXv35v@8iXl35v@8jY@1I35v@8kYx35v@8lYn35v@8mZ@1L35v@8nZy35v@8oZo35v@8pa@1V35v@8qa@1335v@8rat35v@8sb@1J35v@8tbx35v@8ubn35v@8vc@1Z35v@8wc@1535v@8xcv35v@8ydf35v@8zdV35v@90dL35v@91O435v@924845v@936g45v@946J45v@956C45v@969845v@979k45v@989S45v@99AL45v@9AAJ45v@9BBG45v@9CBZ45v@9DBW45v@9EBG45v@9FCR45v@9GCP45v@9JDP45v@9KDP45v@9LDG45v@9MEO45v@9NEU45v@9OET45v@9PEO45v@9QFO45v@9RFb45v@9SFa45v@9XIN45v@9YIG45v@9ZKJ45v@9aKC45v@9bN845v@9cOW45v@9dOV45v@9eOC45v@9fSq45v@9gSR45v@9hSK45v@9iUy45v@9jUU45v@9kUK45v@9lN845v@9m5465v@9n7T65v@9o7F65v@9p7865v@9qA465v@9rCT65v@9sCF65v@9tC865v@9uF465v@9vFa65v@9wFW65v@9xGT65v@9yGf65v@9zGF65v@A0G865v@A1J465v@A2KQ65v@A3KF65v@A4K865v@A5N465v@A6OS65v@A7OF65v@A8O865v@A9R465v@AASQ65v@ABSF65v@ACS865v@ADV465v@AEWQ65v@AFWF65v@AGW865v@AHc465v@AIdP65v@AJdW65v@AKdF65v@ALd865v@AMf465v@ANgP65v@AOgW65v@APgF65v@AQg865v@ARi465v@ASjP65v@ATjW65v@AUjF65v@AVj865v@AWo465v@AXpQ65v@AYpF65v@AZp865v@Aas465v@AbtQ65v@ActT65v@AdtF65v@Aet865v@Afw465v@AgxQ65v@AhxT65v@AixF65v@Ajx865v@Ak@10465v@Al@11Y65v@Am@11f65v@An@11p65v@Ao@11F65v@Ap@11865v@Aq@14465v@Ar@15R65v@As@15F65v@At@15865v@Au3485v@Av4F85v@Aw4885v@Ax8485v@Ay8g85v@Az8W85v@B09G85v@B19R85v@B29O85v@B39G85v@B4Ad85v@B5Ag85v@B6AF85v@B7AF85v@B8Bm85v@B9Bl85v@BBCd85v@BCCm85v@BDCF85v@BECF85v@BFDm85v@BGDl85v@BH9885v@BIG485v@BJHm85v@BKHI85v@BLH885v@BMG485v@BNK485v@BONF85v@BPN885v@BQV485v@BRVX85v@BSVT85v@BTWF85v@BUWj85v@BVWh85v@BWWn85v@BXWl85v@BYW885v@BZ9105v@BaAM05v@BbAC05v@BcA205v@Bd9105v@BeE105v@BfFM05v@BgFC05v@BhF205v@BiE105v@Bj4105v@Bk5D05v@Bl5B05v@Bn1005v@BoE155v@BpFO55v@BqFT55v@BrFR55v@BsF655v@BtGK55v@BuGs55v@BvGY55v@BwGI55v@BxIO55v@ByIT55v@BzIR55v@C0I655v@C1JG55v@C2JT55v@C3JR55v@C4JG55v@C5JZ55v@C7Jf55v@C8JE55v@C9LO55v@CALT55v@CBLR55v@CCL655v@CDMX55v@CEMg55v@CFMp55v@CGMf55v@CHM@1455v@CIMH55v@CJNF55v@CKNO55v@CLNY55v@CMNs55v@CNNr55v@CONX55v@CPND55v@CQOF55v@CROZ55v@CSOY55v@CTOD55v@CUP355v@CVPB55v@CWPZ55v@CXPk55v@CYPv55v@CZPS55v@CaPN55v@CbS255v@CcSa55v@CdSZ55v@CeS@1055v@CfSz55v@CgSM55v@ChS@1N55v@CiS@1M55v@CjSG55v@CkE155v@ClV155v@CmVY55v@CnVR55v@CoX155v@CpYB55v@CqY955v@CrYE55v@CsYI55v@CtYQ55v@CuYb55v@CvYG55v@CwYE55v@CxZ755v@CyZF55v@CzZR55v@D0ZQ55v@D1ZT55v@D2Zm55v@D3Z755v@D4aB55v@D5aJ55v@D6aV55v@D7aU55v@D8aX55v@D9ah55v@DAa455v@DBYm55v@DCYk55v@DDYk55v@DEYm55v@DGdZ55v@DHdY55v@DId@1155v@DJd@1055v@DKdD55v@DLd255v@DMC155v@DNCP55v@DOCK55v@DP9J55v@DQ9r55v@DR9X55v@DS9155v@DU8055v@DVF195v@DWH695v@DXHA95v@DYHL95v@DZHK95v@DaH495v@DbI695v@DcIE95v@DdI695v@DeJA95v@DfJ395v@DgMS95v@DhMg95v@DiMk95v@DjMe95v@DkMw95v@DlMt95v@DmMP95v@DnP795v@DoP595v@DpQ795v@DqQB95v@DrQ595v@DsR695v@DtR795v@DuRD95v@DvRA95v@DwRH95v@DxRI95v@DyRO95v@DzRL95v@E0RF95v@E1R495v@E2S695v@E3SB95v@E4SD95v@E5SI95v@E6SJ95v@E7SG95v@E8SO95v@E9SP95v@EASU95v@EBSW95v@ECSS95v@EDSM95v@EESb95v@EFSd95v@EGSi95v@EHSj95v@EISg95v@EJSZ95v@EKSo95v@ELSp95v@EMSu95v@ENSw95v@EOSs95v@EPSm95v@EQS895v@ERS495v@EST695v@ETT895v@EUTE95v@EVTB95v@EWTI95v@EXTK95v@EYTQ95v@EZTN95v@EaTG95v@EbTU95v@EcTY95v@EdTa95v@EeTW95v@EfTf95v@EgTh95v@EhTd95v@EiTS95v@EjTm95v@EkTo95v@ElTu95v@EmTr95v@EnTk95v@EoTy95v@EpT@1095v@EqT@1695v@ErT@1395v@EsTw95v@EtT@1A95v@EuT@1E95v@EvT@1G95v@EwT@1C95v@ExT@1L95v@EyT@1N95v@EzT@1J95v@F0T@1895v@F1T@1S95v@F2T@1Q95v@F3T495v@F4WX95v@F5Wa95v@F6Wd95v@F7WW95v@F8W895v@F9X695v@FAXB95v@FBXM95v@FCXJ95v@FDX695v@FEYA95v@FFY395v@FHZD95v@FIZI95v@FJZT95v@FKZQ95v@FLZD95v@FMaA95v@FNaH95v@FOaN95v@FPaM95v@FQaE95v@FRaQ95v@FSaT95v@FTaZ95v@FUaY95v@FVaf95v@FWac95v@FXa395v@FZcB95v@FacI95v@FbcO95v@FccN95v@FdcF95v@FecR95v@FfcU95v@Fgca95v@FhcZ95v@Ficg95v@Fjcd95v@Fkcq95v@Flcu95v@Fmc@1195v@Fnc@1795v@Foc@1695v@Fpcy95v@Fqc@1A95v@Frc@1D95v@Fsc@1J95v@Ftc@1I95v@Fuc@1P95v@Fvc@1M95v@Fwc395v@FxF195v@Fyh195v@Fzi995v@G0iO95v@G1iN95v@G2ii95v@G3in95v@G4i@1295v@G5iz95v@G6il95v@G7i295v@G86195v@G97D95v@GA7B95v@GB8D95v@GC8B95v@GD9G95v@GE9E95v@GG1095v@GHJ1A5v@GIKDA5v@GJKRA5v@GKKgA5v@GLKfA5v@GMKQA5v@GNKBA5v@GOJ1A5v@GPN1A5v@GQOAA5v@GROPA5v@GSOeA5v@GTOdA5v@GUOOA5v@GVO8A5v@GWP6A5v@GXPLA5v@GYPKA5v@GZPpA5v@GaPuA5v@GbP@19A5v@GcP@18A5v@GdP@1TA5v@GePsA5v@GfP6A5v@GgQBA5v@GhQ9A5v@GiTGA5v@GjTOA5v@GkTTA5v@GlTRA5v@GmTFA5v@GnUGA5v@GoUOA5v@GpUTA5v@GqURA5v@GrUFA5v@GsVGA5v@GtVLA5v@GuVQA5v@GvVOA5v@GwVFA5v@GxWGA5v@GyWLA5v@GzWQA5v@H0WOA5v@H1WFA5v@H2X5A5v@H3T3A5v@H4wgC5v@H5xGC5v@H6bGA5v@H7bOA5v@H8bTA5v@H9bRA5v@HAbhA5v@HBbfA5v@HCbFA5v@HDcGA5v@HEcOA5v@HFcTA5v@HGcRA5v@HHchA5v@HIcfA5v@HJcFA5v@HKd5A5v@HLdBA5v@HMd9A5v@HNe5A5v@HOeBA5v@HPe9A5v@HQf5A5v@HRf8A5v@HSfBA5v@HTv@19C5v@HUb3A5v@HVN1A5v@HWE1A5v@HXEcA5v@HYEhA5v@HZEmA5v@HaEXA5v@HbFGA5v@HcFEA5v@HdGKA5v@HeGTA5v@HfGIA5v@HhA0A5v@HiG1a5v@HjHDa5v@HkHRa5v@HlHga5v@HmHfa5v@HnHQa5v@HoHBa5v@HpK6a5v@HqKEa5v@HrKJa5v@HsKHa5v@HtK6a5v@HuL3a5v@HvLGa5v@HwLEa5v@HyMDa5v@HzMLa5v@I0MQa5v@I1MYa5v@I2MWa5v@I3MOa5v@I4MDa5v@I5N3a5v@I6NGa5v@I7NOa5v@I8NMa5v@I9NEa5v@IAP6a5v@IBPEa5v@ICPJa5v@IDPHa5v@IEP6a5v@IFQ3a5v@IGQGa5v@IHQEa5v@IJRDa5v@IKRLa5v@ILRQa5v@IMRYa5v@INRWa5v@IOROa5v@IPRDa5v@IQS3a5v@IRSGa5v@ISSOa5v@ITSMa5v@IUSEa5v@IVV2a5v@IWVLa5v@IXVKa5v@IYG1a5v@IZY1a5v@IaZAa5v@IbZXa5v@IcZAa5v@IdZna5v@IfZ@11a5v@IgZ8a5v@IhwgC5v@IixGC5v@IjbGa5v@IkbOa5v@IlbTa5v@ImbRa5v@Inbha5v@Iobfa5v@IpbFa5v@IqcGa5v@IrcOa5v@IscTa5v@ItcRa5v@Iucha5v@Ivcfa5v@IwcFa5v@Ixd5a5v@IydBa5v@Izd9a5v@J0e5a5v@J1eBa5v@J2e9a5v@J3f5a5v@J4fAa5v@J5fEa5v@J6fJa5v@J7fNa5v@J8fSa5v@J9v@19C5v@JAb3a5v@JBY1a5v@JCC1a5v@JDCWa5v@JECka5v@JFCoa5v@JGCRa5v@JHAKa5v@JIA1a5v@JJDFa5v@JKDDa5v@JM70a5v@JNE8b5v@JOERb5v@JPENb5v@JQEpb5v@JREyb5v@JSEjb5v@JTEYb5v@JUF8b5v@JVFQb5v@JWFMb5v@JXFob5v@JYF@13b5v@JZFib5v@JaFXb5v@JbG8b5v@JcGSb5v@JdGOb5v@JeGqb5v@JfG@15b5v@JgGkb5v@JhGZb5v@JiH8b5v@JjHRb5v@JkHNb5v@JlHpb5v@JmH@14b5v@JnHjb5v@JoHYb5v@JpI8b5v@JqIPb5v@JrILb5v@JsInb5v@JtIyb5v@JuIhb5v@JvIWb5v@Jw71b5v@Jx7Qb5v@Jy7Mb5v@Jz8Bb5v@K089b5v@K19Bb5v@K299b5v@K3ABb5v@K4A9b5v@K5BBb5v@K6B9b5v@K810b5v@K9C1c5v@KADBc5v@KBD9c5v@KCEBc5v@KDE9c5v@KEF9c5v@KFF2c5v@KGI1c5v@KHJGc5v@KIJEc5v@KJK9c5v@KKK2c5v@KLM1c5v@KMNGc5v@KNNEc5v@KOO9c5v@KPO2c5v@KQQ1c5v@KRRGc5v@KSREc5v@KTS9c5v@KUS2c5v@KVV1c5v@KWWGc5v@KXWEc5v@KYX9c5v@KZX2c5v@KaZ1c5v@KbaGc5v@KcaEc5v@Kdb9c5v@Keb2c5v@Kfd1c5v@KgeGc5v@KheEc5v@Kif9c5v@Kjf2c5v@Kki1c5v@KljHc5v@KmjFc5v@Knk9c5v@Kok2c5v@Kpn1c5v@KqoFc5v@KroDc5v@Ksp9c5v@Ktp2c5v@Kus1c5v@Kvt9c5v@KwtTc5v@Kxtdc5v@Kytmc5v@Kztkc5v@L0tSc5v@L1tGc5v@L2t7c5v@L3u8c5v@L4uSc5v@L5ucc5v@L6umc5v@L7ukc5v@L8uRc5v@L9uFc5v@LAu6c5v@LBv6c5v@LCvMc5v@LDvJc5v@LEv6c5v@LF@1wgC5v@LG@1xGC5v@LHx6c5v@LIy6c5v@LJz6c5v@LKzGc5v@LL@106c5v@LM@10Gc5v@LN@116c5v@LO@11Ic5v@LP@11Mc5v@LQ@11Yc5v@LR@11cc5v@LS@11oc5v@LT@11sc5v@LU@11@14c5v@LVx4c5v@LW@146c5v@LX@14Kc5v@LY@14Hc5v@LZ@146c5v@La@153c5v@Lb@15Jc5v@Lc@15Pc5v@Ld@15Ic5v@Les1c5v@Lh40c5v@LiG1d5v@LjIBd5v@LkI9d5v@LlIEd5v@LmIId5v@LnIXd5v@LoIGd5v@LpIEd5v@LqJ3d5v@LrJJd5v@LsJId5v@LtJTd5v@LuJSd5v@LvIid5v@LwIgd5v@LxIgd5v@LyIid5v@M0NBd5v@M1N9d5v@M2NEd5v@M3NId5v@M4NUd5v@M5NGd5v@M6NEd5v@M7O3d5v@M8OGd5v@M9OFd5v@MAOQd5v@MBOPd5v@MCROd5v@MDRbd5v@MERad5v@MFRNd5v@MGR7d5v@MHS4d5v@MISOd5v@MJSNd5v@MKT6d5v@MLT4d5v@MMT4d5v@MNT6d5v@MPWDd5v@MQWBd5v@MRWGd5v@MSWKd5v@MTWZd5v@MUWId5v@MVWGd5v@MWX9d5v@MXXMd5v@MYXLd5v@MZXcd5v@MaXsd5v@MbXrd5v@McXwd5v@MdXbd5v@MeX9d5v@MfY6d5v@MgYQd5v@MhYPd5v@MiZ8d5v@MjZ6d5v@MkZ6d5v@MlZ8d5v@Mmb8d5v@MnbOd5v@MobNd5v@MqbQd5v@Mrb6d5v@Msb6d5v@Mtb6d5v@MucAd5v@MvcQd5v@MwcPd5v@MxcSd5v@Mycdd5v@Mzcad5v@N0cAd5v@N1d7d5v@N2dUd5v@N3dTd5v@N4f6d5v@N5Wkd5v@N6Wid5v@N7Wid5v@N8Wkd5v@NANfd5v@NBNdd5v@NCNdd5v@NDNfd5v@NFm6d5v@NGmLd5v@NHmVd5v@NImTd5v@NJm6d5v@NKnCd5v@NLnAd5v@NMnFd5v@NNnJd5v@NOnYd5v@NPnHd5v@NQnFd5v@NRo8d5v@NSoOd5v@NToNd5v@NUoQd5v@NVojd5v@NWo8d5v@NXp9d5v@NYpPd5v@NZpOd5v@NapRd5v@Nbpcd5v@Ncp9d5v@NdqMd5v@NeqKd5v@Ngs6d5v@NhsNd5v@NisKd5v@NjsKd5v@NktAd5v@NltQd5v@NmtOd5v@NntAd5v@NouNd5v@NpuLd5v@Nqnjd5v@Nrnhd5v@Nsnhd5v@Ntnjd5v@Nw@10Jd5v@Nx@10Hd5v@Ny@122d5v@Nz@12Kd5v@O0@12Hd5v@O1@12Hd5v@O2G1d5v@O3@151d5v@O4@16Nd5v@O5@16Md5v@O6@19Bd5v@O7@199d5v@O8@19Ed5v@O9@19Id5v@OA@19Ud5v@OB@19Gd5v@OC@19Ed5v@OD@1A3d5v@OE@1AGd5v@OF@1AFd5v@OG@1ANd5v@OH@19fd5v@OI@19dd5v@OJ@19dd5v@OK@19fd5v@OM@1EBd5v@ON@1E9d5v@OO@1EEd5v@OP@1EId5v@OQ@1EXd5v@OR@1EGd5v@OS@1EEd5v@OT@1F3d5v@OU@1FJd5v@OV@1FId5v@OW@1FQd5v@OX@1Eid5v@OY@1Egd5v@OZ@1Egd5v@Oa@1Eid5v@Oc@151d5v@Od@1K1d5v@Oe@1L9d5v@Of@1LDd5v@Og@1LHd5v@Oh@1LMd5v@Oi@1LTd5v@Oj@1LXd5v@Ok@1LRd5v@Ol@1LKd5v@Om@1M3d5v@On@1M6d5v@Oo@1MAd5v@Op@1MEd5v@Oq@1MJd5v@Or@1MRd5v@Os@1MXd5v@Ot@1Mbd5v@Ou@1MVd5v@Ov@1MPd5v@Ow@1MHd5v@Ox@1N3d5v@Oy@1N6d5v@Oz@1NAd5v@P0@1NEd5v@P1@1NJd5v@P2@1NQd5v@P3@1NUd5v@P4@1NOd5v@P5@1NHd5v@P6@1O3d5v@P7@1O6d5v@P8@1OAd5v@P9@1OEd5v@PA@1OJd5v@PB@1ORd5v@PC@1OXd5v@PD@1Obd5v@PE@1OVd5v@PF@1OPd5v@PG@1OHd5v@PH@1L2d5v@PI@1S1d5v@PJ@1TEd5v@PK@1TOd5v@PL@1TCd5v@PM@1UEd5v@PN@1UNd5v@PO@1UMd5v@PP@1Ucd5v@PQ@1Uld5v@PR@1Ukd5v@PS@1UCd5v@PT@1V2d5v@PU@1VUd5v@PV@1Vad5v@PW@1Vld5v@PX@1VNd5v@PY@1VId5v@PZ@1S1d5v@PaD1d5v@Pc70d5v@Pe4me5v@Pf4le5v@Pg4@1Ke5v@Ph4@1We5v@Pi4@1Ve5v@Pj4@1ne5v@Pk4@1me5v@Pl4Ee5v@Pm5me5v@Pn5le5v@Po5@1Ke5v@Pp5@1We5v@Pq5@1Ve5v@Pr5@1te5v@Ps5@1se5v@Pt5Ee5v@Pu6me5v@Pv6le5v@Pw6@1Ke5v@Px6@1We5v@Py6@1Ve5v@Pz6@1ne5v@Q06@1me5v@Q16Ee5v@Q27ke5v@Q37je5v@Q47@1Ie5v@Q57@1Ue5v@Q67@1Te5v@Q77@1ne5v@Q87@1me5v@Q97Ee5v@QA8le5v@QB8ke5v@QC8@1Je5v@QD8@1Ve5v@QE8@1Ue5v@QF8@1oe5v@QG8@1ne5v@QH8Ee5v@QI9ne5v@QJ9me5v@QK9@1Le5v@QL9@1Xe5v@QM9@1We5v@QN9@1se5v@QO9@1re5v@QP9Ee5v@QQAme5v@QRAle5v@QSA@1Ke5v@QTA@1We5v@QUA@1Ve5v@QVA@1pe5v@QWA@1oe5v@QXAEe5v@Qb30e5v@Qd4Tp5v@Qe4Ep5v@Qf5Wp5v@Qg5Ep5v@Qh6Xp5v@Qi6Ep5v@Qj7Qp5v@Qk7Ep5v@Ql8Rp5v@Qm8Ep5v@Qn9Yp5v@Qo9Ep5v@QqC8p5v@QrDQp5v@QsDKp5v@QtERp5v@QuELp5v@QvFKp5v@QwFIp5v@QxGLp5v@QyGJp5v@QzIBp5v@R0I9p5v@R1IEp5v@R2IIp5v@R3IRp5v@R4IGp5v@R5IEp5v@R6JBp5v@R7JLp5v@R8JKp5v@R9J9p5v@RAK7p5v@RBKCp5v@RCKLp5v@RDKIp5v@REK7p5v@RFL4p5v@RGLNp5v@RHLSp5v@RILMp5v@RJM4p5v@RKMQp5v@RLMVp5v@RMMPp5v@RNN4p5v@RONLp5v@RPNKp5v@RROEp5v@RSOJp5v@RTOSp5v@RUOPp5v@RVOEp5v@RWP4p5v@RXPQp5v@RYPVp5v@RZPPp5v@RaQ4p5v@RbQRp5v@RcQWp5v@RdQQp5v@ReR4p5v@RfRLp5v@RgRKp5v@RiSEp5v@RjSJp5v@RkSSp5v@RlSPp5v@RmSEp5v@RnTMp5v@RoTKp5v@RpU4p5v@RqULp5v@RrUKp5v@RtVEp5v@RuVJp5v@RvVSp5v@RwVPp5v@RxVEp5v@RyWNp5v@RzWLp5v@S0X4p5v@S1XLp5v@S2XKp5v@S4YEp5v@S5YJp5v@S6YSp5v@S7YPp5v@S8YEp5v@S9Z4p5v@SAZNp5v@SBZSp5v@SCZLp5v@SDa4p5v@SEaNp5v@SFaSp5v@SGaLp5v@SHb4p5v@SIbLp5v@SJbKp5v@SLd6p5v@SMd4p5v@SNd4p5v@SOd6p5v@SQC8p5v@SRi8p5v@SSj9p5v@STjap5v@SUjZp5v@SVj2p5v@SWl8p5v@SXm9p5v@SYmbp5v@SZmap5v@Sam2p5v@Sbo8p5v@Scp9p5v@SdpXp5v@SepWp5v@Sfp2p5v@Sgr8p5v@ShsAp5v@SisYp5v@SjsXp5v@Sks9p5v@Sls2p5v@So30p5v@Sr10w5v@Ss21r5v@St2Hr5v@Sv10r5v@Sw61s5v@Sx76s5v@Sy7Ms5v@Sz7Qs5v@T07ms5v@T17vs5v@T27ls5v@T37Ps5v@T476s5v@T58Js5v@T68es5v@T78ns5v@T88ds5v@T98@12s5v@TA8Hs5v@TB9Fs5v@TC9Os5v@TD9Ys5v@TE9ss5v@TF9rs5v@TG9Xs5v@TH9Ds5v@TIAFs5v@TJAZs5v@TKAYs5v@TLADs5v@TMC3s5v@TNCBs5v@TOCZs5v@TPCks5v@TQCvs5v@TRCSs5v@TSCNs5v@TTE2s5v@TUERs5v@TVEGs5v@TWFHs5v@TXFGs5v@TYF6s5v@TZG5s5v@TaGEs5v@TcGIs5v@TdG3s5v@TeG3s5v@TfG3s5v@TgIHs5v@ThIGs5v@TiI6s5v@TjJ5s5v@TkJEs5v@TmJIs5v@TnJ3s5v@ToJ3s5v@TpJ3s5v@TqLHs5v@TrLGs5v@TsL6s5v@TtM5s5v@TuMEs5v@TwMIs5v@TxM3s5v@TyM3s5v@TzM3s5v@U0OHs5v@U1OGs5v@U2O6s5v@U3P5s5v@U4PEs5v@U6PIs5v@U7P3s5v@U8P3s5v@U9P3s5v@UAR2s5v@UBRBs5v@UCRPs5v@UDS2s5v@UESIs5v@UFSRs5v@UGScs5v@UHSbs5v@UISGs5v@UJ61s5v@UKV1s5v@ULVYs5v@UMVRs5v@UN41s5v@UO4Ps5v@UP4Ks5v@UR30s5v@US91t5v@UTA2t5v@UUAHt5v@UV91t5v@UWD1t5v@UXEHt5v@UYEWt5v@UZEDt5v@UaE2t5v@UbH1t5v@UcI9t5v@UdISt5v@UeIRt5v@UfI2t5v@UgL1t5v@UhM2t5v@UiMCt5v@UjMJt5v@UkMHt5v@UlL1t5v@UmP1t5v@UnQ2t5v@UoQJt5v@UpQIt5v@UqP1t5v@Ur41t5v@Us4Kt5v@Ut4Dt5v@Uu5Et5v@Uv5Ct5v@Ux10t5v@Uy58u5v@Uz6Bu5v@V069u5v@V16Eu5v@V26Iu5v@V36Mu5v@V46Wu5v@V56Uu5v@V66Gu5v@V76Eu5v@V87Ou5v@V97Ru5v@VA7Vu5v@VB7Nu5v@VC75u5v@VD87u5v@VE8Cu5v@VF8Bu5v@VG85u5v@VH93u5v@VI98u5v@VJ9Du5v@VK9Iu5v@VL9Hu5v@VM9Bu5v@VNA3u5v@VOA8u5v@VPADu5v@VQABu5v@VR6bu5v@VS6Zu5v@VT6Zu5v@VU6bu5v@VW58u5v@VXF8u5v@VYGGu5v@VZGLu5v@VaGIu5v@VbGPu5v@VcGTu5v@VdGRu5v@VeGXu5v@VfGVu5v@VgGNu5v@VhGEu5v@ViH6u5v@VjHKu5v@VkHIu5v@VlH6u5v@VmJAu5v@VnJ3u5v@VpKDu5v@VqKRu5v@VrKPu5v@VsKDu5v@VtN8u5v@VuN7u5v@VvNCu5v@VwNRu5v@VxNOu5v@VyNAu5v@VzNZu5v@W0Nfu5v@W1Ndu5v@W2NWu5v@W3O8u5v@W4O7u5v@W5OCu5v@W6ORu5v@W7OOu5v@W8OAu5v@W9OZu5v@WAOfu5v@WBOdu5v@WCOWu5v@WDN4u5v@WEM3u5v@WGSCu5v@WHSBu5v@WISHu5v@WJSNu5v@WKSLu5v@WLSEu5v@WMSAu5v@WNS3u5v@WOF8u5v@WR30u5v@WS58v5v@WT5gv5v@WU5bv5v@WV5Qv5v@WWC1v5v@WXDIv5v@WYDQv5v@WZDDv5v@WaD2v5v@WbG1v5v@WcH9v5v@WdHJv5v@WeHGv5v@WfHNv5v@WgHQv5v@WhHav5v@WiHXv5v@WjH2v5v@WkK1v5v@WlLIv5v@WmLRv5v@WnLVv5v@WoLPv5v@WpLZv5v@WqLiv5v@WrLmv5v@WsLgv5v@WtLDv5v@WuL2v5v@WvO1v5v@WwPIv5v@WxPRv5v@WyPVv5v@WzPPv5v@X0PZv5v@X1Piv5v@X2Pmv5v@X3Pgv5v@X4PDv5v@X5P2v5v@X6S1v5v@X7TIv5v@X8TRv5v@X9TPv5v@XATUv5v@XBTdv5v@XCTbv5v@XDTDv5v@XET2v5v@XFW1v5v@XGXIv5v@XHXRv5v@XIXPv5v@XJXUv5v@XKXdv5v@XLXbv5v@XMXDv5v@XNX2v5v@XOa1v5v@XPb9v5v@XQbJv5v@XRbGv5v@XSbNv5v@XTbXv5v@XUbUv5v@XVbLv5v@XWb2v5v@XXe1v5v@XYfRv5v@XZfXv5v@XafUv5v@Xbf2v5v@Xci1v5v@XdkIv5v@Xek6v5v@Xfk6v5v@XglIv5v@Xhl5v5v@Xim3v5v@XjmDv5v@XkmAv5v@XlmAv5v@Xmn3v5v@XnnDv5v@XonAv5v@XpnAv5v@Xqp9v5v@Xrp2v5v@Xss1v5v@XtuLv5v@Xuu9v5v@Xvv2v5v@XwvIv5v@Xxw9v5v@Xyw2v5v@Xzz1v5v@Y0@109v5v@Y1@10Jv5v@Y2@10Nv5v@Y3@10Gv5v@Y4@10Qv5v@Y5@10Tv5v@Y6@10dv5v@Y7@10hv5v@Y8@10av5v@Y9@102v5v@YA71v5v@YB8Bv5v@YC89v5v@YD9Bv5v@YE99v5v@YG10v5v@YJ@1u425v@YK@10835v@YL@11i35v@YM@11J35v@YN@11C35v@YOt835v@YPtU35v@YQtK35v@YRti35v@YSta35v@YTuZ35v@YUuf35v@YVuC35v@YWvX35v@YXvd35v@YYvg35v@YZvC35v@YawR35v@YbwP35v@YcxP35v@YdxN35v@Yfh435v@Yg@16835v@Yh@16O35v@Yi@16K35v@Yj@16Y35v@Yk@16U35v@Yl@16l35v@Ym@16o35v@Yn@16g35v@Yo@17X35v@Yp@17d35v@Yq@17g35v@Yr@17C35v@Yt@15435v@Yu@1Bn35v@Yv@1B@1335v@Yw@1Bz35v@Yx@1B@1D35v@Yy@1B@1935v@Yz@1B@1Q35v@Z0@1B@1T35v@Z1@1B@1L35v@Z3@1B435v@Z4@1Cm35v@Z5@1C@1235v@Z6@1Cy35v@Z7@1C@1C35v@Z8@1C@1835v@Z9@1C@1P35v@ZA@1C@1S35v@ZB@1C@1K35v@ZD@1C435v@ZE@1Dn35v@ZF@1D@1335v@ZG@1Dz35v@ZH@1D@1D35v@ZI@1D@1935v@ZJ@1D@1Q35v@ZK@1D@1T35v@ZL@1D@1L35v@ZN@1D435v@ZO@1En35v@ZP@1E@1335v@ZQ@1Ez35v@ZR@1E@1D35v@ZS@1E@1935v@ZT@1E@1Q35v@ZU@1E@1T35v@ZV@1E@1L35v@ZX@1E435v@ZY@1Fp35v@ZZ@1F@1535v@Za@1F@1135v@Zb@1F@1F35v@Zc@1F@1B35v@Zd@1F@1S35v@Ze@1F@1V35v@Zf@1F@1N35v@Zh@1F435v@Zi@1Gp35v@Zj@1G@1535v@Zk@1G@1135v@Zl@1G@1F35v@Zm@1G@1B35v@Zn@1G@1S35v@Zo@1G@1V35v@Zp@1G@1N35v@Zr@1G435v@Zs@1Hi35v@Zt@1Hy35v@Zu@1Hu35v@Zv@1H@1835v@Zw@1H@1435v@Zx@1H@1L35v@Zy@1H@1O35v@Zz@1H@1G35v@a1@1H435v@a2@1Io35v@a3@1I@1435v@a4@1I@1035v@a5@1I@1E35v@a6@1I@1A35v@a7@1I@1R35v@a8@1I@1U35v@a9@1I@1M35v@aB@1I435v@aC@1Jj35v@aD@1Jz35v@aE@1Jv35v@aF@1J@1935v@aG@1J@1535v@aH@1J@1M35v@aI@1J@1P35v@aJ@1J@1H35v@aL@1J435v@aM@1Km35v@aN@1K@1235v@aO@1Ky35v@aP@1K@1C35v@aQ@1K@1835v@aR@1K@1P35v@aS@1K@1S35v@aT@1K@1K35v@aV@1K435v@aW@1Ll35v@aX@1L@1135v@aY@1Lx35v@aZ@1L@1B35v@aa@1L@1735v@ab@1L@1O35v@ac@1L@1R35v@ad@1L@1J35v@af@1L435v@ag@1Mq35v@ah@1M@1635v@ai@1M@1235v@aj@1M@1G35v@ak@1M@1C35v@al@1M@1T35v@am@1M@1W35v@an@1M@1O35v@ap@1M435v@aq@1Nk35v@ar@1N@1035v@as@1Nw35v@at@1N@1A35v@au@1N@1635v@av@1N@1N35v@aw@1N@1Q35v@ax@1N@1I35v@az@1N435v@b0@1Os35v@b1@1O@1835v@b2@1O@1435v@b3@1O@1I35v@b4@1O@1E35v@b5@1O@1V35v@b6@1O@1Y35v@b7@1O@1Q35v@b9@1O435v@bA68E5v@bB7OE5v@bC7ME5v@bE44E5v@bGBcI5v@bHBLI5v@bIHgI5v@bJHLI5v@bKIhI5v@bLILI5v@bMJfI5v@bNJLI5v@bP@14FI5v@bQ@15jI5v@bR@15qI5v@bS@15tI5v@bT@15iI5v@bU@15JI5v@bV@15CI5v@bW@188I5v@bZ@19LI5v@ba@19LI5v@bb@19CI5v@bc@1AGI5v@bd@1AHI5v@bi@1DCI5v@bl@1FLI5v@bm@1FLI5v@bn@1FCI5v@bo@1GGI5v@bp@1GHI5v@bu@188I5v@bv@1K8I5v@bw@1LLI5v@bx@1LJI5v@by@1MdI5v@bz@1MGI5v@c0@1MEI5v@c1@1NII5v@c2@1NJI5v@c3@1NGI5v@c4@1OGI5v@c5@1OEI5v@c6@1PJI5v@c7@1PNI5v@c8@1PLI5v@c9@1PJI5v@cA@1QOI5v@cB@1QQI5v@cC@1QRI5v@cD@1QRI5v@cE@1QRI5v@cF@1QQI5v@cG@1QPI5v@cH@1QGI5v@cI@1S@18I5v@cJ@1S@1AI5v@cK@1S@1BI5v@cL@1S@1BI5v@cM@1S@1BI5v@cN@1S@1AI5v@cO@1S@19I5v@cP@1S@1GI5v@cQ@1S@1II5v@cR@1S@1JI5v@cS@1S@1JI5v@cT@1S@1JI5v@cU@1S@1II5v@cV@1S@1HI5v@cW@1StI5v@cX@1SnI5v@cY@1S@1PI5v@cZ@1T@1EI5v@ca@1T@1GI5v@cb@1T@1KI5v@cc@1T@1II5v@cd@1T@1FI5v@ce@1T@1OI5v@cf@1T@1mI5v@cg@1T@1oI5v@ch@1T@1pI5v@ci@1T@1pI5v@cj@1T@1pI5v@ck@1T@1oI5v@cl@1T@1nI5v@cm@1T@1uI5v@cn@1T@1wI5v@co@1T@1xI5v@cp@1T@1xI5v@cq@1T@1xI5v@cr@1T@1wI5v@cs@1T@1vI5v@ct@1TyI5v@cu@1TsI5v@cv@1T@23I5v@cw@1U@1CI5v@cx@1U@1EI5v@cy@1U@1II5v@cz@1U@1GI5v@d0@1U@1DI5v@d1@1U@1MI5v@d2@1U@1lI5v@d3@1U@1nI5v@d4@1U@1oI5v@d5@1U@1oI5v@d6@1U@1oI5v@d7@1U@1nI5v@d8@1U@1mI5v@d9@1U@1tI5v@dA@1U@1vI5v@dB@1U@1wI5v@dC@1U@1wI5v@dD@1U@1wI5v@dE@1U@1vI5v@dF@1U@1uI5v@dG@1UwI5v@dH@1UqI5v@dI@1U@22I5v@dJ@1V@1FI5v@dK@1V@1HI5v@dL@1V@1LI5v@dM@1V@1JI5v@dN@1V@1GI5v@dO@1V@1PI5v@dP@1V@1oI5v@dQ@1V@1qI5v@dR@1V@1rI5v@dS@1V@1rI5v@dT@1V@1rI5v@dU@1V@1qI5v@dV@1V@1pI5v@dW@1V@1wI5v@dX@1V@1yI5v@dY@1V@1zI5v@dZ@1V@1zI5v@da@1V@1zI5v@db@1V@1yI5v@dc@1V@1xI5v@dd@1VzI5v@de@1VtI5v@df@1V@25I5v@dg@1W@1DI5v@dh@1W@1FI5v@di@1W@1JI5v@dj@1W@1HI5v@dk@1W@1EI5v@dl@1W@1NI5v@dm@1W@1nI5v@dn@1W@1pI5v@do@1W@1qI5v@dp@1W@1qI5v@dq@1W@1qI5v@dr@1W@1pI5v@ds@1W@1oI5v@dt@1W@1vI5v@du@1W@1xI5v@dv@1W@1yI5v@dw@1W@1yI5v@dx@1W@1yI5v@dy@1W@1xI5v@dz@1W@1wI5v@e0@1WxI5v@e1@1WrI5v@e2@1W@24I5v@e3@1Z@1CI5v@e4@1Z@1EI5v@e5@1Z@1FI5v@e6@1Z@1FI5v@e7@1Z@1FI5v@e8@1Z@1EI5v@e9@1Z@1DI5v@eA@1Z@1KI5v@eB@1Z@1MI5v@eC@1Z@1NI5v@eD@1Z@1NI5v@eE@1Z@1NI5v@eF@1Z@1MI5v@eG@1Z@1LI5v@eH@1Z@1SI5v@eI@1Z@1UI5v@eJ@1Z@1VI5v@eK@1Z@1VI5v@eL@1Z@1VI5v@eM@1Z@1UI5v@eN@1Z@1TI5v@eO@1ZvI5v@eP@1ZpI5v@eQ@1Z@1bI5v@eR@1c@10I5v@eS@1c@12I5v@eT@1c@13I5v@eU@1c@13I5v@eV@1c@13I5v@eW@1c@12I5v@eX@1c@11I5v@eY@1c@18I5v@eZ@1crI5v@ea@1clI5v@eb@1c@1FI5v@ec@1dyI5v@ed@1d@10I5v@ee@1d@11I5v@ef@1d@11I5v@eg@1d@11I5v@eh@1d@10I5v@ei@1dzI5v@ej@1d@16I5v@ek@1dpI5v@el@1djI5v@em@1d@1EI5v@en@1gxI5v@eo@1gzI5v@ep@1g@10I5v@eq@1g@10I5v@er@1g@10I5v@es@1gzI5v@et@1gyI5v@eu@1gnI5v@ev@1ghI5v@ew@1g@16I5v@ex@1iaI5v@eyGf25v@ezHn25v@f0@1iZI5v@f1@1iiI5v@f2@1lGI5v@f3@1lRI5v@f4@1lQI5v@f6@1pGI5v@f7@1pjI5v@f8@1ptI5v@f9@1prI5v@fA@1pGI5v@fD@1qPI5v@fE@1qPI5v@fF@1qGI5v@fG@1rKI5v@fH@1rMI5v@fI@1rLI5v@fN@1vJI5v@fO@1vCI5v@fP@1y8I5v@fQ@1zCI5v@fR@1zLI5v@fS@1zII5v@fT@1zCI5v@fU@20GI5v@fV@20LI5v@fW@20WI5v@fX@20TI5v@fY@20GI5v@fZ@20@1DI5v@fa@20jI5v@fb@20ZI5v@fc@21eI5v@fd@21JI5v@fe@21CI5v@ffN8I5v@fgNzI5v@fhNlI5v@fiN@1KI5v@fjN@15I5v@fkOcI5v@flObI5v@fmOkI5v@fnHn25v@foONI5v@fpPGI5v@fqPEI5v@frQGI5v@fsQEI5v@ftRGI5v@fuREI5v@fvScI5v@fwSbI5v@fxSiI5v@fySqI5v@fzSoI5v@g0Hn25v@g1SNI5v@g2TcI5v@g3TbI5v@g4TkI5v@g5TuI5v@g6TsI5v@g7Hn25v@g8TNI5v@g9UcI5v@gAUbI5v@gBUlI5v@gCUwI5v@gDUuI5v@gEHn25v@gFUNI5v@gGVOI5v@gHVdI5v@gIVaI5v@gJViI5v@gKVzI5v@gLVyI5v@gMV@1DI5v@gNV@1PI5v@gOV@1NI5v@gPV@1TI5v@gQV@1RI5v@gRHn25v@gSVNI5v@gTWOI5v@gUWeI5v@gVWbI5v@gWWjI5v@gXW@10I5v@gYWzI5v@gZW@1FI5v@gaW@1RI5v@gbW@1PI5v@gcW@1VI5v@gdW@1TI5v@geHn25v@gfWNI5v@ggYOI5v@ghYlI5v@giYiI5v@gjYrI5v@gkHn25v@glYNI5v@gmZYI5v@gnZWI5v@gobNI5v@gpbLI5v@gqdQI5v@grdQI5v@gsdfI5v@gtdOI5v@gueRI5v@gveRI5v@gwehI5v@gxePI5v@gygVI5v@gzgUI5v@h0gII5v@h1hWI5v@h2hVI5v@h3hJI5v@h4ibI5v@h5iaI5v@h6iOI5v@h7jcI5v@h8jbI5v@h9jPI5v@hAlMI5v@hBlKI5v@hCmMI5v@hDmKI5v@hEoGI5v@hFoEI5v@hGpOI5v@hHpWI5v@hIpUI5v@hJpZI5v@hKpdI5v@hLpbI5v@hMHn25v@hNpNI5v@hOqOI5v@hPqXI5v@hQqVI5v@hRqaI5v@hSqeI5v@hTqcI5v@hUHn25v@hVqNI5v@hWrOI5v@hXrcI5v@hYraI5v@hZrfI5v@harrI5v@hbrpI5v@hcrvI5v@hdrtI5v@heHn25v@hfrNI5v@hgsOI5v@hhsdI5v@hisbI5v@hjsgI5v@hkssI5v@hlsqI5v@hmswI5v@hnsuI5v@hoHn25v@hpsNI5v@hqtOI5v@hrtUI5v@hstSI5v@httXI5v@hutfI5v@hvtdI5v@hwHn25v@hxtNI5v@hyvYI5v@hzvCI5v@i0wfI5v@i1wmI5v@i2wuI5v@i3w@17I5v@i4wCI5v@i5xXI5v@i6xCI5v@i844I5v@i968K5v@iA6cK5v@iB6cK5v@iC6jK5v@iE6@14K5v@iF6XK5v@iG7NK5v@iH7LK5v@iI8OK5v@iJ8MK5v@iL24K5v@iM58M5v@iN5dM5v@iO5YM5v@iP6LM5v@iQ6JM5v@iR7LM5v@iS7JM5v@iU24M5v@iV58L5v@iW5rL5v@iX5xL5v@iY5@10L5v@iZ5mL5v@ia6QL5v@ib6OL5v@ic7OL5v@id7ML5v@if24L5v@ig38N5v@ih3XN5v@ii3tN5v@ij3wN5v@ik3SN5v@im24N5v@in48O5v@io4fO5v@ip4@13O5v@iq4@16O5v@ir4aO5v@is5QO5v@it5OO5v@iv24O5v@iw48P5v@ix4bP5v@iy4WP5v@iz5SP5v@j05QP5v@j224P5v@j3MFC5v@j4HbC5v@j5HLC5v@j6IYC5v@j7ILC5v@j8OlC5v@j9O@1CC5v@jAO@1iC5v@jBOCC5v@jCPlC5v@jDP@19C5v@jEP@1cC5v@jFPCC5v@jGRCC5v@jHRoC5v@jIRnC5v@jJSCC5v@jKSqC5v@jLSpC5v@jNVFC5v@jOarC5v@jPaCC5v@jQdlC5v@jRd@19C5v@jSd@1cC5v@jTdCC5v@jUgGC5v@jVgEC5v@jWhbC5v@jXhZC5v@jYieC5v@jZicC5v@jakGC5v@jbkEC5v@jclgC5v@jdleC5v@jemjC5v@jfmhC5v@jgVFC5v@jhpFC5v@jirVC5v@jjrTC5v@jkssC5v@jls@1GC5v@jms@1jC5v@jnsJC5v@josCC5v@jpvFC5v@jqv@19C5v@jrv@15C5v@jswgC5v@jtxGC5v@juyGC5v@jvyMC5v@jwyRC5v@jxyYC5v@jyygC5v@jzyjC5v@k0ymC5v@k1ypC5v@k2wJC5v@k3wCC5v@k4@11FC5v@k5@11@1LC5v@k6@11@1HC5v@k7@12GC5v@k8@12UC5v@k9@12SC5v@kA@12GC5v@kB@12XC5v@kC@17CC5v@kD@1DGC5v@kE@1DQC5v@kF@1DNC5v@kG@1DGC5v@kH@1EkC5v@kI@1FKC5v@kJ@1GVC5v@kK@1GdC5v@kL@1GKC5v@kM@1HKC5v@kN@1HTC5v@kO@1HhC5v@kP@1HfC5v@kQ@1HRC5v@kR@1IVC5v@kS@1IcC5v@kT@1IaC5v@kU@1IKC5v@kV@1JKC5v@kW@1KKC5v@kX@1KNC5v@kY@1KQC5v@kZ@1KTC5v@ka@1ENC5v@kb@1EGC5v@kc@1NGC5v@kd@1NQC5v@ke@1NNC5v@kf@1NGC5v@kg@1OkC5v@kh@1PKC5v@ki@1QKC5v@kj@1QTC5v@kk@1QhC5v@kl@1QfC5v@km@1QRC5v@kn@1RVC5v@ko@1RdC5v@kp@1RKC5v@kq@1SKC5v@kr@1TVC5v@ks@1TcC5v@kt@1TaC5v@ku@1TKC5v@kv@1UKC5v@kw@1UNC5v@kx@1UQC5v@ky@1UTC5v@kz@1ONC5v@l0@1OGC5v@l1@1hGC5v@l2@1hUC5v@l3@1hSC5v@l4@1hWC5v@l5@1haC5v@l6@1hZC5v@l7@1hGC5v@l8@1ikC5v@l9@1jKC5v@lA@1kKC5v@lB@1kSC5v@lC@1kaC5v@lD@1kgC5v@lE@1kmC5v@lF@1kzC5v@lG@1k@12C5v@lH@1k@15C5v@lI@1k@18C5v@lJ@1iNC5v@lK@1iGC5v@lL@1nZC5v@lM@1oGC5v@lN@1pGC5v@lO@1pOC5v@lP@1pWC5v@lQ@1pcC5v@lR@1piC5v@lS@1pvC5v@lT@1pyC5v@lU@1p@11C5v@lV@1p@14C5v@lW@1p@17C5v@lX@1p@1AC5v@lY@1p@1DC5v@lZ@1nCC5v@la@1slC5v@lb@1sJC5v@lc@1sCC5v@ld@1vFC5v@le@1v@1BC5v@lf@1v@17C5v@lg@1wgC5v@lh@1xGC5v@li@1yGC5v@lj@1yMC5v@lk@1yRC5v@ll@1yYC5v@lm@1ygC5v@ln@1yjC5v@lo@1ymC5v@lp@1ypC5v@lq@1wJC5v@lr@1wCC5v@ls@21FC5v@lt@21@18C5v@lu@21@14C5v@lv@22gC5v@lw@23GC5v@lx@24GC5v@ly@24KC5v@lz@24OC5v@m0@24SC5v@m1@24WC5v@m2@24aC5v@m3@24eC5v@m4@24hC5v@m5@24kC5v@m6@24nC5v@m7@22JC5v@m8@22CC5v@m9@27FC5v@mA@27@1CC5v@mB@27@18C5v@mC@2AgC5v@mD@2BGC5v@mE@2CGC5v@mF@2CKC5v@mG@2COC5v@mH@2CSC5v@mI@2CWC5v@mJ@2CaC5v@mK@2CeC5v@mL@2CiC5v@mM@2CmC5v@mN@2CpC5v@mO@2CsC5v@mP@2CvC5v@mQ@2AJC5v@mR@2ACC5v@mS@2FFC5v@mT@2GGC5v@mU@2GEC5v@mV@2HlC5v@mW@2H@19C5v@mX@2H@1cC5v@mY@2HCC5v@mZ@1wgC5v@ma@1xGC5v@mb@2IjC5v@mc@2ImC5v@md@2IpC5v@me@2IqC5v@mf@2IvC5v@mg@2IwC5v@mh@2I@11C5v@mi@2I@14C5v@mj@2I@17C5v@mk@1v@1BC5v@ml@2IiC5v@mm@2ICC5v@mpFBC5v@mrKoQ5v@msKrQ5v@mtKnQ5v@muKLQ5v@mwLFQ5v@mxMYQ5v@myMlQ5v@mzMWQ5v@n0NCQ5v@n1NkQ5v@n2OKQ5v@n3OXQ5v@n4OIQ5v@n5PLQ5v@n6PYQ5v@n7PJQ5v@n8RGQ5v@n9RGQ5v@nATMQ5v@nBTfQ5v@nCTKQ5v@nDUYQ5v@nEU@19Q5v@nFU@18Q5v@nGUWQ5v@nHVKQ5v@nIVdQ5v@nJVaQ5v@nKVKQ5v@nLWgQ5v@nMWaQ5v@nNXzQ5v@nOX@1IQ5v@nPXyQ5v@nQXTQ5v@nRY@10Q5v@nSY@1JQ5v@nTYzQ5v@nUYUQ5v@nVZKQ5v@nWZiQ5v@nXZgQ5v@nYaKQ5v@nZajQ5v@naahQ5v@nbbzQ5v@ncb@1cQ5v@ndb@1mQ5v@neb@1bQ5v@nfbUQ5v@ngbOQ5v@nhc@1BQ5v@nic@1UQ5v@njc@1cQ5v@nkc@1vQ5v@nlc@24Q5v@nmciQ5v@nnccQ5v@nodKQ5v@npduQ5v@nqdsQ5v@nreKQ5v@nseSQ5v@ntfKQ5v@nufTQ5v@nvfmQ5v@nwfSQ5v@nxgKQ5v@nygUQ5v@nzh@11Q5v@o0h@1IQ5v@o1h@1OQ5v@o2hKQ5v@o3iKQ5v@o4irQ5v@o5iyQ5v@o6iwQ5v@o7kKQ5v@o8kXQ5v@o9kIQ5v@oAlKQ5v@oBlXQ5v@oClIQ5v@oDmMQ5v@oEmbQ5v@oFmkQ5v@oGmiQ5v@oHmKQ5v@oInMQ5v@oJnbQ5v@oKnlQ5v@oLnjQ5v@oMnKQ5v@oNoXQ5v@oOobQ5v@oPoZQ5v@oQogQ5v@oRokQ5v@oSoiQ5v@oToqQ5v@oUouQ5v@oVosQ5v@oWo@13Q5v@oXo@11Q5v@oYo@19Q5v@oZo@1DQ5v@oao@1BQ5v@obo@1NQ5v@oco@1LQ5v@odoWQ5v@oeoUQ5v@ogrvQ5v@ohr@1YQ5v@oir@1fQ5v@ojr@1XQ5v@okrQQ5v@olrKQ5v@omsGQ5v@onsOQ5v@ootGQ5v@optPQ5v@oqtfQ5v@ortsQ5v@osteQ5v@ottyQ5v@out@1BQ5v@ovtxQ5v@owtOQ5v@oxuGQ5v@oyuQQ5v@ozvcQ5v@p0vWQ5v@p1wGQ5v@p2weQ5v@p3wcQ5v@p4xGQ5v@p5xfQ5v@p6xdQ5v@p7yxQ5v@p8y@1EQ5v@p9y@1KQ5v@pAyGQ5v@pBzXQ5v@pCzcQ5v@pDzhQ5v@pEzmQ5v@pFzWQ5v@pGzUQ5v@pH@11gQ5v@pI@11xQ5v@pJ@11@14Q5v@pK@11QQ5v@pL@11KQ5v@pM@12lQ5v@pN@12uQ5v@pO@12@1BQ5v@pP@12@1QQ5v@pQ@12@1XQ5v@pR@12CQ5v@pS@13JQ5v@pT@13CQ5v@pU@16FQ5v@pV@17HQ5v@pW@17OQ5v@pX@17UQ5v@pY@17SQ5v@pZ@17LQ5v@pa@17bQ5v@pb@17YQ5v@pc@17HQ5v@pd@17lQ5v@pe@17eQ5v@pf@18QQ5v@pg@18WQ5v@ph@18UQ5v@pi@18OQ5v@pj@18ZQ5v@pk@18iQ5v@pl@18gQ5v@pm@18ZQ5v@pn@19GQ5v@po@19NQ5v@pp@19KQ5v@pq@19GQ5v@pr@18lQ5v@ps@18vQ5v@pt@18sQ5v@pu@18lQ5v@pw@1BJQ5v@px@1BPQ5v@py@1BNQ5v@pz@1BCQ5v@q0@1q8Q5v@q1@1sGQ5v@q2@1seQ5v@q3@1tGQ5v@q4@1wGQ5v@q5@1wJQ5v@q6@1xGQ5v@q7@1rJQ5v@q8@1rJQ5v@q9@1yLQ5v@qBLT25v@qC@1ycQ5v@qDLj25v@qE@1ybQ5v@qF@1rCQ5v@qG@218Q5v@qH@23GQ5v@qI@23eQ5v@qJ@24GQ5v@qK@27GQ5v@qL@27JQ5v@qM@28GQ5v@qN@29GQ5v@qO@22JQ5v@qP@22JQ5v@qQ@29PQ5v@qSLT25v@qT@29gQ5v@qULj25v@qV@29fQ5v@qW@22CQ5v@qX@2C8Q5v@qY@2DGQ5v@qZ@2DPQ5v@qa@2DMQ5v@qb@2DRQ5v@qc@2DUQ5v@qd@2DeQ5v@qe@2DbQ5v@qf@2DGQ5v@qg@2DhQ5v@qh@2FGQ5v@qi@2FeQ5v@qj@2GGQ5v@qk@2HGQ5v@ql@2HKQ5v@qm@2HOQ5v@qn@2HVQ5v@qo@2IGQ5v@qp@2JGQ5v@qq@2JJQ5v@qr@2KGQ5v@qs@2EJQ5v@qt@2EJQ5v@qu@2LLQ5v@qwLT25v@qx@2LcQ5v@qyLj25v@qz@2LbQ5v@r0@2ECQ5v@r1@2O8Q5v@r2@2PGQ5v@r3@2PPQ5v@r4@2PMQ5v@r5@2PRQ5v@r6@2PUQ5v@r7@2PeQ5v@r8@2PbQ5v@r9@2PGQ5v@rA@2PhQ5v@rB@2RGQ5v@rC@2ReQ5v@rD@2SGQ5v@rE@2UGQ5v@rF@2UNQ5v@rG@2VGQ5v@rH@2VJQ5v@rI@2WGQ5v@rJ@2QJQ5v@rK@2QJQ5v@rL@2XLQ5v@rNLT25v@rO@2XcQ5v@rPLj25v@rQ@2XbQ5v@rR@2QCQ5v@rS@2a8Q5v@rT@2bGQ5v@rU@2bMQ5v@rV@2bJQ5v@rW@2bOQ5v@rX@2bRQ5v@rY@2bXQ5v@rZ@2bUQ5v@ra@2bZQ5v@rb@2bcQ5v@rc@2biQ5v@rd@2bfQ5v@re@2bkQ5v@rf@2bnQ5v@rg@2btQ5v@rh@2bqQ5v@ri@2bGQ5v@rj@2bwQ5v@rk@2dGQ5v@rl@2deQ5v@rm@2eGQ5v@rn@2fGQ5v@ro@2fKQ5v@rp@2fOQ5v@rq@2fSQ5v@rr@2gGQ5v@rs@2gKQ5v@rt@2hGQ5v@ru@2hKQ5v@rv@2iGQ5v@rw@2cJQ5v@rx@2cJQ5v@ry@2jLQ5v@s0LT25v@s1@2jcQ5v@s2Lj25v@s3@2jbQ5v@s4@2cCQ5v@s5@2m8Q5v@s6@2oGQ5v@s7@2oeQ5v@s8@2pGQ5v@s9@2qGQ5v@sA@2qKQ5v@sB@2qOQ5v@sC@2qSQ5v@sD@2rGQ5v@sE@2rKQ5v@sF@2sGQ5v@sG@2sKQ5v@sH@2tGQ5v@sI@2nJQ5v@sJ@2nJQ5v@sK@2uLQ5v@sMLT25v@sN@2ucQ5v@sOLj25v@sP@2ubQ5v@sQ@2nCQ5v@sR@2x8Q5v@sS@2zGQ5v@sT@2zeQ5v@sU@30GQ5v@sV@33GQ5v@sW@33JQ5v@sX@34GQ5v@sY@35GQ5v@sZ@2yJQ5v@sa@2yJQ5v@sb@35LQ5v@sdLT25v@se@35cQ5v@sfLj25v@sg@35bQ5v@sh@2yCQ5v@si@388Q5v@sj@3AGQ5v@sk@3AeQ5v@sl@3BGQ5v@sm@3EGQ5v@sn@3EJQ5v@so@3FGQ5v@sp@3GGQ5v@sq@39JQ5v@sr@39JQ5v@ss@3GPQ5v@suLT25v@sv@3GgQ5v@swLj25v@sx@3GfQ5v@sy@39CQ5v@sz@3J8Q5v@t0@3LGQ5v@t1@3LeQ5v@t2@3MGQ5v@t3@3NGQ5v@t4@3NKQ5v@t5@3NOQ5v@t6@3NSQ5v@t7@3OGQ5v@t8@3OKQ5v@t9@3PGQ5v@tA@3PKQ5v@tB@3QGQ5v@tC@3RGQ5v@tD@3KJQ5v@tE@3KJQ5v@tF@3RPQ5v@tHLT25v@tI@3RgQ5v@tJLj25v@tK@3RfQ5v@tL@3KCQ5v@tM@3W8Q5v@tN@3XMQ5v@tO@3XRQ5v@tP@3XLQ5v@tQ@3XJQ5v@tR@3YHQ5v@tS@3YGQ5v@tT@3YGQ5v@tU@3aTQ5v@tV@3aNQ5v@tW@3bGQ5v@tX@3bVQ5v@tY@3bYQ5v@tZ@3bTQ5v@ta@3cGQ5v@tb@3cWQ5v@tc@3cZQ5v@td@3cUQ5v@te@3dxQ5v@tf@3d@15Q5v@tg@3d@1CQ5v@th@3dGQ5v@ti@3eGQ5v@tj@3eNQ5v@tk@3eSQ5v@tl@3eQQ5v@tm@3gJQ5v@tn@3gCQ5v@to@3j8Q5v@tp@3kIQ5v@tq@3kKQ5v@tr@3kNQ5v@ts@3kGQ5v@tt@3kGQ5v@tu@3kYQ5v@tv@3kRQ5v@tw@3lcQ5v@tx@3lbQ5v@ty@3lGQ5v@tz@3mfQ5v@u0@3mjQ5v@u1@3miQ5v@u2@3mnQ5v@u3@3mzQ5v@u4@3mPQ5v@u5@3mJQ5v@u6@3nfQ5v@u7@3nlQ5v@u8@3ntQ5v@u9@3nwQ5v@uA@3nzQ5v@uB@3n@13Q5v@uC@3n@12Q5v@uD@3n@17Q5v@uE@3n@1BQ5v@uF@3n@1AQ5v@uG@3nJQ5v@uH@3nCQ5v@uI@3u8Q5v@uJ@3wWQ5v@uK@3wIQ5v@uL@3wsQ5v@uM@3xYQ5v@uN@3xKQ5v@uO@3wGQ5v@uP@3xvQ5v@uQ@3yGQ5v@uR@3yLQ5v@uS@3yIQ5v@uT@3yNQ5v@uU@3zGQ5v@uV@3zLQ5v@uW@3zIQ5v@uX@3wGQ5v@uYLT25v@uZ@40QQ5v@uaLj25v@ub@40PQ5v@uc@42IQ5v@ud@42MQ5v@ue@42KQ5v@uf@42GQ5v@ug@43IQ5v@uh@43MQ5v@ui@43KQ5v@uj@43GQ5v@uk@44GQ5v@ul@44KQ5v@um@44NQ5v@un@44GQ5v@uo@45WQ5v@up@45bQ5v@uq@45VQ5v@ur@45KQ5v@us@46VQ5v@ut@46KQ5v@uu@46IQ5v@uv@47VQ5v@uw@47KQ5v@ux@47IQ5v@uz@49MQ5v@v0@49KQ5v@v1@4BGQ5v@v2@4BLQ5v@v3@4BIQ5v@v4@4BWQ5v@v5@4BZQ5v@v6@4BeQ5v@v7@4BbQ5v@v8@4BGQ5v@v9@4ByQ5v@vA@4BrQ5v@vB@4CcQ5v@vC@4CbQ5v@vD@4CGQ5v@vE@4DfQ5v@vF@4DjQ5v@vG@4DiQ5v@vH@4DnQ5v@vI@4DqQ5v@vJ@4DPQ5v@vK@4DJQ5v@vL@4EZQ5v@vM@4EeQ5v@vN@4EmQ5v@vO@4EpQ5v@vP@4EsQ5v@vQ@4EwQ5v@vR@4EvQ5v@vS@4E@10Q5v@vT@4E@14Q5v@vU@4E@13Q5v@vV@4ECQ5v@vW@4FJQ5v@vX@4FCQ5v@vY@1F8Q5v@vZ@1GiQ5v@va@1GgQ5v@vb@1HPQ5v@vc@1HNQ5v@vd@1IQQ5v@ve@1IOQ5v@vg44Q5v@vi3WZ5v@vj3LZ5v@vlL8Z5v@vn14Z5v@vo38h5v@vp3Vh5v@vq3Yh5v@vr3Ph5v@vt24h5v@vvLbi5v@vwLLi5v@vyV8i5v@vzXNi5v@w0XLi5v@w1YPi5v@w2YNi5v@w3ZOi5v@w4ZMi5v@w5aRi5v@w6aPi5v@w7bWi5v@w8bUi5v@w9cJi5v@wAcCi5v@wBf8i5v@wChOi5v@wDhMi5v@wEiRi5v@wFiPi5v@wGjWi5v@wHjUi5v@wIkJi5v@wJkCi5v@wKn8i5v@wLpPi5v@wMpNi5v@wNqRi5v@wOqPi5v@wPrWi5v@wQrUi5v@wRsJi5v@wSsCi5v@wTv8i5v@wUwGi5v@wVwWi5v@wWwTi5v@wXwGi5v@wYyKi5v@wZyTi5v@wayhi5v@wbyqi5v@wczKi5v@wdzVi5v@wezhi5v@wfzri5v@wgz@13i5v@whxji5v@wixTi5v@wj@16Oi5v@wk@16Xi5v@wl@16li5v@wm@16ui5v@wn@17Oi5v@wo@18Oi5v@wp@19Oi5v@wq@19Yi5v@wr@19ki5v@ws@15Ki5v@wt@1ARi5v@wu@1AQi5v@wv@14Yi5v@ww@1CKi5v@wx@1CKi5v@wy@1Dsi5v@wz@1D@11i5v@x0@1D@1Fi5v@x1@1D@1Oi5v@x2@1D@1Yi5v@x3@1D@1ji5v@x4@1D@1vi5v@x5@1Dri5v@x6@1Dbi5v@x7@1HPi5v@x8@1Hji5v@x9@1Hhi5v@xA@1Hqi5v@xB@1Hoi5v@xC@1HNi5v@xD@1IMi5v@xE@1Iri5v@xF@1Iqi5v@xG@1IKi5v@xH@1JGi5v@xI@1JRi5v@xJ@1JOi5v@xK@1JGi5v@xL@1Kgi5v@xM@1Kmi5v@xN@1Kti5v@xO@1Kri5v@xP@1KUi5v@xQ@1KOi5v@xR@1LGi5v@xS@1Lhi5v@xT@1Lvi5v@xU@1Lti5v@xV@1OJi5v@xW@1OCi5v@xXQ8i5v@xYRIi5v@xZRNi5v@xaRGi5v@xbRGi5v@xcR@1Ti5v@xdR@14i5v@xeRui5v@xfSOi5v@xgSMi5v@xi54i5v@xkGUj5v@xlGLj5v@xnC8j5v@xoDaj5v@xpDNj5v@xqDCj5v@xrIFj5v@xsJJj5v@xtJWj5v@xuJUj5v@xvJCj5v@xwMFj5v@xxNIj5v@xyNVj5v@xzNTj5v@y0NGj5v@y1OJj5v@y2Ohj5v@y3Ogj5v@y4OHj5v@y5PGj5v@y6POj5v@y7PLj5v@y8PGj5v@y9Qej5v@yAQqj5v@yBQRj5v@yCQLj5v@yDRGj5v@yERaj5v@yFRhj5v@yGRfj5v@yHTJj5v@yITCj5v@yJWFj5v@yKXwj5v@yLXHj5v@yMXGj5v@yNXGj5v@yOYmj5v@yPY@1Hj5v@yQY@1Fj5v@yRY@1Oj5v@ySY@1Mj5v@yTYQj5v@yUYGj5v@yVabj5v@yWa@10j5v@yXaaj5v@yYaCj5v@yZdFj5v@yaeMj5v@ybeCj5v@ycdFj5v@ydhFj5v@yeioj5v@yfinj5v@ygiGj5v@yhiGj5v@yijmj5v@yjj@1Cj5v@ykj@1Aj5v@ylj@1Jj5v@ymj@1Hj5v@ynjQj5v@yojGj5v@yplbj5v@yqlyj5v@yrlaj5v@yslCj5v@ytoFj5v@yupyj5v@yvpJj5v@ywpCj5v@yxtFj5v@yyubj5v@yzuaj5v@z0uCj5v@z1yFj5v@z2zbj5v@z3zaj5v@z4zCj5v@z5@13Fj5v@z6@14bj5v@z7@14aj5v@z8@14Cj5v@z978j5v@zA8Vj5v@zB8Tj5v@zC9Rj5v@zD9Pj5v@zF24j5v@zHTZk5v@zITLk5v@zJUak5v@zKULk5v@zMWFk5v@zNXJk5v@zOXVk5v@zPXfk5v@zQXlk5v@zRXIk5v@zSXxk5v@zTXwk5v@zUXGk5v@zVYNk5v@zWYok5v@zXYnk5v@zYYLk5v@zZZGk5v@zaZSk5v@zbZPk5v@zcZGk5v@zdagk5v@zeask5v@zfaVk5v@zgaPk5v@zhbGk5v@zibdk5v@zjbkk5v@zkbik5v@zldJk5v@zmdCk5v@zno8k5v@zopKk5v@zppIk5v@zqqLk5v@zrqJk5v@zsrNk5v@ztrLk5v@zusMk5v@zvsKk5v@zwtHk5v@zxtFk5v@zyuHk5v@zzuFk5v#100vNk5v#101vLk5v#104wLk5v#105wLk5v#106wCk5v#107xYk5v#108xXk5v#109xNk5v#10AyKk5v#10ByPk5v#10CyMk5v#10DyKk5v#10EzKk5v#10FzTk5v#10GzQk5v#10HzKk5v#10J@10Rk5v#10K@10Wk5v#10L@10Tk5v#10M@10bk5v#10N@10ek5v#10O@10jk5v#10P@10gk5v#10Q@10Rk5v#10R@11Uk5v#10S@11Kk5v#10U@13Kk5v#10V@13Wk5v#10W@13Vk5v#10X@14Rk5v#10Y@14nk5v#10Z@14mk5v#10a@14Pk5v#10b@15Ok5v#10c@15Wk5v#10d@15Tk5v#10e@15Ok5v#10f@16Wk5v#10g@16Uk5v#10h@17gk5v#10i@17mk5v#10j@17Zk5v#10k@17Tk5v#10l@18Sk5v#10m@18ek5v#10n@18bk5v#10o@18Sk5v#10p@18vk5v#10q@18tk5v#10r@19Ok5v#10s@19bk5v#10t@19ak5v#10u@1BVk5v#10v@1BTk5v#10w@1CKk5v#10x@1CRk5v#10y@1CZk5v#10z@1Cdk5v#110@1CXk5v#111@1CQk5v#112@1DKk5v#113@1DRk5v#114@1DQk5v#115@1EKk5v#116@1EXk5v#117@1EWk5v#118@1Fck5v#119@1Fkk5v#11A@1Fok5v#11B@1Fbk5v#11C@1FRk5v#11D@1GKk5v#11E@1GTk5v#11F@1GXk5v#11G@1GQk5v#11H@1GKk5v#11M@1JCk5v#11N@1JMk5v#11O@1JUk5v#11P@1Jdk5v#11Q@1Jlk5v#11R@1Jbk5v#11S@1J@13k5v#11T@1J@17k5v#11U@1J@11k5v#11V@1J@1Mk5v#11W@1J@1Kk5v#11X@1J@1Qk5v#11Y@1J@1Ok5v#11Z@1JIk5v#11a@1JCk5v#11b@1LGk5v#11c@1LSk5v#11d@1LPk5v#11e@1LGk5v#11f@1Opk5v#11g@1Ook5v#11h@1ONk5v#11k@1PTk5v#11l@1PTk5v#11m@1PGk5v#11n@1QKk5v#11o@1Qak5v#11p@1QZk5v#11s@1RWk5v#11t@1Rbk5v#11u@1RWk5v#11v@1RKk5v#11w@1SOk5v#11x@1Shk5v#11y@1Slk5v#11z@1Swk5v#120@1Suk5v#121@1TOk5v#122@1Tgk5v#123@1Tkk5v#124@1Tvk5v#125@1Ttk5v#12E@1Yvk5v#12F@1Y@1Mk5v#12G@1Y@1Pk5v#12H@1YCk5v#12I@1Zvk5v#12J@1Z@1Mk5v#12K@1Z@1Pk5v#12L@1ZCk5v#12M@1avk5v#12N@1a@1Mk5v#12O@1a@1Pk5v#12P@1aCk5v#12Q@1bXk5v#12R@1byk5v#12S@1b@11k5v#12T@1b@18k5v#12U@1bCk5v#12V@1dCk5v#12W@1dKk5v#12X@1dPk5v#12Y@1dNk5v#12Z@1eCk5v#12a@1eKk5v#12b@1ePk5v#12c@1eNk5v#12do8k5v#12e@1n8k5v#12f@1oMk5v#12g@1oCk5v#12h@1n8k5v#12ih8k5v#12jiUk5v#12kiSk5v#12ljUk5v#12mjbk5v#12njZk5v#12ojfk5v#12pjdk5v#12qjSk5v#12rkZk5v#12skfk5v#12tkCk5v#12ulXk5v#12vldk5v#12wlgk5v#12xlCk5v#12zE4k5v#130bFl5v#131gLl5v#132gJl5v#133hQl5v#134hVl5v#135hOl5v#136iOl5v#137iMl5v#138jGl5v#139jLl5v#13AjVl5v#13BjTl5v#13CjGl5v#13DkPl5v#13EkVl5v#13FkUl5v#13GkXl5v#13HkNl5v#13IlRl5v#13JlYl5v#13KlWl5v#13LlPl5v#13MmGl5v#13NmRl5v#13OmQl5v#13PnNl5v#13QnLl5v#13RoNl5v#13SoRl5v#13Tobl5v#13UoZl5v#13Vokl5v#13Wonl5v#13Xozl5v#13Yoxl5v#13ZoNl5v#13apQl5v#13bpOl5v#13cqKl5v#13dqTl5v#13eqSl5v#13frSl5v#13grQl5v#13htRl5v#13itdl5v#13jtbl5v#13ktpl5v#13ltsl5v#13mt@10l5v#13nt@16l5v#13ot@15l5v#13pt@1Gl5v#13qtyl5v#13rt@1Pl5v#13st@1Nl5v#13ttRl5v#13uuVl5v#13vubl5v#13wukl5v#13xukl5v#13yukl5v#13zubl5v#140ual5v#141uTl5v#142vOl5v#143vWl5v#144vVl5v#145wOl5v#146wXl5v#147wbl5v#148wUl5v#149wOl5v#14BzRl5v#14Czdl5v#14Dzbl5v#14Ezpl5v#14Fzsl5v#14Gz@10l5v#14Hz@16l5v#14Iz@1Kl5v#14Jz@1Il5v#14Kz@15l5v#14Lz@1Ml5v#14Mzyl5v#14Nz@1Vl5v#14Oz@1Tl5v#14PzRl5v#14Q@10Vl5v#14R@10dl5v#14S@10bl5v#14T@10bl5v#14U@10bl5v#14V@10dl5v#14W@10al5v#14X@10Tl5v#14Y@11Ol5v#14Z@11Wl5v#14a@11Vl5v#14b@12Ol5v#14c@12Xl5v#14d@12bl5v#14e@12Ul5v#14f@12Ol5v#14i@15Gl5v#14j@15kl5v#14k@15Vl5v#14l@15Ql5v#14m@17Jl5v#14n@17Cl5v#14o@1AFl5v#14p@1BJl5v#14q@1BNl5v#14r@1BCl5v#14s98l5v#14tAGl5v#14uAEl5v#14vBLl5v#14wBQl5v#14xBPl5v#14yBTl5v#14zBSl5v#150BVl5v#151BJl5v#152CHl5v#153CFl5v#154DHl5v#155DFl5v#156EKl5v#157EIl5v#15AFNl5v#15BFNl5v#15CFCl5v#15DGGl5v#15EGYl5v#15FGXl5v#15GHKl5v#15HHIl5v#15KISl5v#15LISl5v#15MIGl5v#15NJKl5v#15OJdl5v#15PJhl5v#15QJsl5v#15RJql5v#15SKKl5v#15TKYl5v#15UKWl5v#15VLKl5v#15WLYl5v#15XLWl5v#15YMKl5v#15ZMXl5v#15aMVl5v#15bNKl5v#15cNil5v#15dNgl5v#15eOKl5v#15fORl5v#15gOQl5v#15hPKl5v#15iPRl5v#15jPQl5v#15kQKl5v#15lQUl5v#15mQTl5v#15nRKl5v#15oRPl5v#15pRTl5v#15qRMl5v#15rRKl5v#15wTGl5v#15xTLl5v#15yTIl5v#15zTGl5v#164Ywl5v#165Y@10l5v#166Y@14l5v#167Y@1Bl5v#168YCl5v#16A54l5v#16BY8m5v#16CZQm5v#16DZOm5v#16EaSm5v#16FaQm5v#16GbZm5v#16Hbfm5v#16IbCm5v#16JcKm5v#16KcNm5v#16LcQm5v#16McTm5v#16NcJm5v#16OcHm5v#16Pdtm5v#16Qd@11m5v#16Rd@1Em5v#16Sd@1Km5v#16Td@1Sm5v#16UdHm5v#16VdGm5v#16WdGm5v#16Xepm5v#16Ye@1Mm5v#16Ze@1Km5v#16ae@1Vm5v#16be@1Tm5v#16ceQm5v#16deGm5v#16egPm5v#16fgUm5v#16ggTm5v#16hgNm5v#16ihQm5v#16jhVm5v#16khUm5v#16lhOm5v#16miUm5v#16niZm5v#16oiYm5v#16piSm5v#16qjYm5v#16rjdm5v#16sjcm5v#16tjWm5v#16vL4m5v#16xLin5v#16yLLn5v#170oFn5v#171pgn5v#172pmn5v#173pqn5v#174pwn5v#175pzn5v#176p@12n5v#177p@15n5v#178pfn5v#179pGn5v#17AqPn5v#17Bqzn5v#17Cqyn5v#17DqNn5v#17ErGn5v#17FrUn5v#17GrRn5v#17HrGn5v#17Isin5v#17Json5v#17Kssn5v#17Lsyn5v#17Ms@15n5v#17Ns@18n5v#17Os@1Bn5v#17PsXn5v#17QsRn5v#17RtGn5v#17Stmn5v#17Tttn5v#17Utrn5v#17VvJn5v#17WvCn5v#17XyFn5v#17YzLn5v#17ZzJn5v#17a@12Gn5v#17b@12Nn5v#17c@12Ln5v#17d@12Rn5v#17e@12Wn5v#17f@12Un5v#17g@12an5v#17h@12hn5v#17i@12fn5v#17j@12ln5v#17k@12pn5v#17l@12nn5v#17m@12tn5v#17n@12xn5v#17o@12vn5v#17p@12@11n5v#17q@12@15n5v#17r@12@13n5v#17s@12@19n5v#17t@12@1Hn5v#17u@12@1Fn5v#17v@13Gn5v#17w@10Cn5v#17x@14Jn5v#17y@14Vn5v#17z@14Un5v#180@14Cn5v#181O8n5v#182Tln5v#183Trn5v#184Tvn5v#185T@11n5v#186T@14n5v#187T@17n5v#188T@1An5v#189Tkn5v#18ATLn5v#18BVZn5v#18CVfn5v#18DVCn5v#18EWMn5v#18FWLn5v#18GWJn5v#18HYxn5v#18IY@13n5v#18JY@19n5v#18KY@1Dn5v#18LY@1Jn5v#18MY@1Mn5v#18NY@1Pn5v#18OY@1Sn5v#18PYLn5v#18QYJn5v#18RZGn5v#18SZan5v#18TZdn5v#18UZln5v#18VZin5v#18WZGn5v#18XaKn5v#18YaIn5v#18ZbOn5v#18abNn5v#18bbNn5v#18ccQn5v#18dcOn5v#18ecOn5v#18fcOn5v#18gcQn5v#18hcUn5v#18icSn5v#18jcOn5v#18kc@17n5v#18lcln5v#18mcbn5v#18ndVn5v#18odUn5v#18qgKn5v#18rgCn5v#18shOn5v#18tiun5v#18ui@1Kn5v#18vi@1In5v#18wi@1Pn5v#18xi@1Nn5v#18yiYn5v#18ziOn5v#190jun5v#191j@1Pn5v#192j@1Nn5v#193j@1Un5v#194j@1Sn5v#195jYn5v#196jOn5v#197kZn5v#198kPn5v#19AH4n5v#19B@128o5v#19C@13Mo5v#19D@13Co5v#19E@128o5v#19F@168o5v#19G@17co5v#19H@17fo5v#19I@17io5v#19J@17bo5v#19K@17Co5v#19L@1A8o5v#19M@1BGo5v#19N@1BGo5v#19O@1C@12o5v#19P@1C@18o5v#19Q@1C@1Ko5v#19R@1C@1io5v#19S@1C@1lo5v#19T@1C@1oo5v#19U@1CNo5v#19V@1CGo5v#19X@1wgC5v#19Y@1xGC5v#19Z@1Ego5v#19a@1Ejo5v#19b@1Emo5v#19c@1Eqo5v#19d@1Euo5v#19e@1Ezo5v#19f@1E@12o5v#19g@1v@1BC5v#19h@1Efo5v#19i@1Fto5v#19j@1Fzo5v#19k@1F@1No5v#19l@1F@1Qo5v#19m@1F@1To5v#19n@1FNo5v#19o@1FGo5v#19p@1A8o5v#19qH8o5v#19rIOo5v#19sIMo5v#19tZNo5v#19uZQo5v#19vZMo5v#19wZKo5v#19xaGo5v#19yaGo5v#19zbTo5v#1A0bRo5v#1A1cdo5v#1A2cjo5v#1A3cGo5v#1A4dZo5v#1A5dlo5v#1A6dXo5v#1A7eGo5v#1A8eio5v#1A9eoo5v#1AAexo5v#1ABe@13o5v#1ACeho5v#1ADfbo5v#1AEfho5v#1AFfko5v#1AGfwo5v#1AHfGo5v#1AIgbo5v#1AJgho5v#1AKgko5v#1ALgwo5v#1AMgGo5v#1ANhbo5v#1AOhho5v#1APhko5v#1AQhwo5v#1ARhGo5v#1ASiTo5v#1ATiRo5v#1AVkdo5v#1AWkjo5v#1AXkGo5v#1AYmKo5v#1AZnKo5v#1AaoKo5v#1AboWo5v#1AcpKo5v#1AdpWo5v#1Aepbo5v#1AfqKo5v#1AgqWo5v#1Ahqbo5v#1AirKo5v#1AjrWo5v#1AksKo5v#1AlsWo5v#1AmtKo5v#1AntWo5v#1AouKo5v#1ApuWo5v#1AqvKo5v#1ArvWo5v#1AswKo5v#1AtlGo5v#1AuyPo5v#1AvyXo5v#1AwyWo5v#1AxyNo5v#1AyzQo5v#1AzzYo5v#1B0zXo5v#1B1zOo5v#1B394o5v#1B4V8S5v#1B5WqS5v#1B6W@14S5v#1B7WpS5v#1B8WGS5v#1B9XKS5v#1BAXfS5v#1BBXjS5v#1BCXiS5v#1BDXeS5v#1BEXIS5v#1BFYGS5v#1BGYPS5v#1BHYMS5v#1BIYGS5v#1BJa@12S5v#1BKa@1pS5v#1BLaQS5v#1BMaGS5v#1BNdJS5v#1BOdYS5v#1BPdXS5v#1BQdCS5v#1BRg8S5v#1BShGS5v#1BThGS5v#1BUhdS5v#1BVhWS5v#1BYjPS5v#1BZjPS5v#1BajCS5v#1BbkLS5v#1BckXS5v#1BdkKS5v#1BekKS5v#1BflRS5v#1BglKS5v#1BlpTS5v#1BmpRS5v#1BnqJS5v#1BoqCS5v#1Bpt8S5v#1BquGS5v#1BruGS5v#1BsudS5v#1BtuWS5v#1BuwNS5v#1BvwLS5v#1ByxPS5v#1BzxPS5v#1C0xCS5v#1C1yGS5v#1C2ySS5v#1C3yjS5v#1C4yoS5v#1C5ytS5v#1C6ymS5v#1C7yPS5v#1C8yGS5v#1CD@11JS5v#1CE@11US5v#1CF@11SS5v#1CG@11CS5v#1CH@148S5v#1CI@15LS5v#1CJ@15JS5v#1CM@16PS5v#1CN@16PS5v#1CO@16CS5v#1CP@17GS5v#1CQ@17US5v#1CR@17iS5v#1CS@17TS5v#1CX@19CS5v#1CY@19NS5v#1CZ@1AJS5v#1Ca@1ACS5v#1CbH8S5v#1CcIYS5v#1CdIkS5v#1CeIWS5v#1CfJGS5v#1CgJMS5v#1ChJXS5v#1CiJUS5v#1CjJGS5v#1CkKXS5v#1ClKVS5v#1CpMTS5v#1CqMTS5v#1CrMGS5v#1CsNPS5v#1CtNUS5v#1CuNNS5v#1CvOKS5v#1CwObS5v#1CxOhS5v#1CyOfS5v#1CzPKS5v#1D0PYS5v#1D1PXS5v#1D2QKS5v#1D3QaS5v#1D4QfS5v#1D5QXS5v#1D6QXS5v#1DC84S5v#1DD68T5v#1DE6hT5v#1DF6yT5v#1DG6@15T5v#1DH6xT5v#1DI6cT5v#1DJ7OT5v#1DK7MT5v#1DM14T5v#1DNG8T5v#1DOGfT5v#1DPGwT5v#1DQG@13T5v#1DRGvT5v#1DSGaT5v#1DTHMT5v#1DUHKT5v#1DWB4T5v#1DXM8T5v#1DYMWT5v#1DZMRT5v#1DbL4T5v#1DdzjU5v#1DeziU5v#1DfzLU5v#1Dhn8U5v#1DioGU5v#1DjoWU5v#1DkoTU5v#1DloGU5v#1DmojU5v#1DnocU5v#1DopHU5v#1DppGU5v#1DqpGU5v#1Drp@1AU5v#1DspfU5v#1DtpVU5v#1DuqGU5v#1DvqbU5v#1DwqYU5v#1DxqGU5v#1DyrvU5v#1DzrQU5v#1E0rGU5v#1E1taU5v#1E2trU5v#1E3tzU5v#1E4t@1GU5v#1E5t@1PU5v#1E6tMU5v#1E7tGU5v#1E8uCU5v#1E9uYU5v#1EAuWU5v#1EBvRU5v#1ECvPU5v#1EDwJU5v#1EEwCU5v#1EF@108U5v#1EG@11GU5v#1EH@11GU5v#1EI@12NU5v#1EJ@12GU5v#1EK@19pU5v#1EL@19vU5v#1EM@19@1EU5v#1EN@19CU5v#1EO@1BLU5v#1EP@1BsU5v#1EQ@1BrU5v#1ER@1BJU5v#1ES@1CGU5v#1ET@1CPU5v#1EU@1CNU5v#1EV@1CGU5v#1EW@1DVU5v#1EX@1DTU5v#1EY@1EJU5v#1EZ@1ETU5v#1Ea@1EQU5v#1Eb@1EJU5v#1Ec@1E@1FU5v#1Ed@1EgU5v#1Ee@1EWU5v#1Ef@1FNU5v#1Eg@1FGU5v#1Eh@1IGU5v#1Ei@1IGU5v#1Ej@1MrU5v#1Ek@1MIU5v#1El@1NKU5v#1Em@1NPU5v#1En@1NMU5v#1Eo@1NKU5v#1Ep@1OqU5v#1Eq@1OoU5v#1Er@1PqU5v#1Es@1PoU5v#1Eu@1RKU5v#1Ev@1RnU5v#1Ew@1RnU5v#1Ex@1RnU5v#1Ey@1WKU5v#1Ez@1WqU5v#1F0@1WoU5v#1F1@1WKU5v#1F2@1XVU5v#1F3@1XUU5v#1F4@1bJU5v#1F5@1bCU5v#1F6@1eFU5v#1F7@1ffU5v#1F8@1fpU5v#1F9@1feU5v#1FA@1fCU5v#1FB@1iFU5v#1FC@1jfU5v#1FD@1jpU5v#1FE@1jeU5v#1FF@1jCU5v#1FG@1mFU5v#1FH@1nHU5v#1FI@1nGU5v#1FJ@1nGU5v#1FK@1okU5v#1FL@1ojU5v#1FM@1oLU5v#1FN@1pRU5v#1FO@1pWU5v#1FP@1pVU5v#1FQ@1pPU5v#1FR@1qOU5v#1FS@1qTU5v#1FT@1qSU5v#1FU@1qMU5v#1FV@1rPU5v#1FW@1rUU5v#1FX@1rTU5v#1FY@1rNU5v#1FZ@1tkU5v#1Fa@1tUU5v#1Fb@1tOU5v#1Fc@1uCU5v#1Fd@1uWU5v#1Fe@1uUU5v#1Ff@1vCU5v#1Fg@1vXU5v#1Fh@1vVU5v#1Fi@1xGU5v#1Fj@1xGU5v#1Fk@1yTU5v#1Fl@1yNU5v#1Fm@1zGU5v#1Fn@1zcU5v#1Fo@1zaU5v#1Fp@21KU5v#1Fq@22KU5v#1Fr@23KU5v#1Fs@20GU5v#1Ft@24NU5v#1Fu@24GU5v#1Fv@27PU5v#1Fw@27WU5v#1Fx@27OU5v#1Fy@27MU5v#1Fz@28GU5v#1G0@28GU5v#1G1@29TU5v#1G2@29NU5v#1G3@2AGU5v#1G4@2AcU5v#1G5@2AaU5v#1G6@2CKU5v#1G7@2DKU5v#1G8@2EKU5v#1G9@2BGU5v#1GA@2GRU5v#1GB@2GQU5v#1GC@2HOU5v#1GD@2HMU5v#1GE@2IOU5v#1GF@2IbU5v#1GG@2INU5v#1GH@2INU5v#1GI@2JVU5v#1GJ@2JUU5v#1GK@2KKU5v#1GL@2KTU5v#1GM@2KQU5v#1GN@2KKU5v#1GO@2LOU5v#1GP@2LWU5v#1GQ@2LUU5v#1GR@2LOU5v#1GS@2LhU5v#1GT@2LfU5v#1GV@2NGU5v#1GW@2NXU5v#1GY@2QKU5v#1GZ@2RKU5v#1Ga@2SKU5v#1Gb@2PGU5v#1Gc@2WHU5v#1Gd@2WRU5v#1Ge@2WQU5v#1Gf@2WGU5v#1Gg@2WGU5v#1Gh@2W@1EU5v#1Gi@2WfU5v#1Gj@2WVU5v#1Gk@2YrU5v#1Gl@2YyU5v#1Gm@2Y@16U5v#1Gn@2YOU5v#1Go@2YIU5v#1Gp@2ZCU5v#1Gq@2ZaU5v#1Gr@2ZYU5v#1Gs@2aJU5v#1Gt@2aCU5v#1Gu@2dFU5v#1Gv@2erU5v#1Gw@2eqU5v#1Gx@2eHU5v#1Gy@2fGU5v#1Gz@2fOU5v#1H0@2fLU5v#1H1@2fGU5v#1H2@2f@1GU5v#1H3@2f@1pU5v#1H4@2feU5v#1H5@2fUU5v#1H6@2gGU5v#1H7@2gLU5v#1H8@2gKU5v#1H9@2gRU5v#1HA@2gOU5v#1HB@2gGU5v#1HC@2g@1XU5v#1HD@2g@1dU5v#1HE@2g@1bU5v#1HF@2g@1oU5v#1HG@2g@1mU5v#1HH@2gyU5v#1HI@2goU5v#1HJ@2hJU5v#1HK@2hCU5v#1HLS8U5v#1HN84U5v#1HOL8V5v#1HPLbV5v#1HQLUV5v#1HRM8V5v#1HSMcV5v#1HTMVV5v#1HUC8V5v#1HVCgV5v#1HWCZV5v#1HXDQV5v#1HYDOV5v#1HZERV5v#1HaEPV5v#1HbFGV5v#1HcFGV5v#1HdGxV5v#1HeG@1aV5v#1HfG@1hV5v#1HgG@1ZV5v#1HhGhV5v#1HiGbV5v#1Hk14V5v#1HmEbW5v#1HnELW5v#1HoFcW5v#1HpFLW5v#1HrHFW5v#1HsHwW5v#1HtHkW5v#1HuIpW5v#1HvJLW5v#1HwJyW5v#1HxJxW5v#1HyJJW5v#1HzKGW5v#1I0KQW5v#1I1KNW5v#1I2KGW5v#1I3LNW5v#1I4LaW5v#1I5LlW5v#1I6LkW5v#1I7LLW5v#1I8MPW5v#1I9M@12W5v#1IAM@11W5v#1IBMNW5v#1ICNKW5v#1IDNUW5v#1IENRW5v#1IFNKW5v#1IGOKW5v#1IHOtW5v#1IIO@15W5v#1IJO@13W5v#1IKSGW5v#1ILSQW5v#1IMSNW5v#1INSGW5v#1IOT@12W5v#1IPT@1aW5v#1IQTQW5v#1IRTGW5v#1ISWGW5v#1ITWQW5v#1IUWTW5v#1IVWaW5v#1IWWZW5v#1IXWgW5v#1IYWdW5v#1IZWGW5v#1IaX@12W5v#1IbX@28W5v#1IcXQW5v#1IdXGW5v#1IeaJW5v#1IfaCW5v#1IgdFW5v#1IhepW5v#1IifSW5v#1IjfRW5v#1IkfbW5v#1IlfYW5v#1ImfGW5v#1Inf@1XW5v#1Iof@13W5v#1IpftW5v#1IqgHW5v#1IrgvW5v#1IsguW5v#1ItgFW5v#1IuhGW5v#1IvhMW5v#1IwhJW5v#1IxhGW5v#1Iyh@1EW5v#1Izh@1vW5v#1J0hcW5v#1J1hSW5v#1J2iJW5v#1J3ipW5v#1J4ioW5v#1J5iCW5v#1J6lFW5v#1J7mGW5v#1J8msW5v#1J9mpW5v#1JAmGW5v#1JBmyW5v#1JCnRW5v#1JDnPW5v#1JEoOW5v#1JFoMW5v#1JGpnW5v#1JHplW5v#1JIqkW5v#1JJqiW5v#1JKsNW5v#1JLsLW5v#1JMtSW5v#1JNtQW5v#1JOuSW5v#1JPuQW5v#1JSvOW5v#1JTvdW5v#1JUvcW5v#1JVvOW5v#1JWvCW5v#1JXwOW5v#1JYwZW5v#1JZwYW5v#1JawMW5v#1JbxOW5v#1JcxUW5v#1JdxTW5v#1JexbW5v#1JfxGW5v#1Jg@10cW5v#1Jh@10iW5v#1Ji@10hW5v#1Jj@10aW5v#1Jk@11gW5v#1Jl@11mW5v#1Jm@11lW5v#1Jn@11fW5v#1Jo@11QW5v#1Jp@12gW5v#1Jq@12mW5v#1Jr@12lW5v#1Js@12fW5v#1Jt@12QW5v#1Ju@13ZW5v#1Jv@13fW5v#1Jw@13eW5v#1Jx@13oW5v#1Jy@13nW5v#1Jz@13xW5v#1K0@13XW5v#1K1@14OW5v#1K2@14bW5v#1K3@14oW5v#1K4@14@1GW5v#1K5@14@1TW5v#1K6@14@1WW5v#1K7@14nW5v#1K8@14lW5v#1K9@15OW5v#1KA@18eW5v#1KB@18kW5v#1KC@18jW5v#1KD@18cW5v#1KE@19VW5v#1KF@19bW5v#1KG@19aW5v#1KH@19kW5v#1KI@19jW5v#1KJ@19tW5v#1KK@19TW5v#1KL@1AOW5v#1KM@1AYW5v#1KN@1BSW5v#1KO@1BaW5v#1KP@1CSW5v#1KQ@1CYW5v#1KR@1DSW5v#1KS@1DcW5v#1KT@1ApW5v#1KU@1AnW5v#1KV@1FOW5v#1KW@1FyW5v#1KX@1F@16W5v#1KY@1F@14W5v#1KZ@1GOW5v#1Ka@1JQW5v#1Kb@1JOW5v#1Kc@1JOW5v#1Kd@1JQW5v#1Ke@1KkW5v#1Kf@1KqW5v#1Kg@1KpW5v#1Kh@1KjW5v#1Ki@1KUW5v#1Kj@1LlW5v#1Kk@1LrW5v#1Kl@1LqW5v#1Km@1LkW5v#1Kn@1LVW5v#1Ko@1MSW5v#1Kp@1MbW5v#1Kq@1MYW5v#1Kr@1MdW5v#1Ks@1MgW5v#1Kt@1MqW5v#1Ku@1MnW5v#1Kv@1MSW5v#1Kw@1NaW5v#1Kx@1NYW5v#1Ky@1ObW5v#1Kz@1OZW5v#1L0@1QOW5v#1L1@1QYW5v#1L2@1QXW5v#1L3@1QnW5v#1L4@1QmW5v#1L5@1QxW5v#1L6@1RSW5v#1L7@1RbW5v#1L8@1SSW5v#1L9@1ScW5v#1LA@1TSW5v#1LB@1TbW5v#1LC@1Q@1EW5v#1LD@1Q@1CW5v#1LE@1VOW5v#1LF@1YcW5v#1LG@1YiW5v#1LH@1YhW5v#1LI@1YaW5v#1LJ@1ZgW5v#1LK@1ZmW5v#1LL@1ZlW5v#1LM@1ZfW5v#1LN@1ZQW5v#1LO@1agW5v#1LP@1amW5v#1LQ@1alW5v#1LR@1afW5v#1LS@1aQW5v#1LT@1bkW5v#1LU@1bqW5v#1LV@1bpW5v#1LW@1bjW5v#1LX@1bUW5v#1LY@1clW5v#1LZ@1crW5v#1La@1cqW5v#1Lb@1ckW5v#1Lc@1cVW5v#1Ld@1dkW5v#1Le@1dqW5v#1Lf@1dpW5v#1Lg@1djW5v#1Lh@1dUW5v#1Li@1eOW5v#1Lj@1eYW5v#1Lk@1eXW5v#1Ll@1enW5v#1Lm@1emW5v#1Ln@1exW5v#1Lo@1ewW5v#1Lp@1e@1CW5v#1Lq@1e@1BW5v#1Lr@1fTW5v#1Ls@1fgW5v#1Lt@1fjW5v#1Lu@1fmW5v#1Lv@1ftW5v#1Lw@1f@11W5v#1Lx@1fSW5v#1Ly@1e@1OW5v#1Lz@1gOW5v#1M0@1igW5v#1M1@1imW5v#1M2@1ilW5v#1M3@1ifW5v#1M4@1iQW5v#1M5@1jgW5v#1M6@1jmW5v#1M7@1jlW5v#1M8@1jfW5v#1M9@1jQW5v#1MA@1kkW5v#1MB@1kqW5v#1MC@1kpW5v#1MD@1kjW5v#1ME@1kUW5v#1MF@1llW5v#1MG@1lrW5v#1MH@1lqW5v#1MI@1lkW5v#1MJ@1lVW5v#1MK@1mZW5v#1ML@1mfW5v#1MM@1meW5v#1MN@1moW5v#1MO@1mnW5v#1MP@1mxW5v#1MQ@1mXW5v#1MR@1nOW5v#1MS@1nbW5v#1MT@1noW5v#1MU@1n@1BW5v#1MV@1n@1QW5v#1MW@1n@1fW5v#1MX@1n@1iW5v#1MY@1n@1lW5v#1MZ@1n@1sW5v#1Ma@1nnW5v#1Mb@1nlW5v#1Mc@1oWW5v#1Md@1o@1BW5v#1Me@1o@1AW5v#1Mf@1oWW5v#1Mg@1o@1TW5v#1Mh@1oUW5v#1Mi@1pOW5v#1Mj@1pzW5v#1Mk@1p@1GW5v#1Ml@1p@1EW5v#1Mm@1qOW5v#1Mn@1qYW5v#1Mo@1qXW5v#1Mp@1rOW5v#1Mq@1ucW5v#1Mr@1uiW5v#1Ms@1uhW5v#1Mt@1uaW5v#1Mu@1vkW5v#1Mv@1vqW5v#1Mw@1vpW5v#1Mx@1vjW5v#1My@1vUW5v#1Mz@1wlW5v#1N0@1wrW5v#1N1@1wqW5v#1N2@1wkW5v#1N3@1wVW5v#1N4@1xkW5v#1N5@1xqW5v#1N6@1xpW5v#1N7@1xjW5v#1N8@1xUW5v#1N9@1yZW5v#1NA@1yfW5v#1NB@1yeW5v#1NC@1yoW5v#1ND@1ynW5v#1NE@1yxW5v#1NF@1yXW5v#1NG@20QW5v#1NH@20OW5v#1NI@20OW5v#1NJ@20QW5v#1NK@21OW5v#1NL@21YW5v#1NM@21XW5v#1NN@21nW5v#1NO@21mW5v#1NP@21xW5v#1NQ@22SW5v#1NR@22bW5v#1NS@23SW5v#1NT@23cW5v#1NU@24SW5v#1NV@25XW5v#1NW@25kW5v#1NX@25nW5v#1NY@25qW5v#1NZ@25xW5v#1Na@25@15W5v#1Nb@25WW5v#1Nc@24bW5v#1Nd@21@1EW5v#1Ne@21@1CW5v#1Nf@28WW5v#1Ng@28@1BW5v#1Nh@28@1AW5v#1Ni@28WW5v#1Nj@28@1TW5v#1Nk@28UW5v#1Nl@29OW5v#1Nm@29zW5v#1Nn@29@1GW5v#1No@29@1EW5v#1Np@2AOW5v#1Nq@2AYW5v#1Nr@2AXW5v#1Ns@2BOW5v#1Nt@2BbW5v#1Nu@2BoW5v#1Nv@2B@1BW5v#1Nw@2B@1QW5v#1Nx@2B@1fW5v#1Ny@2B@1iW5v#1Nz@2B@1lW5v#1O0@2B@1sW5v#1O1@2BnW5v#1O2@2BlW5v#1O3@2COW5v#1O4@2ISW5v#1O5@2JSW5v#1O6@2JYW5v#1O7@2JXW5v#1O8@2JfW5v#1O9@2JhW5v#1OA@2HiW5v#1OB@2HYW5v#1OC@2HOW5v#1OJ@2OPW5v#1OK@2O@16W5v#1OL@2OPW5v#1OM@2OCW5v#1ON@2PGW5v#1OO@2PQW5v#1OTlFW5v#1OWA4W5v#1OY@1chX5v#1OZ@1cnX5v#1Oa@1cgX5v#1Ob@1cLX5v#1OdoFX5v#1OepeX5v#1OfpkX5v#1OgpdX5v#1OhpCX5v#1OisFX5v#1OjteX5v#1OktkX5v#1OltdX5v#1OmtCX5v#1OnwFX5v#1Oo@10GX5v#1Op@10RX5v#1Oq@10gX5v#1Or@10fX5v#1Os@10pX5v#1Ot@10mX5v#1Ou@10GX5v#1Ov@11PX5v#1Ow@11NX5v#1Oz@12PX5v#1P0@12PX5v#1P1@12GX5v#1P2@13KX5v#1P3@13qX5v#1P4@13tX5v#1P5@13@12X5v#1P6@13pX5v#1P7@13UX5v#1PC@15mX5v#1PD@15RX5v#1PE@15GX5v#1PF@19sX5v#1PG@19rX5v#1PH@19HX5v#1PI@1BYX5v#1PJ@1BeX5v#1PK@1BNX5v#1PL@1BCX5v#1PM@1E8X5v#1PN@1FHX5v#1PO@1FGX5v#1PP@1FGX5v#1PQ@1F@1GX5v#1PR@1FhX5v#1PS@1FXX5v#1PT@1JGX5v#1PU@1JWX5v#1PV@1JTX5v#1PW@1JGX5v#1PX@1KfX5v#1PY@1KrX5v#1PZ@1KeX5v#1Pa@1LVX5v#1Pb@1LTX5v#1Pc@1OqX5v#1Pd@1O@14X5v#1Pe@1OpX5v#1Pf@1OGX5v#1Pg@1PGX5v#1Ph@1PKX5v#1Pi@1PJX5v#1Pj@1PQX5v#1Pk@1PNX5v#1Pl@1PGX5v#1Pm@1Q@12X5v#1Pn@1Q@1KX5v#1Po@1Q@1IX5v#1Pp@1Q@1XX5v#1Pq@1Q@1VX5v#1Pr@1Q@29X5v#1Ps@1QQX5v#1Pt@1QGX5v#1Pu@1TIX5v#1Pv@1TVX5v#1Pw@1TZX5v#1Px@1TYX5v#1Py@1TUX5v#1Pz@1TGX5v#1Q0@1VsX5v#1Q1@1VwX5v#1Q2@1VvX5v#1Q3@1V@10X5v#1Q4@1V@14X5v#1Q5@1V@13X5v#1Q6@1V@18X5v#1Q7@1VPX5v#1Q8@1VJX5v#1Q9@1WCX5v#1QA@1WbX5v#1QB@1WeX5v#1QC@1WZX5v#1QD@1XCX5v#1QE@1XOX5v#1QF@1XSX5v#1QG@1XRX5v#1QH@1XMX5v#1QI@1YCX5v#1QJ@1YOX5v#1QK@1YSX5v#1QL@1YRX5v#1QM@1YMX5v#1QN@1ZJX5v#1QO@1ZCX5v#1QP@1d8X5v#1QQ@1eGX5v#1QR@1eGX5v#1QS@1edX5v#1QT@1eWX5v#1QU@1fCX5v#1QV@1fZX5v#1QW@1fYX5v#1QX@1gGX5v#1QY@1gkX5v#1QZ@1gjX5v#1Qa@1gGX5v#1Qb@1hXX5v#1Qc@1hVX5v#1Qd@1jJX5v#1Qe@1jCX5v#1Qf@1m8X5v#1Qg@1nGX5v#1Qh@1nGX5v#1Qi@1ndX5v#1Qj@1nWX5v#1Qk@1oCX5v#1Ql@1oZX5v#1Qm@1oYX5v#1Qn@1pGX5v#1Qo@1pkX5v#1Qp@1pjX5v#1Qq@1pGX5v#1Qr@1qXX5v#1Qs@1qVX5v#1Qt@1rNX5v#1Qu@1rGX5v#1Qv@1tJX5v#1Qw@1tnX5v#1Qx@1tmX5v#1Qy@1tCX5v#1Qz@1w8X5v#1R0@1xSX5v#1R1@1xdX5v#1R2@1xcX5v#1R3@1xQX5v#1R4@1yLX5v#1R5@1yJX5v#1R8@1zRX5v#1R9@1zjX5v#1RA@1zRX5v#1RB@1zCX5v#1RC@20OX5v#1RD@20cX5v#1RE@20bX5v#1RF@20MX5v#1RG@21tX5v#1RH@21zX5v#1RI@21yX5v#1RJ@21@19X5v#1RK@21@1FX5v#1RL@21@1EX5v#1RM@21QX5v#1RN@21KX5v#1RO@22MX5v#1RP@22PX5v#1RQ@22KX5v#1RR@23GX5v#1RS@23OX5v#1RV@24SX5v#1RW@24YX5v#1RX@24XX5v#1RY@24SX5v#1RZ@24GX5v#1Ra@25RX5v#1Rb@25WX5v#1Rc@25VX5v#1Rd@25PX5v#1Re@26OX5v#1Rf@26TX5v#1Rg@26SX5v#1Rh@26MX5v#1Ri@27OX5v#1Rj@27TX5v#1Rk@27SX5v#1Rl@27MX5v#1Rm@28KX5v#1Rn@28TX5v#1Ro@28fX5v#1Rp@28eX5v#1Rq@28mX5v#1Rr@28pX5v#1Rs@28SX5v#1Rx@2AGX5v#1Ry@2AQX5v#1Rz@2BNX5v#1S0@2BTX5v#1S1@2BeX5v#1S2@2BbX5v#1S3@2BNX5v#1S4@2BpX5v#1S5@2B@10X5v#1S6@2BzX5v#1S8@2CGX5v#1S9@2CNX5v#1SA@2CYX5v#1SB@2CWX5v#1SG@2ERX5v#1SH@2EPX5v#1SI@2FTX5v#1SJ@2FRX5v#1SK@2GPX5v#1SL@2GNX5v#1SM@1w8X5v#1SN@2J8X5v#1SO@2KJX5v#1SP@2KuX5v#1SQ@2KtX5v#1SR@2K@19X5v#1SS@2KCX5v#1STJ8X5v#1SUKPX5v#1SVKNX5v#1SWLPX5v#1SXLUX5v#1SYLTX5v#1SZLNX5v#1SaMNX5v#1SbMSX5v#1ScMRX5v#1SdMLX5v#1SeOLX5v#1SfOQX5v#1SgOPX5v#1ShOJX5v#1SiPKX5v#1SjPIX5v#1SmQPX5v#1SnQcX5v#1SoQPX5v#1SpQCX5v#1SqRGX5v#1SrRTX5v#1SsRZX5v#1StRYX5v#1SuRSX5v#1SzURX5v#1T0UWX5v#1T1UPX5v#1T2WGX5v#1T3WGX5v#1T4X@1AX5v#1T5XZX5v#1T6X@1LX5v#1T7XTX5v#1T9ZPX5v#1TAZNX5v#1TDaSX5v#1TEaSX5v#1TFaGX5v#1TGbUX5v#1THbZX5v#1TIbYX5v#1TJbSX5v#1TKcSX5v#1TLcXX5v#1TMcWX5v#1TNcQX5v#1TOdTX5v#1TPdYX5v#1TQdXX5v#1TRdRX5v#1TSeKX5v#1TTeRX5v#1TUfOX5v#1TVgOX5v#1TWiOX5v#1TXiVX5v#1TYexX5v#1TZeaX5v#1TekfX5v#1TfkeX5v#1Th14X5v#1Ti@2X8X5v#1Tl@2YOX5v#1Tm@2YOX5v#1Tn@2YCX5v#1To@2ZQX5v#1Tp@2ZVX5v#1Tq@2ZUX5v#1Tr@2ZOX5v#1Ts@2aOX5v#1Tt@2aTX5v#1Tu@2aSX5v#1Tv@2aMX5v#1Tw@2bPX5v#1Tx@2bUX5v#1Ty@2bTX5v#1Tz@2bNX5v#1U0@2cGX5v#1U1@2cWX5v#1U2@2dKX5v#1U3@2eKX5v#1U4@2gKX5v#1U5@2gRX5v#1U6@2c@12X5v#1U7@2cfX5v#1UC@2iJX5v#1UD@2iCX5v#1UE@2l8X5v#1UF@2mGX5v#1UG@2mVX5v#1UH@2mfX5v#1UI@2mdX5v#1UJ@2mGX5v#1UM@2nRX5v#1UN@2nlX5v#1UO@2nRX5v#1UP@2nGX5v#1UQ@2oOX5v#1UR@2oeX5v#1US@2odX5v#1UT@2opX5v#1UU@2oOX5v#1UV@2pOX5v#1UW@2pdX5v#1UX@2pkX5v#1UY@2p@10X5v#1UZ@2pzX5v#1Ua@2p@1DX5v#1Ub@2piX5v#1Uc@2qOX5v#1Ud@2qlX5v#1Ue@2qkX5v#1Uj@2vGX5v#1Uk@2vVX5v#1Ul@2vgX5v#1Um@2vdX5v#1Un@2vGX5v#1Uo@2wGX5v#1Up@2wKX5v#1Uq@2wPX5v#1Ur@2wNX5v#1Us@2xGX5v#1Ut@2xKX5v#1Uu@2xPX5v#1Uv@2xNX5v#1Ux@2zGX5v#1Uy@2zKX5v#1Uz@2zPX5v#1V0@2zNX5v#1V1@30GX5v#1V2@30KX5v#1V3@30PX5v#1V4@30VX5v#1V5@30jX5v#1V6@30TX5v#1V7@30tX5v#1V8@30@13X5v#1V9@30rX5v#1VA@30NX5v#1VB@2l8X5v#1VC@2T8X5v#1VD@2UPX5v#1VE@2UNX5v#1VG@2O4X5v#1VI8XY5v#1VJ8LY5v#1VLp8Y5v#1VMqdY5v#1VNqvY5v#1VOqtY5v#1VPq@11Y5v#1VQqzY5v#1VRqbY5v#1VSp8Y5v#1VTt8Y5v#1VUuRY5v#1VVuPY5v#1VWvCY5v#1VXvRY5v#1VYvRY5v#1VZvRY5v#1VawgY5v#1Vbt8Y5v#1Vcz8Y5v#1Vd@10pY5v#1Ve@10CY5v#1Vf@11RY5v#1Vg@11PY5v#1Vhz8Y5v#1Vi@148Y5v#1Vj@15KY5v#1Vk@15PY5v#1Vl@15IY5v#1Vm@16CY5v#1Vn@16WY5v#1Vo@17TY5v#1Vp@19PY5v#1Vq@19NY5v#1Vr@1AOY5v#1Vs@1AMY5v#1Vt@1BQY5v#1Vu@1BUY5v#1Vv@1BZY5v#1Vw@1BSY5v#1Vx@1BOY5v#1Vy@1CRY5v#1Vz@1CVY5v#1W0@1CaY5v#1W1@1CTY5v#1W2@1CPY5v#1W3@1DPY5v#1W4@1DNY5v#1W5@1EOY5v#1W6@1EMY5v#1W7@1FQY5v#1W8@1FVY5v#1W9@1FOY5v#1WA@1GRY5v#1WB@1GWY5v#1WC@1GPY5v#1WD@1HGY5v#1WE@1HUY5v#1WF@1HSY5v#1WG@1HWY5v#1WH@1IGY5v#1WI@1IVY5v#1WJ@1ITY5v#1WK@1IXY5v#1WL@1JGY5v#1WM@1JTY5v#1WN@1JQY5v#1WO@1JfY5v#1WP@1KGY5v#1WQ@1KUY5v#1WR@1KRY5v#1WS@1HGY5v#1WT@1KgY5v#1WU@1MGY5v#1WV@1MVY5v#1WW@1MSY5v#1WX@1MGY5v#1WY@1NNY5v#1WZ@1NbY5v#1Wa@1NZY5v#1Wb@1NLY5v#1Wc@1OGY5v#1Wd@1OVY5v#1We@1OSY5v#1Wf@1OGY5v#1Wg@1PGY5v#1Wh@1PVY5v#1Wi@1PSY5v#1Wj@1PGY5v#1Wk@1RGY5v#1Wl@1RWY5v#1Wm@1RTY5v#1Wn@1RGY5v#1Wo@1SNY5v#1Wp@1ScY5v#1Wq@1SaY5v#1Wr@1SLY5v#1Ws@1TGY5v#1Wt@1TWY5v#1Wu@1TTY5v#1Wv@1TGY5v#1Ww@1UGY5v#1Wx@1UWY5v#1Wy@1UTY5v#1Wz@1UGY5v#1X0@1WGY5v#1X1@1WTY5v#1X2@1WRY5v#1X3@1WGY5v#1X4@1XOY5v#1X5@1XNY5v#1X6@1XLY5v#1X7@1YTY5v#1X8@1YRY5v#1X9@1ZGY5v#1XA@1ZUY5v#1XB@1ZRY5v#1XC@1ZGY5v#1XD@1bGY5v#1XE@1bSY5v#1XF@1bQY5v#1XG@1bGY5v#1XH@1cOY5v#1XI@1cNY5v#1XJ@1cLY5v#1XK@1dSY5v#1XL@1dQY5v#1XM@1eGY5v#1XN@1eTY5v#1XO@1eQY5v#1XP@1eGY5v#1XQ@1gGY5v#1XR@1gUY5v#1XS@1gSY5v#1XT@1gEY5v#1XU@1hGY5v#1XV@1hVY5v#1XW@1hTY5v#1XX@1hEY5v#1XY@1iGY5v#1XZ@1iLY5v#1Xa@1iIY5v#1Xb@1iNY5v#1Xc@1iQY5v#1Xd@1iVY5v#1Xe@1iSY5v#1Xf@1iGY5v#1Xg@1iYY5v#1Xh@1lcY5v#1Xi@1liY5v#1Xj@1lpY5v#1Xk@1l@11Y5v#1Xl@1l@1CY5v#1Xm@1l@1OY5v#1Xn@1l@1ZY5v#1Xo@1l@1cY5v#1Xp@1lCY5v#1Xq@148Y5v#1Xr@1o8Y5v#1Xs@1pGY5v#1Xt@1pGY5v#1Xu@1p@19Y5v#1Xv@1peY5v#1Xw@1pUY5v#1Xx@1o8Y5v#1Xy@1s8Y5v#1Xz@1tHY5v#1Y0@1tGY5v#1Y1@1tGY5v#1Y2@1t@1AY5v#1Y3@1tfY5v#1Y4@1tVY5v#1Y5@1s8Y5v#1Y6M8Y5v#1Y7IRY5v#1Y8IqY5v#1Y9IqY5v#1YAIqY5v#1YBIRY5v#1YCI8Y5v#1YDOKY5v#1YEOCY5v#1YFQXY5v#1YGQcY5v#1YHQbY5v#1YIQVY5v#1YJRYY5v#1YKRdY5v#1YLRcY5v#1YMRWY5v#1YNSKY5v#1YOUSY5v#1YPUXY5v#1YQUWY5v#1YRUQY5v#1YSVXY5v#1YTVcY5v#1YUVVY5v#1YVWYY5v#1YWWdY5v#1YXWWY5v#1YYXKY5v#1YZZKY5v#1YacGY5v#1YbcVY5v#1YccSY5v#1YdcGY5v#1YedvY5v#1Yfd@11Y5v#1Ygd@1DY5v#1YhdGY5v#1YieKY5v#1YjeZY5v#1YkeWY5v#1YleKY5v#1YmfKY5v#1YnfZY5v#1YofZY5v#1YpfZY5v#1YqgTY5v#1YrhUY5v#1YshbY5v#1YthTY5v#1YuiVY5v#1YvmgY5v#1Yx64Y&J0source/Agent.cry~0A// Interface for an agent, which controls a character.~0D~0Aclass Agent {~0D~0A~09field env;~0D~0A~0D~0A~09constructor(env) {~0D~0A~09@1this.env = env;~0D~0A~09}~0D~0A~0D~0A~09// Exerts control over the given character.~0D~0A~09function control(character) {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A~0D~0A~09// Whether this agent controls the time step.~0D~0A~09function controlsTime() {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A}~0D~0A%&J1[Core]~0A%&J2[Core:core.cry]~0Anamespace Core {~0A @3const CRAYON_VERSION = ~0Y0.2.0~0Y;~0A@1 @3enum Type {~0A @7NULL = 0,~0A @7BOOLEAN = 1,~0A @7INTEGER = 2,~0A @7FLOAT = 3,~0A @7STRING = 4,~0A @7LIST = 5,~0A @7DICTIONARY = 6,~0A @7OBJECT = 7,~0A @7FUNCTION = 8,~0A @7CLASS = 9,~0A @3}~0A@1 @3function assert(condition, message = null) {~0A @7return $@2(~0dassert~0d, condition, message, true);~0A @3}~0A@1 @3function fail(message) {~0A @7return $@2(~0dassert~0d, false, message, false);~0A @3}~0A@1 @3function chr(value) {~0A @7return $@2(~0dchr~0d, value);~0A @3}~0A@1 @3function currentTime() {~0A @7return $@2(~0dcurrentTime~0d);~0A @3}~0A@1 @3function ord(value) {~0A @7return $@2(~0dord~0d, value);~0A @3}~0A@1 @3function parseFloat(value) {~0A @7return $@2(~0dparseFloat~0d, value);~0A @3}~0A@1 @3function parseInt(value) {~0A @7return $@2(~0dparseInt~0d, value);~0A @3}~0A@1 @3function print(value) {~0A @7return $@2(~0dprint~0d, value);~0A @3}~0A@1 @3function sleep(seconds) {~0A @7Core.assert(~0A @B$@2(~0dtypeis~0d, seconds, Core.Type.INTEGER, Core.Type.FLOAT) &&~0A @Bseconds >= 0, ~0YInvalid argument.~0Y);~0A @7return $@2(~0dsleep~0d, seconds);~0A @3}~0A@1 @3function typeof(value) {~0A @7return $@2(~0dtypeof~0d,value);~0A @3}~0A@1 @3function isString(value) {~0A @7return $@2(~0dtypeis~0d, value, Core.Type.STRING);~0A @3}~0A@1 @3function isNumber(value) {~0A @7return $@2(~0dtypeis~0d, value, Core.Type.INTEGER, Core.Type.FLOAT);~0A @3}~0A@1 @3function _LIB_CORE_list_sort_by_key(fp, list) {~0A @7if (list.length > 1) {~0A @B$@2(~0dsortList~0d, list, _LIB_CORE_list_map(fp, list));~0A @7}~0A @3}~0A@1 @3function _LIB_CORE_list_map(fp, list) {~0A @7output = [];~0A @7for (t : list) {~0A @Boutput.add(fp(t));~0A @7}~0A @7return output;~0A @3}~0A@1 @3function _LIB_CORE_list_filter(fp, list) {~0A @7output = [];~0A @7for (t : list) {~0A @Bb = fp(t);~0A @Bif (!$@2(~0dtypeis~0d, b, Core.Type.BOOLEAN)) {~0A @FCore.fail(~0YFilter function returned a non-boolean value.~0Y);~0A @B}~0A @Bif (b) {~0A @Foutput.add(t);~0A @B}~0A @7}~0A @7return output;~0A @3}~0A@1 @3function getCurrentExecutionToken() {~0A @7return $@2(~0dexecId~0d);~0A @3}~0A@1 @3function getExecutionIterationCounter() {~0A @7return $@2(~0dexecCounter~0d);~0A @3}~0A@1 @3function getProjectId() {~0A @7return $@2(~0dprojectId~0d);~0A @3}~0A@1 @3// Interanlly called by fp.invoke(args)~0A @3function _LIB_CORE_invoke(fp, args) {~0A @7// MAGIC ALERT: There is a special compiler hack that checks specifically for this line (based on parent~0A @7// function name) and compiles this function invocation with a special flag to treat the args list as~0A @7// individually passed arguments.~0A @7return fp(args);~0A @3}~0A@1 @3// A simple dummy object.~0A @3// The VM supports attaching native data to any object instance, and so this generally serves as~0A @3// the canonical object to use for that purpose.~0A @3class Object { }~0A}~0A%&J3[Core:exceptions.cry]~0Anamespace Core {~0A @3enum _LIB_CORE_ExType {~0A @7// These must be kept in sync with CoreExceptionTypes in Constants.cry in the interpreter.~0A @7FATAL = 0,~0A @7GENERIC_EXCEPTION = 1,~0A @7ASSERTION_FAILED = 2,~0A @7DIVISION_BY_ZERO = 3,~0A @7INDEX_OUT_OF_RANGE = 4,~0A @7INVALID_ARGUMENT = 5,~0A @7INVALID_ASSIGNMENT = 6,~0A @7INVALID_INVOCATION = 7,~0A @7INVALID_KEY = 8,~0A @7KEY_NOT_FOUND = 9,~0A @7NULL_REFERENCE = 10,~0A @7UNASSIGNED_VARIABLE = 11,~0A @7UNKNOWN_FIELD = 12,~0A @7UNSUPPORTED_OPERATION = 13,~0A @3}~0A@1 @3/*~0A @7When there are VM-generated exceptions (as opposed to exceptions thrown directly from code with the~0A @7throw keyword) the easiest way to go about this is to simply treat it as a function invocation to this~0A @7particular function which itself just uses the throw keyword.~0A @3*/~0A @3function _LIB_CORE_generateException(type, message) {~0A @7switch (type) {~0A @Bcase _LIB_CORE_ExType.FATAL: throw new FatalException(message);~0A @Bcase _LIB_CORE_ExType.ASSERTION_FAILED: throw new AssertionFailedException(message);~0A @Bcase _LIB_CORE_ExType.DIVISION_BY_ZERO: throw new DivisionByZeroException(message);~0A @Bcase _LIB_CORE_ExType.INDEX_OUT_OF_RANGE: throw new IndexOutOfRangeException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_ARGUMENT: throw new InvalidArgumentException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_ASSIGNMENT: throw new InvalidAssignmentException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_INVOCATION: throw new InvalidInvocationException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_KEY: throw new InvalidKeyException(message);~0A @Bcase _LIB_CORE_ExType.KEY_NOT_FOUND: throw new KeyNotFoundException(message);~0A @Bcase _LIB_CORE_ExType.NULL_REFERENCE: throw new NullReferenceException(message);~0A @Bcase _LIB_CORE_ExType.UNASSIGNED_VARIABLE: throw new UnassignedVariableException(message);~0A @Bcase _LIB_CORE_ExType.UNKNOWN_FIELD: throw new UnknownFieldException(message);~0A @Bcase _LIB_CORE_ExType.UNSUPPORTED_OPERATION: throw new UnsupportedOperationException(message);~0A @Bdefault: throw new Exception(message);~0A @7}~0A @3}~0A@1 @3class Exception {~0A @7/*~0A @BnativeData[0] -> (boolean) is fatal exception?~0A @BnativeData[1] -> (List<int>) list of PC~0ds this exception bubbles through~0A @FPC trace is only set when throw is invoked.~0A @7*/~0A@1 @7// Do not re-order these.~0A @7// .message field position within the class is assumed at compile time.~0A @7field cause;~0A @7field message;~0A@1 @7constructor(message = null, cause = null) {~0A @B$@2(~0dallocNativeData~0d, this, 2);~0A @B$@2(~0dsetNativeData~0d, this, 0, false); // is fatal?~0A @Bthis.message = message;~0A @Bthis.cause = cause;~0A @7}~0A@1 @7function getTrace() {~0A @Breturn $@2(~0dgetExceptionTrace~0d, this);~0A @7}~0A @3}~0A@1 @3class FatalException : Exception {~0A @7constructor(m = null, c = null) : base(m, c) {~0A @B$@2(~0dsetNativeData~0d, this, 0, true); // is fatal?~0A @7}~0A @3}~0A@1 @3class AssertionFailedException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class DivisionByZeroException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class IndexOutOfRangeException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidArgumentException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidAssignmentException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidInvocationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidKeyException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidOperationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class KeyNotFoundException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class NotImplementedException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class NullReferenceException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnassignedVariableException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnknownFieldException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnsupportedOperationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A}~0A%&J4[Core:reflection.cry]~0Anamespace Core {~0A@1 @3namespace Reflection {~0A@1 @7function getClassFromInstance(instance) {~0A @B// TODO: document what happens when instance is not an instance.~0A @Breturn $@2(~0dreflectGetClass~0d, instance);~0A @7}~0A@1 @7function getClasses(commonBaseClass = null) {~0A @Boutput = $@2(~0dreflectAllClasses~0d);~0A @Bif (commonBaseClass != null) {~0A @Ffiltered = [];~0A @Ffor (c : output) {~0A @Jif (c.isA(commonBaseClass)) {~0A @Nfiltered.add(c);~0A @J}~0A @F}~0A @Freturn filtered;~0A @B}~0A @Breturn output;~0A @7}~0A@1 @7function getMethods(instanceOrClass) {~0A @Bswitch (Core.typeof(instanceOrClass)) {~0A @F// TODO: verify that static methods are returned only from class inputs.~0A @Fcase Core.Type.OBJECT:~0A @Fcase Core.Type.CLASS:~0A @Jreturn $@2(~0dreflectGetMethods~0d, instanceOrClass);~0A @Fdefault:~0A @Jthrow new Core.InvalidArgumentException(~0YCan only get methods from an instance or class reference.~0Y);~0A @B}~0A @7}~0A @3}~0A}~0A%&J5source/AI.cry~0Aimport Math;~0D~0Aimport Random;~0D~0A~0D~0Aconst AI_TURN_CHANCE = 0.02;~0D~0Aconst AI_TOGGLE_MOVE_CHANCE = 0.02;~0D~0Aconst AI_SHOOT_CHANCE = 0.02;~0D~0A~0D~0A// A computer-controlled agent.~0D~0Aclass AI : Agent {~0D~0A~09field direction = 2.0 * Math.PI * Random.randomFloat();~0D~0A~09field speed = CHARACTER_SPEED;~0D~0A~0D~0A~09constructor(env) : base(env) {}~0D~0A~0D~0A~09function control(character) {~0D~0A~09@1if (Random.randomFloat() < AI_TURN_CHANCE) {~0D~0A~09@2this.direction = 2.0 * Math.PI * Random.randomFloat();~0D~0A~09@1}~0D~0A~09@1if (Random.randomFloat() < AI_TOGGLE_MOVE_CHANCE) {~0D~0A~09@2this.speed = this.speed > 0.0 ? 0.0 : CHARACTER_SPEED;~0D~0A~09@1}~0D~0A~09@1if (Random.randomFloat() < AI_SHOOT_CHANCE) {~0D~0A~09@2bulletHeading = this.getTarget().minus(character.pos).normalize();~0D~0A~09@2bulletPos = character.pos.plus(bulletHeading.times(BULLET_SPAWN_DISTANCE));~0D~0A~09@2bulletVel = bulletHeading.times(BULLET_SPEED);~0D~0A~09@2this.env.bullets.add(new Bullet(character, bulletPos, bulletVel));~0D~0A~09@1}~0D~0A~0D~0A~09@1character.vel = new Vec2(Math.cos(this.direction), Math.sin(this.direction)).times(this.speed);~0D~0A~09}~0D~0A~0D~0A~09function controlsTime() { return false; }~0D~0A~0D~0A~09function getTarget() {~0D~0A~09@1for (i = 0; i < this.env.characters.length; ++i) {~0D~0A~09@2if (this.env.characters[i].agent.controlsTime()) {~0D~0A~09@3return this.env.characters[i].pos.clone();~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09@1return new Vec2(Random.randomInt(0, X_RES), Random.randomInt(0, Y_RES));~0D~0A~09}~0D~0A}~0D~0A%&J6[Math]~0Anamespace Math {~0A@1 @3const PI = 3.141592653589793238462;~0A @3const E = 2.718281828459045235360;~0A@1 @3function arccos(ratio) {~0A @7// range is checked in translated code.~0A @7return $@2(~0darcCos~0d, ratio);~0A @3}~0A@1 @3function arcsin(ratio) {~0A @7// range is checked in translated code.~0A @7return $@2(~0darcSin~0d, ratio);~0A @3}~0A@1 @3function arctan(ratio_or_y, x = 1) {~0A @7return $@2(~0darcTan~0d, ratio_or_y, x);~0A @3}~0A@1 @3function cos(theta) {~0A @7return $@2(~0dcos~0d, theta);~0A @3}~0A@1 @3function floor(value) {~0A @7return $@2(~0dfloor~0d, value);~0A @3}~0A@1 @3function sin(theta) {~0A @7return $@2(~0dsin~0d, theta);~0A @3}~0A@1 @3function tan(theta) {~0A @7return $@2(~0dtan~0d, theta);~0A @3}~0A@1 @3// All logarithms are just implemented with natural log and divided by a constant value to change base.~0A @3// An attempt is made to prevent floating point arithmetic from giving bogus values like log10(10@5) -> 5.9@5.@2~0A @3// (see fixFuzzyFloatPrecision in ValueUtil.cry)~0A @3function log10(value) {~0A @7return $@2(~0dln~0d, value, 1 / 2.302585092994046);~0A @3}~0A @3function ln(value) {~0A @7return $@2(~0dln~0d, value, 1.0);~0A @3}~0A @3function log2(value) {~0A @7return $@2(~0dln~0d, value, 1 / 0.6931471805599453);~0A @3}~0A@1 @3// Despite the fact that the following functions are relatively simple and could be implemented in~0A @3// non-translated code, they are relatively common and the native code should be inlined if possible.~0A @3function abs(value) {~0A @7return $@2(~0dabs~0d, value);~0A @3}~0A@1 @3function max(a, b) {~0A @7return $@2(~0dmax~0d, a, b);~0A @3}~0A@1 @3function min(a, b) {~0A @7return $@2(~0dmin~0d, a, b);~0A @3}~0A@1 @3function ensureRange(value, minBound, maxBound) {~0A @7return $@2(~0densureRange~0d, value, minBound, maxBound);~0A @3}~0A@1 @3function sign(num) {~0A @7return $@2(~0dsign~0d, num);~0A @3}~0A}~0A%&J7[Random]~0A%&J8[Random:Random.cry]~0Aimport Math;~0A@1namespace Random {~0A @3function randomFloat() {~0A @7return $$lib_random_random_float();~0A @3}~0A@1 @3// When one argument is provided, it is the max exclusive upper bound and the min is 0.~0A @3function randomInt(minIncl, maxExcl = null) {~0A @7return (maxExcl == null)~0A @B? ($$lib_random_random_int(0, minIncl)~0A @F?? Random._randomIntErrorHelper(~0YFirst argument must be a positive integer.~0Y))~0A @B: ($$lib_random_random_int(minIncl, maxExcl)~0A @F?? Random._randomIntErrorHelper(~0YrandomInt requires two integers, where the latter is larger.~0Y));~0A @3}~0A@1 @3function _randomIntErrorHelper(msg) {~0A @7throw new Core.InvalidArgumentException(msg);~0A @3}~0A@1 @3function randomBool() {~0A @7// could write this as $$lib_random_random_float() < .5, but this way it can get inlined.~0A @7// performance of this function may potentially be important to the user.~0A @7return $$lib_random_random_bool();~0A @3}~0A@1 @3/*~0A @7Returns a boolean that~0ds weighted~0A @72 args: n in d chance that true is returned~0A @71 arg: a float from 0 to 1 that indicates the ratio of trues.~0A @3*/~0A @3function randomChance(n, d = 1) {~0A @7return $$lib_random_random_float() * d < n;~0A @3}~0A}~0A%&J9source/Body.cry~0A// Represents a circular body that can interact with other bodies.~0D~0Aclass Body {~0D~0A~09field pos;~0D~0A~09field vel;~0D~0A~09field radius;~0D~0A~0D~0A~09constructor(pos, vel, radius) {~0D~0A~09@1this.pos = pos;~0D~0A~09@1this.vel = vel;~0D~0A~09@1this.radius = radius;~0D~0A~09}~0D~0A~0D~0A~09// Tests for collision between this and that over the given time step.~0D~0A~09// that: Another Body object.~0D~0A~09// timeStep: The upper bound of the time interval to check. (Lower bound is 0.0.)~0D~0A~09function collidesWith(that, timeStep) {~0D~0A~09@1// Use relative velocity to simplify the math.~0D~0A~09@1v = that.vel.minus(this.vel);~0D~0A~09@1if (v.isZero()) {~0D~0A~09@2return false;~0D~0A~09@1}~0D~0A~0D~0A~09@1collisionRadiusSquared = (this.radius + that.radius) ** 2;~0D~0A~0D~0A~09@1// Quadratic coefficients to solve for the time when the distance between the bodies is equal to the collision radius.~0D~0A~09@1p1 = this.pos;~0D~0A~09@1p2 = that.pos;~0D~0A~09@1a = v.x ** 2 + v.y ** 2;~0D~0A~09@1b = 2 * (p1.x * v.x - v.x * p2.x + p1.y * v.y - v.y * p2.y);~0D~0A~09@1c = p1.x ** 2 + p2.x ** 2 - 2 * p1.x * p2.x + p1.y ** 2 + p2.y ** 2 - 2 * p1.y * p2.y - collisionRadiusSquared;~0D~0A~0D~0A~09@1// Valid collision if a root occurs within the time interval.~0D~0A~09@1roots = Util.getQuadraticRoots(a, b, c);~0D~0A~09@1if (roots.length == 0) {~0D~0A~09@2return false;~0D~0A~09@1} else if (roots.length == 1) {~0D~0A~09@2return 0.0 <= roots[0] && roots[0] <= timeStep;~0D~0A~09@1} else {~0D~0A~09@2return (0.0 <= roots[0] && roots[0] <= timeStep) || (0.0 <= roots[1] && roots[1] <= timeStep);~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Tests whether this body contains the given point.~0D~0A~09function contains(point) {~0D~0A~09@1return this.pos.minus(point).lengthSquared() < this.radius ** 2.0;~0D~0A~09}~0D~0A}~0D~0A%&JAsource/Bullet.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst BULLET_RADIUS = 3.0;~0D~0Aconst BULLET_DIAMETER = 2 * BULLET_RADIUS;~0D~0Aconst BULLET_SPEED = 15.0;~0D~0Aconst BULLET_TRAIL_FACTOR = 8.0;~0D~0Aconst BULLET_SPAWN_DISTANCE = CHARACTER_RADIUS + BULLET_RADIUS;~0D~0A~0D~0A// A deadly projectile.~0D~0Aclass Bullet : Body {~0D~0A~09field source;~0D~0A~09field initialPos;~0D~0A~0D~0A~09constructor(source, pos, vel) : base(pos, vel, BULLET_RADIUS) {~0D~0A~09@1this.source = source;~0D~0A~09@1this.initialPos = pos.clone();~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1this.pos = this.pos.plus(this.vel.times(timeStep));~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1trail = this.pos.minus(this.vel.times(BULLET_TRAIL_FACTOR));~0D~0A~09@1if (this.pos.minus(this.initialPos).lengthSquared() < this.pos.minus(trail).lengthSquared()) {~0D~0A~09@2trail = this.initialPos;~0D~0A~09@1}~0D~0A~09@1Graphics2D.Draw.line~0D~0A~09@2( Math.floor(this.pos.x + 0.5)~0D~0A~09@2, Math.floor(this.pos.y + 0.5)~0D~0A~09@2, Math.floor(trail.x + 0.5)~0D~0A~09@2, Math.floor(trail.y + 0.5)~0D~0A~09@2, BULLET_DIAMETER~0D~0A~09@2, 255, 0, 0~0D~0A~09@2);~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 0, 0, 0~0D~0A~09@2);~0D~0A~09}~0D~0A}~0D~0A%&JB[Graphics2D]~0A@1%&JC[Graphics2D:Draw.cry]~0Aimport Game;~0A@1namespace Graphics2D {~0A@1 @3enum _DrawCommands {~0A @7RECTANGLE = 1,~0A @7ELLIPSE = 2,~0A @7LINE = 3,~0A @7TRIANGLE = 4,~0A @7QUAD = 5,~0A @7IMAGE = 6,~0A@1 @7TEXT = 7, // Not used directly in Graphics2D. Injected by GraphicsText~0A @3}~0A@1 @3static class Draw {~0A@1 @7static field _queueOld = new Core.Object();~0A @7static field _queue = new Core.Object();~0A @7static field _text_queueOld = null;~0A @7static field _text_queue = null;~0A@1 @7static constructor() {~0A @B// essentially no-ops, but runs the queue initializers.~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queueOld, Graphics2D.Draw._text_queueOld, 0);~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 0);~0A@1 @BGame.GameWindow._frameEndHandlers.add(Graphics2D.Draw._renderer);~0A @BGame.GameWindow._frameBeginHandlers.add(Graphics2D.Draw._rendererReset);~0A @7}~0A@1 @7static function _renderer() {~0A @B// Go through and cap the color arguments to a proper range.~0A @B// Doing this here is two-fold:~0A @B// - only one function call. User-facing draw calls are unencumbered with extra logic.~0A @B// - This is done in Pastel code. Platform-specific renders will get canonicalized data.~0A @B$$lib_graphics2d_renderQueueValidateArgs(Graphics2D.Draw._queue);~0A@1 @B// send the render queue to the platform renderer~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 1);~0A@1 @B// Swap the buffers. The old buffer stays in memory, in tact, while new events get drawn to [text]queue.~0A @Bt = Graphics2D.Draw._queue;~0A @BGraphics2D.Draw._queue = Graphics2D.Draw._queueOld;~0A @BGraphics2D.Draw._queueOld = t;~0A@1 @Bt = Graphics2D.Draw._text_queue;~0A @BGraphics2D.Draw._text_queue = Graphics2D.Draw._text_queueOld;~0A @BGraphics2D.Draw._text_queueOld = t;~0A @7}~0A@1 @7static function _rendererReset() {~0A @B// clear the render queue~0A @BDraw._text_queue = null;~0A @Breturn $$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 2);~0A @7}~0A@1 @7static function ellipse(left, top, width, height, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.ELLIPSE,~0A @Fleft, top, width, height, r, g, b, a);~0A @7}~0A@1 @7static function line(startX, startY, endX, endY, strokeWidth, r, g, b, a = 255) {~0A @Bif (strokeWidth < 1) return;~0A@1 @B// casts all locals that are floats into ints.~0A @B// This is needed because ints are needed for the next two if statements and~0A @B// intQueueWrite16 runs too late.~0A @B$@2(~0dconvertFloatArgsToInts~0d);~0A@1 @B// If the line is horizontal or vertical, use the rectangle drawing code instead.~0A @B// This guarantees clean crisp 1-pixel lines across platforms which is actually~0A @B// probably the most common use case.~0A@1 @Bif (startY == endY) { // horizontal~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.RECTANGLE,~0A @J$@2(~0dmin~0d, startX, endX), // left~0A @JstartY - strokeWidth / 2, // top~0A @J$@2(~0dabs~0d, endX - startX), // width~0A @JstrokeWidth, // height~0A @Jr, g, b, a);~0A @B}~0A@1 @Bif (startX == endX) { // vertical~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.RECTANGLE,~0A @JstartX - strokeWidth / 2, // left~0A @J$@2(~0dmin~0d, startY, endY), // top~0A @JstrokeWidth, // width~0A @J$@2(~0dabs~0d, endY - startY), // height~0A @Jr, g, b, a);~0A @B}~0A@1 @B/*~0A @FGL-based platforms use the quadrilateral method to draw lines.~0A @FFor other platforms, the capping behavior of lines tends to vary~0A @Fso only use the native line drawing method when the line is skinny~0A @Fand different caps aren~0dt noticeable. (1 or 2 pixels wide)~0A@1 @FFor everything else, calculate the coordinates of the quadrilateral~0A @Fthat represents this line and use the platform~0ds polygon drawing method~0A @Finstead.~0A @B*/~0A @Bif (strokeWidth < 3 && !$$lib_graphics2d_isOpenGlBased()) {~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.LINE,~0A @JstartX, startY, endX, endY, strokeWidth, r, g, b, a);~0A @B}~0A@1 @B$@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.QUAD,~0A @FstartX, startY, endX, endY, strokeWidth, 0, 0, 0, r, g, b, a);~0A @B// The above command is just a placeholder. Do the rest of the~0A @B// transformation in translated code.@2~0A @Breturn $$lib_graphics2d_lineToQuad(Graphics2D.Draw._queue);~0A @7}~0A@1 @7static function rectangle(left, top, width, height, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.RECTANGLE,~0A @Fleft, top, width, height, r, g, b, a);~0A @7}~0A@1 @7static function triangle(ax, ay, bx, by, cx, cy, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.TRIANGLE,~0A @Fax, ay, bx, by, cx, cy, r, g, b, a);~0A @7}~0A@1 @7static function quad(ax, ay, bx, by, cx, cy, dx, dy, r, g, b, a = 255) {~0A @B// TODO: if this makes a bowtime, and this is an OpenGL based platform,~0A @B// decompose this into two triangle draws.~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.QUAD,~0A @Fax, ay, bx, by, cx, cy, dx, dy, r, g, b, a);~0A @7}~0A@1 @7static function fill(r, g, b) {~0A @Bt = Game.GameWindow.instance;~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 2);~0A @Breturn Graphics2D.Draw.rectangle(0, 0, t._w, t._h, r, g, b);~0A @7}~0A @3}~0A}~0A%&JD[Game]~0A%&JE[Game:Event.cry]~0Anamespace Game {~0A@1 @3// TODO: mark as abstract.~0A @3// This can be extended in other libraries, such as Gamepad~0A @3class Event {~0A @7field type;~0A @7constructor(type) {~0A @Bthis.type = type;~0A @7}~0A @3}~0A}~0A%&JF[Game:EventButton.cry]~0Anamespace Game {~0A @3enum EventButton {~0A @7LEFT = 0,~0A @7// MIDDLE = 1, // TODO~0A @7RIGHT = 2,~0A @3}~0A}~0A%&JG[Game:EventQuitType.cry]~0Anamespace Game {~0A@1 @3enum EventQuitType {~0A @7ALT_F4 = 0,~0A @7CLOSE_BUTTON = 1,~0A @7BACK_BUTTON = 2,~0A @3}~0A}~0A%&JH[Game:EventType.cry]~0Anamespace Game {~0A@1 @3// WARNING: These magic numbers are used throughout the stack~0A @3// GameLibHelper.cry and platform specific code.~0A @3enum EventType {~0A @7QUIT = 0x1,~0A@1 @7KEY_DOWN = 0x10,~0A @7KEY_UP = 0x11,~0A@1 @7MOUSE_MOVE = 0x20,~0A @7MOUSE_LEFT_DOWN = 0x21,~0A @7MOUSE_LEFT_UP = 0x22,~0A @7MOUSE_RIGHT_DOWN = 0x23,~0A @7MOUSE_RIGHT_UP = 0x24,~0A @7MOUSE_SCROLL = 0x25,~0A@1 @7GAMEPAD_HARDWARE = 0x30,~0A @7GAMEPAD = 0x31,~0A@1 @3}~0A}~0A%&JI[Game:GameWindow.cry]~0Aimport Math;~0A@1namespace Game {~0A@1 @3class GameWindow {~0A@1 @7static field instance;~0A@1 @7field _w;~0A @7field _h;~0A@1 @7static field _reusable_list = [];~0A@1 @7// These are static and not associated with the actual GameWindow instance.~0A @7// That means static initializers (such as the GamePad event pump) can register events without the~0A @7// window being open yet. Also, becuase they are static, they can be guarded against unauthorized~0A @7// access from user code (TODO: make that last statement true by adding the library access annotation)~0A @7static field _eventPumpHandlers = [];~0A @7static field _frameBeginHandlers = [];~0A @7static field _frameEndHandlers = [];~0A@1 @7field fps;~0A@1 @7constructor(title, fps, width, height, screenWidth = null, screenHeight = null) {~0A @BCore.assert(Core.isString(title), ~0YTitle must be a string.~0Y);~0A @Bt = ~0Y must be a number.~0Y;~0A @Bw = ~0Ywidth~0Y;~0A @Bh = ~0Yheight~0Y;~0A @BCore.assert(Core.isNumber(fps), ~0YFPS~0Y + t);~0A @BCore.assert(Core.isNumber(width), ~0Ywidth~0Y + t);~0A @BCore.assert(Core.isNumber(height), ~0Yheight~0Y + t);~0A @BCore.assert(screenWidth == null || Core.isNumber(screenWidth), ~0Yscreen ~0Y + w + t);~0A @BCore.assert(screenHeight == null || Core.isNumber(screenHeight), ~0Yscreen ~0Y + h + t);~0A@1 @BCore.assert(GameWindow.instance == null, ~0YCannot create multiple GameWindows.~0Y);~0A @BGameWindow.instance = this;~0A@1 @Bthis.fps = fps;~0A@1 @BscreenWidth = screenWidth ?? width;~0A @BscreenHeight = screenHeight ?? height;~0A@1 @Bwidth = Math.floor(width);~0A @Bheight = Math.floor(height);~0A @BscreenWidth = Math.floor(screenWidth);~0A @BscreenHeight = Math.floor(screenHeight);~0A@1 @Bthis._w = width;~0A @Bthis._h = height;~0A@1 @Bt = ~0Y must be positive.~0Y;~0A @BCore.assert(width > 0, w + t);~0A @BCore.assert(height > 0, h + t);~0A @BCore.assert(screenWidth > 0, ~0Yscreen ~0Y + w + t);~0A @BCore.assert(screenHeight > 0, ~0Yscreen ~0Y + h + t);~0A @BCore.assert(fps > 0, ~0YFPS~0Y + t);~0A@1 @B$$lib_game_initialize(fps);~0A @B$$lib_game_initialize_screen(width, height, screenWidth, screenHeight);~0A @B$$lib_game_set_title(title);~0A @7}~0A@1 @7// returns a list [isAspectRatioForced, screenWidth, screenHeight]~0A @7// can be called before game is created~0A @7// may possibly return 0 x 0 for the screen size if the underlying API can~0dt tell~0A @7// will never return [true, 0, 0]~0A @7static function getScreenInfo() {~0A @Breturn $$lib_game_getScreenInfo([false, 0, 0]);~0A @7}~0A@1 @7function clockTick() {~0A @Bfor (t : Game.GameWindow._frameEndHandlers) {~0A @Ft();~0A @B}~0A@1 @B$$lib_game_clock_tick();~0A@1 @Bfor (t : Game.GameWindow._frameBeginHandlers) {~0A @Ft();~0A @B}~0A @7}~0A@1 @7function pumpEvents() {~0A @Boutput = [];~0A @Bt = $$lib_game_pump_events(GameWindow._reusable_list);~0A @Blen = t.length;~0A @Bi = 0;~0A @Bwhile (i < len) {~0A @Fswitch (t[i++]) {~0A @J// for all mouse events: t[1] -> x, t[2] -> y~0A @Jcase EventType.MOUSE_MOVE: e = new MouseMoveEvent(t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_LEFT_DOWN: e = new MouseClickEvent(t[i - 1], EventButton.LEFT, true, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_LEFT_UP: e = new MouseClickEvent(t[i - 1], EventButton.LEFT, false, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_RIGHT_DOWN: e = new MouseClickEvent(t[i - 1], EventButton.RIGHT, true, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_RIGHT_UP: e = new MouseClickEvent(t[i - 1], EventButton.RIGHT, false, t[i++], t[i++]); break;~0A@1 @J// for mouse scroll events: t[3] -> scroll amount~0A @Jcase EventType.MOUSE_SCROLL: e = new MouseScrollEvent(t[i++], t[i++], t[i++]); break;~0A@1 @J// for key events: t[1] -> key code (see enum)~0A @Jcase EventType.KEY_DOWN: e = new KeyEvent(t[i++], true); break;~0A @Jcase EventType.KEY_UP: e = new KeyEvent(t[i++], false); break;~0A@1 @J// for quit events: t[1] -> quit subtype~0A @Jcase EventType.QUIT: e = new QuitEvent(t[i++]); break;~0A@1 @Jdefault: assert(false); break;~0A @F}~0A@1 @Foutput.add(e);~0A @B}~0A@1 @B// Things like gamepad events are added here~0A @Bif (GameWindow._eventPumpHandlers.length > 0) {~0A @Ffor (t : GameWindow._eventPumpHandlers) {~0A @Jt(output);~0A @F}~0A @B}~0A@1 @Breturn output;~0A @7}~0A@1 @7function setTitle(title) {~0A @Btitle += ~0d@1;~0A @Bif (title.length == 0) throw new Core.InvalidArgumentException(~0YTitle cannot be empty.~0Y);~0A @Breturn $$lib_game_set_title(title);~0A @7}~0A @3}~0A}~0A%&JJ[Game:KeyboardKey.cry]~0A@1namespace Game {~0A@1 @3// These keycodes are consistent with the JavaScript key codes.~0A @3// Because why not.~0A @3enum KeyboardKey {~0A@1 @7BACKSPACE = 8,~0A @7TAB = 9,~0A @7ENTER = 13,~0A @7SHIFT = 16,~0A @7CTRL = 17,~0A @7ALT = 18,~0A @7PAUSE = 19,~0A @7CAPS_LOCK = 20,~0A @7ESCAPE = 27,~0A @7SPACE = 32,~0A @7PAGE_UP = 33,~0A @7PAGE_DOWN = 34,~0A @7END = 35,~0A @7HOME = 36,~0A @7LEFT = 37,~0A @7UP = 38,~0A @7RIGHT = 39,~0A @7DOWN = 40,~0A @7PRINT_SCREEN = 44,~0A @7INSERT = 45,~0A @7DELETE = 46,~0A@1 @7NUM_0 = 48 + 0,~0A @7NUM_1 = 48 + 1,~0A @7NUM_2 = 48 + 2,~0A @7NUM_3 = 48 + 3,~0A @7NUM_4 = 48 + 4,~0A @7NUM_5 = 48 + 5,~0A @7NUM_6 = 48 + 6,~0A @7NUM_7 = 48 + 7,~0A @7NUM_8 = 48 + 8,~0A @7NUM_9 = 48 + 9,~0A@1 @7A = 64 + 1,~0A @7B = 64 + 2,~0A @7C = 64 + 3,~0A @7D = 64 + 4,~0A @7E = 64 + 5,~0A @7F = 64 + 6,~0A @7G = 64 + 7,~0A @7H = 64 + 8,~0A @7I = 64 + 9,~0A @7J = 64 + 10,~0A @7K = 64 + 11,~0A @7L = 64 + 12,~0A @7M = 64 + 13,~0A @7N = 64 + 14,~0A @7O = 64 + 15,~0A @7P = 64 + 16,~0A @7Q = 64 + 17,~0A @7R = 64 + 18,~0A @7S = 64 + 19,~0A @7T = 64 + 20,~0A @7U = 64 + 21,~0A @7V = 64 + 22,~0A @7W = 64 + 23,~0A @7X = 64 + 24,~0A @7Y = 64 + 25,~0A @7Z = 64 + 26,~0A@1 @7// In the JS keycodes, left Window key is 91 and right Window key is 92.~0A @7// But Crayon doesn~0dt care which one you press.~0A @7OS_COMMAND = 91,~0A @7CONTEXT_MENU = 93,~0A@1 @7F1 = 1@2 + 1,~0A @7F2 = 1@2 + 2,~0A @7F3 = 1@2 + 3,~0A @7F4 = 1@2 + 4,~0A @7F5 = 1@2 + 5,~0A @7F6 = 1@2 + 6,~0A @7F7 = 1@2 + 7,~0A @7F8 = 1@2 + 8,~0A @7F9 = 1@2 + 9,~0A @7F10 = 1@2 + 10,~0A @7F11 = 1@2 + 11,~0A @7F12 = 1@2 + 12,~0A@1 @7NUM_LOCK = 144,~0A @7SCROLL_LOCK = 145,~0A@1 @7SEMICOLON = 186,~0A @7EQUALS = 187,~0A @7COMMA = 188,~0A @7HYPHEN = 189,~0A @7PERIOD = 190,~0A @7SLASH = 191,~0A @7BACKTICK = 192,~0A @7OPEN_BRAKET = 219,~0A @7BACKSLASH = 220,~0A @7CLOSE_BRACKET = 221,~0A @7APOSTROPHE = 2@2,~0A @3}~0A}~0A%&JK[Game:KeyEvent.cry]~0Anamespace Game {~0A@1 @3class KeyEvent : Event {~0A @7field key;~0A @7field down;~0A@1 @7constructor(key, down) : base(down ? EventType.KEY_DOWN : EventType.KEY_UP) {~0A @Bthis.key = key;~0A @Bthis.down = down;~0A @7}~0A @3}~0A}~0A%&JL[Game:MouseClickEvent.cry]~0Anamespace Game {~0A@1 @3class MouseClickEvent : MouseEvent {~0A @7field button;~0A @7field down;~0A @7constructor(type, button, down, x, y) : base(type, x, y) {~0A @Bthis.button = button;~0A @Bthis.down = down;~0A @7}~0A @3}~0A}~0A%&JM[Game:MouseEvent.cry]~0Anamespace Game {~0A@1 @3class MouseEvent : Event {~0A @7field x;~0A @7field y;~0A @7constructor(type, x, y) : base(type) {~0A @Bthis.x = x;~0A @Bthis.y = y;~0A @7}~0A @3}~0A}~0A%&JN[Game:MouseMoveEvent.cry]~0Anamespace Game {~0A@1 @3class MouseMoveEvent : MouseEvent {~0A @7constructor(x, y) : base(EventType.MOUSE_MOVE, x, y) { }~0A @3}~0A}~0A%&JO[Game:MouseScrollEvent.cry]~0Anamespace Game {~0A@1 @3class MouseScrollEvent : MouseEvent {~0A @7field amount;~0A @7constructor(x, y, amount) : base(EventType.MOUSE_SCROLL, x, y) {~0A @Bthis.amount = amount;~0A @7}~0A @3}~0A}~0A%&JP[Game:QuitEvent.cry]~0Anamespace Game {~0A@1 @3class QuitEvent : Event {~0A @7field quitType;~0A @7constructor(quitType) : base(EventType.QUIT) {~0A @Bthis.quitType = quitType;~0A @7}~0A @3}~0A}~0A%&JQ[Graphics2D:GraphicsTexture.cry]~0Aimport Math;~0Aimport ImageResources;~0A@1namespace Graphics2D {~0A @3class GraphicsTexture {~0A @7/*~0A @BnativeData[0] -> weak reference to GraphicsTextureResource~0ds nativeData~0A@1 @BnativeData[1] -> texture left~0A @BnativeData[2] -> texture top~0A @BnativeData[3] -> texture right~0A @BnativeData[4] -> texture button~0A @BnativeData[5] -> width~0A @BnativeData[6] -> height~0A @7*/~0A@1 @7field _graphicsTextureResource;~0A @7field width;~0A @7field height;~0A@1 @7static field REUSABLE_WIDTH_HEIGHT_OUT = [0, 0];~0A @7static function load(imageResource) {~0A @BatlasNativeResource = imageResource._nativeResource;~0A @BatlasNativeResource.verifyUnlocked();~0A @Bwidth = imageResource._width;~0A @Bheight = imageResource._height;~0A@1 @Bif ($$lib_graphics2d_isPlatformUsingTextureAtlas()) { // TODO: compile time constant functions~0A @F// only create a new texture resource if one doesn~0dt exist that already has the same atlas backing it~0A @Fkey = atlasNativeResource.resourceFingerprint;~0A @FtextureResource = GraphicsTextureResource.database.get(key);~0A @Fif (textureResource == null) {~0A @JtextureResource = new GraphicsTextureResource();~0A @JnewWidth = GraphicsTexture._nextPowerOf2(atlasNativeResource.width);~0A @JnewHeight = GraphicsTexture._nextPowerOf2(atlasNativeResource.height);~0A @JtextureResource.width = newWidth;~0A @JtextureResource.height = newHeight;~0A @Jimg = new ImageResources.NativeImageData(NativeImageDataConstructionType.SIZE, [newWidth, newHeight]);~0A @JatlasDummyWrapper = new ImageResources.ImageResource(atlasNativeResource.width, atlasNativeResource.height, false);~0A @JatlasDummyWrapper._nativeResource = atlasNativeResource;~0A @Jimg.lock();~0A @Jimg.blit(atlasDummyWrapper, 0, 0);~0A @Jimg.unlock();~0A @J$$lib_graphics2d_initializeTextureResource(textureResource, true, img);~0A @JGraphicsTextureResource.database[key] = textureResource;~0A @F}~0A @Fx = imageResource._x;~0A @Fy = imageResource._y;~0A @Ftfw = textureResource.width + 0.0;~0A @Ftfh = textureResource.height + 0.0;~0A @FtextureCoords = [x / tfw, y / tfh, (x + width) / tfw, (y + height) / tfh];~0A @B} else {~0A @F// create a new texture each time.~0A @Fimg = new ImageResources.NativeImageData(NativeImageDataConstructionType.SIZE, [width, height]);~0A @Fimg.lock();~0A @Fimg.blit(imageResource, -imageResource._x, -imageResource._y);~0A @Fimg.unlock();~0A @FtextureResource = new GraphicsTextureResource();~0A @FtextureResource.width = width;~0A @FtextureResource.height = height;~0A @F$$lib_graphics2d_initializeTextureResource(textureResource, true, img);~0A @FtextureCoords = [0.0, 0.0, 1.0, 1.0];~0A @B}~0A @Btexture = new GraphicsTexture(textureResource, width, height);~0A @B$$lib_graphics2d_initializeTexture(texture, textureResource, textureCoords, width, height);~0A @Breturn texture;~0A @7}~0A@1 @7static function _nextPowerOf2(num) {~0A @Bif ((num & (num - 1)) == 0) return num;~0A @Bfor (walker = num / 2; walker > 0; walker /= 2) {~0A @Fnum |= walker;~0A @B}~0A @Breturn num + 1;~0A @7}~0A@1 @7// TODO: make this private~0A @7constructor(ref, width, height) {~0A @Bthis._graphicsTextureResource = ref;~0A @Bthis.width = width;~0A @Bthis.height = height;~0A @7}~0A@1 @7/*~0A @B[0] -> Graphics2D._DrawCommands.IMAGE,~0A@1 @B[1] -> optionFlagsBitMask {~0A @F1 - slice,~0A @F2 - stretch,~0A @F4 - rotate,~0A @F8 - alpha~0A @B}~0A@1 @B// used if slice is enabled~0A @B[2] -> sourceX,~0A @B[3] -> sourceY,~0A @B[4] -> sourceWidth,~0A @B[5] -> sourceHeight,~0A@1 @B// used if stretch is enabled~0A @B[6] -> drawWidth,~0A @B[7] -> drawHeight~0A@1 @B// these are top left corner unless rotate flag is enabled~0A @B[8] -> targetX,~0A @B[9] -> targetY,~0A@1 @B// used if rotate is enabled~0A @B[10] -> theta * 1048576,~0A@1 @B// used if alpha is enabled~0A @B[11] -> alpha value~0A@1 @7*/~0A @7function draw(x, y) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F0,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawWithAlpha(x, y, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F8,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegion(x, y, sx, sy, width, height) {~0A @Bif (width == 0 || height == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1,~0A @Fsx, sy, width, height,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawStretched(x, y, width, height) {~0A @Bif (width == 0 || height == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F2,~0A @F0, 0, 0, 0,~0A @Fwidth, height,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegionStretched(tx, ty, tw, th, sx, sy, sw, sh) {~0A @Bif (tw == 0 || th == 0 || sw == 0 || sh == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegionStretchedWithAlpha(tx, ty, tw, th, sx, sy, sw, sh, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2 | 8,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRotated(x, y, theta) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F4,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @Ftheta,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRotatedWithAlpha(x, y, theta, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F4 | 8,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @Ftheta,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawWithOptions(tx, ty, tw, th, sx, sy, sw, sh, theta, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2 | 4 | 8,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @Ftheta,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7// TODO: 90 degree rotations would be nice and simple.~0A@1 @7function _createResCopy(res) {~0A @Boutput = [res, res];~0A @Bif (!$$lib_graphics2d_isPlatformUsingTextureAtlas()) {~0A @F// for non-atlas platforms, create a copy of the texture resource.~0A @FnewRes = new GraphicsTextureResource();~0A @FnewRes.width = res.width;~0A @FnewRes.height = res.height;~0A @F$$lib_graphics2d_initializeTextureResource(newRes, false, res);~0A @Foutput[1] = newRes;~0A @B}~0A @Breturn output;~0A @7}~0A@1 @7function flip(h, v) {~0A @Bif (!(h || v)) return this;~0A @Bres = this._createResCopy(this._graphicsTextureResource);~0A @Boutput = new GraphicsTexture(res[1], this.width, this.height);~0A @Breturn $$lib_graphics2d_flip(this, output, h, v, res[0], res[1]);~0A @7}~0A@1 @7/*~0A @Bw and h are the final size as integers, not the scale ratio.~0A @BNegative integers are allowed and flip will be automatically called.~0A @7*/~0A @7function scale(w, h) {~0A @Bif (~0A @F!($@2(~0dtypeis~0d, w, Core.Type.INTEGER) &&~0A @J$@2(~0dtypeis~0d, h, Core.Type.INTEGER)) ||~0A @Fw == 0 ||~0A @Fh == 0) {~0A @FCore.fail(~0YImage dimensions must be non-zero integers.~0Y);~0A @B}~0A @Bhor = w < 0;~0A @Bver = h < 0;~0A @Bif (hor || ver) {~0A @Fimg = this.flip(hor, ver);~0A @Fw = $@2(~0dabs~0d, w);~0A @Fh = $@2(~0dabs~0d, h);~0A @B} else {~0A @Fimg = this;~0A @B}~0A @Bif (w == this.width && h == this.height) return img;~0A @Bres = this._createResCopy(this._graphicsTextureResource);~0A @Boutput = new GraphicsTexture(res[1], w, h);~0A @B$$lib_graphics2d_scale(img, output, w, h, res[0], res[1]);~0A @Breturn output;~0A @7}~0A @3}~0A}~0A%&JR[ImageResources]~0A%&JS[ImageResources:AggregatedImageSheet.cry]~0Anamespace ImageResources {~0A @3/*~0A @7Aggregated image sheets are collections of image sheets and behave just like~0A @7one giant image sheet. This class is not exposed to users through documentation~0A @7as it implements the same interface as a normal ImageSheet. These are created by~0A @7the user by passing in a list of sheet names to the ImageSheet.loadFromResources~0A @7functions instead of a single name.~0A @3*/~0A @3class AggregatedImageSheet {~0A@1 @7field _sheetsById = {};~0A @7field _orderedSheets;~0A @7field _ids = [];~0A @7field _weight = 0;~0A@1 @7field _isLoaded = false;~0A@1 @7constructor(sheets) {~0A @Bthis._orderedSheets = sheets.clone();~0A @Bif (sheets.length == 0) {~0A @Fthis._isLoaded = true;~0A @B} else {~0A @Ffor (sheet : sheets) {~0A @Jid = sheet._id;~0A @Jthis._sheetsById[id] = sheet;~0A @Jthis._ids.add(id);~0A @Jthis._weight += sheet._weight;~0A @F}~0A @B}~0A @7}~0A@1 @7function getImage(resourcePath) {~0A @Bres = ImageResourceManifest.getFileInfo(resourcePath, true);~0A @Bsheet = this._sheetsById.get(res[1]);~0A @Bif (sheet == null) {~0A @F// TODO: show the ID~0ds of the loaded ones?~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d is not included in this sheet.~0Y, resourcePath);~0A @B}~0A@1 @Breturn sheet.getImage(resourcePath);~0A @7}~0A@1 @7function isDone() {~0A @Bif (this._isLoaded) return true;~0A@1 @Bfor (sheet : this._orderedSheets) {~0A @Fif (!sheet.isDone()) {~0A @Jreturn false;~0A @F}~0A @B}~0A@1 @Bthis._isLoaded = true;~0A @Breturn true;~0A @7}~0A@1 @7function getProgress() {~0A @Bif (this._isLoaded) return 1.0;~0A@1 @Bprogress = 0.0;~0A @Bfor (sheet : this._orderedSheets) {~0A @Fprogress += sheet.getProgress() * sheet._weight;~0A @B}~0A@1 @Breturn progress / this._weight;~0A @7}~0A@1 @7function getFiles() {~0A @Boutput = [];~0A @Bfor (sheet : this._orderedSheets) {~0A @Foutput.concat(sheet.getFiles());~0A @B}~0A @Boutput.sort();~0A @Breturn output;~0A @7}~0A @3}~0A}~0A%&JT[ImageResources:Exceptions.cry]~0Anamespace ImageResources {~0A @3class ImageNotFoundException : Core.Exception {~0A@1 @7field path;~0A@1 @7// TODO: actual string.format support. Till then.@2~0A @7constructor(template, path) : base(template.replace(~0d{0}~0d, path)) {~0A @Bthis.path = path;~0A @7}~0A @3}~0A@1 @3class SheetNotFoundException : Core.Exception {~0A@1 @7field id;~0A@1 @7// TODO: string.format here as well.@2~0A @7constructor(template, id) : base(template.replace(~0d{0}~0d, id)) {~0A @Bthis.id = id;~0A @7}~0A @3}~0A@1 @3class LoadFailedException : Core.Exception {~0A @7constructor(msg) : base(msg) { }~0A @3}~0A}~0A%&JU[ImageResources:ImageLoader.cry]~0Anamespace ImageResources {~0A@1 @3enum ImageLoaderType {~0A @7RESOURCE,~0A @7WEB,~0A @7FILE,~0A @3}~0A@1 @3class ImageLoader {~0A@1 @7/*~0A @BnativeData[0] -> asynchronous loader reference~0A @FC# loader -> pointer to background worker~0A @FPython loader -> pointer to daemon thread~0A @FJavaScript loader -> some sort of data structure whose reference was passed to the async loader.~0A @FJava -> also a background thread worker.~0A @FPHP -> load image synchronously always. isDone() will just say true.~0A@1 @BnativeData[1] -> actual image data~0A @BnativeData[2] -> status code~0A @F0 -> not done~0A @F1 -> done~0A @F2 -> load failed~0A@1 @BnativeData[3] -> mutex (if the platform needs one)~0A @7*/~0A@1 @7~12private~0A @7constructor() { }~0A@1 @7/*~0A @BIt~0ds possible the user may not yield execution and check for isDone() in a while loop.~0A @BThis is reasonable if the user is simply trying to take advantage of the multithreading~0A @Bof loading images. For example.@2~0A@1 @Bloader = ImageLoader.loadFromResourcesAsync(~0dfoo.png~0d); // load image in parallel with task below~0A @BsomeSortOfExpensiveTask();~0A @Bwhile (!loader.isDone()) { }~0A @Bimage = loader.getImage();~0A@1 @BIf they do, go ahead and yield the execution if they call isDone() enough times in one~0A @Biteration of the interpreter without waiting for a yield.~0A @7*/~0A @7field _executionIterationCount = 0; // current interpreter execution counter for this execution context ID~0A @7field _isDoneChecksOnThisFrame = 0; // number of times isDone() has been called during this execution counter.~0A @7field _isDone = false;~0A @7field _nativeImage;~0A @7field _output = null;~0A@1 @7function getImage() {~0A @Bif (this._output != null) return this._output;~0A @Bif (!this._isDone) throw new Core.InvalidOperationException(~0YLoading is not finished.~0Y);~0A @Bif (this._nativeImage == null) {~0A @Fthrow new Core.InvalidOperationException(~0YImage has already been constructed.~0Y);~0A @B}~0A @Bimg = new ImageResource(this._nativeImage.width, this._nativeImage.height, false);~0A @Bimg._nativeResource = this._nativeImage;~0A @Bthis._output = img;~0A @Breturn img;~0A @7}~0A@1 @7static field REUSABLE_IS_DONE_OUT = [null];~0A @7function isDone() {~0A @Bif (this._isDone) {~0A @Freturn true;~0A @B}~0A@1 @B// There are 2 possible places where the final result of the loading is copied to~0A @B// the NativeImageData instance~0ds nativeData:~0A @B// - at the end of the asynchronous loader, using the mutex in nativeData[3]~0A @B// - as a result of this next function. It will never be called twice on a successfully loaded image.~0A @B$$lib_imageresources_checkLoaderIsDone(this, this._nativeImage, ImageLoader.REUSABLE_IS_DONE_OUT);~0A@1 @Bstatus = ImageLoader.REUSABLE_IS_DONE_OUT[0];~0A @Bif (status > 0) {~0A @Fthis._isDone = true;~0A @Fif(status != 1) throw new ImageResources.LoadFailedException(~0YError encountered while loading image.~0Y);~0A @Freturn true;~0A @B}~0A@1 @Bif ($$lib_imageresources_yieldRequiredByPlatform()) {~0A @F// Keep track of how many times this has been called without a yield.~0A @F// If it~0ds more than a couple times, then it~0ds likely this person is checking~0A @F// inside a blocking loop and the handler hasn~0dt had a chance to fire.~0A @Fc = Core.getExecutionIterationCounter();~0A @Fif (c != this._executionIterationCount) {~0A @Jthis._isDoneChecksOnThisFrame = 1;~0A @Jthis._executionIterationCount = c;~0A @F} else {~0A @Jthis._isDoneChecksOnThisFrame++;~0A @F}~0A@1 @F// If they~0dve called this function 10 times without a yield, do a thread sleep~0A @F// to potentially let the image load handler run.~0A @Fif (this._isDoneChecksOnThisFrame > 10) {~0A @JCore.sleep(.01);~0A @F}~0A @B}~0A@1 @Breturn false;~0A @7}~0A@1 @7static function loadFromResourcesAsync(filename) {~0A @Breturn ImageLoader._loadImpl(filename, false, true, null, null);~0A @7}~0A@1 @7static function loadFromResources(filename) {~0A @Breturn ImageLoader._loadImpl(filename, false, false, null, null);~0A @7}~0A@1 @7static function _loadImpl(filename, isGen, isAsync, width, height) {~0A @Bif (!isGen) {~0A @Fdata = ImageLoader.getGenName(filename);~0A @Ffilename = data[1];~0A @Fwidth = data[2];~0A @Fheight = data[3];~0A @B}~0A @BnativeImage = new NativeImageData(NativeImageDataConstructionType.BLANK, null);~0A @BnativeImage.width = width;~0A @BnativeImage.height = height;~0A@1 @Bif (isAsync) {~0A @Floader = new ImageResources.ImageLoader();~0A @Floader._nativeImage = nativeImage;~0A @F$$lib_imageresources_loadAsynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @Jloader);~0A @Freturn loader;~0A @B}~0A@1 @BstatusOut = [false, true];~0A @Bif ($$lib_imageresources_yieldRequiredByPlatform()) {~0A @Floader = new ImageResources.ImageLoader();~0A @Floader._nativeImage = nativeImage;~0A @F$$lib_imageresources_loadAsynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @Jloader);~0A@1 @FCore.sleep(.005);~0A @Fdelay = .01;~0A @Fwhile (!loader.isDone()) {~0A @JCore.sleep(delay);~0A @Jdelay *= 1.2;~0A @Jif (delay > 1) delay = 1;~0A @F}~0A @FstatusOut.reverse();~0A @B} else {~0A @F$$lib_imageresources_loadSynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @JstatusOut);~0A @B}~0A@1 @B// TODO: include filename in LoadFailedException. filename in this function can potentially be a generated name which is not useful.~0A @Bif (!statusOut[0]) throw new ImageResources.LoadFailedException(~0YImage load failed~0Y);~0A@1 @Bimage = new ImageResources.ImageResource(width, height, false);~0A @Bimage._nativeResource = nativeImage;~0A @Breturn image;~0A @7}~0A@1 @7static function getGenName(filename) {~0A @Binfo = ImageResourceManifest.getFileInfo(filename);~0A @Bif (info == null) throw new ImageResources.ImageNotFoundException(~0YImage resource ~0d{0}~0d not found.~0Y, filename);~0A @Bif (info[0] == ImgResourceType.SHEET) throw new ImageResources.LoadFailedException(~0Y~0d~0Y + filename + ~0Y~0d must be loaded as an ImageSheet.~0Y);~0A @Breturn info;~0A @7}~0A @3}~0A}~0A%&JV[ImageResources:ImageResource.cry]~0Anamespace ImageResources {~0A @3class ImageResource {~0A@1 @7field _nativeResource;~0A @7field _width;~0A @7field _height;~0A@1 @7// top-left location within the _nativeResource~0A @7field _x = 0;~0A @7field _y = 0;~0A@1 @7// Do not document init. Only used internally.~0A @7constructor(width, height, init = true) {~0A @Bthis._width = width;~0A @Bthis._height = height;~0A @Bif (init) {~0A @Fthis._nativeResource = new NativeImageData(NativeImageDataConstructionType.SIZE, [width, height]);~0A @B}~0A @7}~0A@1 @7// TODO: support immutable fields. I~0dd much rather expose these as .width and .height.~0A @7function getWidth() { return this._width; }~0A @7function getHeight() { return this._height; }~0A @3}~0A}~0A%&JW[ImageResources:ImageResourceManifest.cry]~0A/*~0A @3See notes.txt~0A*/~0A@1namespace ImageResources {~0A @3enum ImgResourceType {~0A @7STANDALONE,~0A @7SHEET,~0A @3}~0A@1 @3class ImageResourceManifest {~0A@1 @7static field resourceInfo = null;~0A @7static field sheetInfo = null;~0A @7static field sheetIdByName = {};~0A @7static field filesBySheetId = {};~0A@1 @7static function getFileInfo(filename, sheetOnly = false) {~0A @BImageResourceManifest.ensureInitialized();~0A @Boutput = ImageResourceManifest.resourceInfo.get(filename);~0A @Bif (output == null) {~0A @Fnkey = filename.trim().replace(~0d~1U@1~0d, ~0d/~0d);~0A @Foutput = ImageResourceManifest.resourceInfo.get(nkey);~0A @Fif (output != null) {~0A @JImageResourceManifest.resourceInfo[filename] = output;~0A @F}~0A @B}~0A@1 @Bif (output == null) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d does not exist.~0Y, filename);~0A @B}~0A@1 @Bif (sheetOnly && output[0] != ImgResourceType.SHEET) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d is standalone and not included in an image sheet.~0Y, filename);~0A @B}~0A@1 @Breturn output;~0A @7}~0A@1 @7static function getSheetInfo(name) {~0A @BImageResourceManifest.ensureInitialized();~0A @Bif (Core.typeof(name) != Core.Type.STRING) throw new Core.InvalidArgumentException(~0YImage sheet ID must be a string~0Y);~0A @Bid = ImageResourceManifest.sheetIdByName.get(name);~0A @Bif (id == null) throw new ImageResources.SheetNotFoundException(~0YImage sheet with ID of ~0d{0}~0d not found.~0Y, name);~0A @Breturn ImageResourceManifest.sheetInfo[id];~0A @7}~0A@1 @7static function ensureInitialized() {~0A @Bif (ImageResourceManifest.resourceInfo != null) return;~0A @BresourceInfo = {};~0A @BsheetInfo = {};~0A @BImageResourceManifest.resourceInfo = resourceInfo;~0A @BImageResourceManifest.sheetInfo = sheetInfo;~0A@1 @Bmanifest = $$lib_imageresources_getManifestString();~0A @BactiveSheetId = null;~0A @BactiveChunkId = 0;~0A @Bfor (line : manifest.split(~0d~1Un~0d)) {~0A @Fparts = line.split(~0d,~0d);~0A @Fswitch (parts[0].trim()) {~0A@1 @Jcase ~0dA~0d: // A standalone file~0A @NgenFilename = parts[1];~0A @Nw = Core.parseInt(parts[2]);~0A @Nh = Core.parseInt(parts[3]);~0A @Nfilename = parts[4:].join(~0d,~0d).trim();~0A @NresourceInfo[filename] = [ImgResourceType.STANDALONE, genFilename, w, h];~0A @Nbreak;~0A@1 @Jcase ~0dS~0d: // declare a new sheet~0A @NactiveSheetId = parts[1];~0A @Nname = parts[2:].join(~0d,~0d).trim();~0A @NsheetInfo[activeSheetId] = {~0A @R~0dname~0d: name,~0A @R~0did~0d: activeSheetId,~0A @R~0dchunks~0d: {},~0A @N};~0A @NImageResourceManifest.sheetIdByName[name] = activeSheetId;~0A @Nbreak;~0A@1 @Jcase ~0dC~0d: // declare a new chunk~0A @N++activeChunkId;~0A @Nwidth = Core.parseInt(parts[1]);~0A @Nheight = Core.parseInt(parts[2]);~0A @Nif (width == 0 && height == 0) {~0A @Rwidth = 1024;~0A @Rheight = 1024;~0A @N}~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId] = {~0A @R~0dwidth~0d: width,~0A @R~0dheight~0d: height,~0A @R~0dtiles~0d: [],~0A @N};~0A @Nbreak;~0A@1 @Jcase ~0dT~0d: // tile in the active chunk~0A @NgenFilename = parts[1];~0A @Nx = Core.parseInt(parts[2]);~0A @Ny = Core.parseInt(parts[3]);~0A @Nwidth = Core.parseInt(parts[4]);~0A @Nheight = Core.parseInt(parts[5]);~0A @Nbytes = Core.parseInt(parts[6]);~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId][~0dtiles~0d].add(~0A @R[genFilename, x, y, width, height, bytes]);~0A @Nbreak;~0A @Jcase ~0dI~0d: // image in the active sheet/chunk~0A @Nx = Core.parseInt(parts[1]);~0A @Ny = Core.parseInt(parts[2]);~0A @Nwidth = Core.parseInt(parts[3]);~0A @Nheight = Core.parseInt(parts[4]);~0A @Nfilename = parts[5:].join(~0d,~0d).trim();~0A @NresourceInfo[filename] = [ImgResourceType.SHEET, activeSheetId, activeChunkId, x, y, width, height];~0A @Nfiles = ImageResourceManifest.filesBySheetId.get(activeSheetId) ?? [];~0A @NImageResourceManifest.filesBySheetId[activeSheetId] = files;~0A @Nfiles.add(filename);~0A @Nbreak;~0A@1 @Jcase ~0dJ~0d: // A JPEG that is a member of a sheet logically but is its own chunk~0A @NgenFilename = parts[1];~0A @Nwidth = Core.parseInt(parts[2]);~0A @Nheight = Core.parseInt(parts[3]);~0A @Nbytes = Core.parseInt(parts[4]);~0A @Nfilename = parts[5:].join(~0d,~0d).trim();~0A@1 @N++activeChunkId;~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId] = {~0A @R~0dwidth~0d: width,~0A @R~0dheight~0d: height,~0A @R~0dtiles~0d: [~0A @V[genFilename, 0, 0, width, height, bytes],~0A @R],~0A @N};~0A @Nfiles = ImageResourceManifest.filesBySheetId.get(activeSheetId) ?? [];~0A @NImageResourceManifest.filesBySheetId[activeSheetId] = files;~0A @Nfiles.add(filename);~0A @NresourceInfo[filename] = [ImgResourceType.SHEET, activeSheetId, activeChunkId, 0, 0, width, height];~0A @Nbreak;~0A@1 @Jdefault:~0A @N// This should not happen.~0A @N// If it does, there~0ds a good chance that it~0ds the BOM in the file.~0A @Nthrow new Exception([~0A @Rparts,~0A @Rparts[0].trim().length // this value should be 1~0A @N]);~0A @F}~0A @B}~0A@1 @Bfor (files : ImageResourceManifest.filesBySheetId.values()) {~0A @Ffiles.sort();~0A @B}~0A @7}~0A @3}~0A}~0A%&JX[ImageResources:ImageSheet.cry]~0Anamespace ImageResources {~0A @3class ImageSheet {~0A@1 @7field _isLoaded = false;~0A @7field _info;~0A @7field _loader;~0A @7field _name;~0A @7field _id;~0A@1 @7// List where the chunk ID is the index and the value is an ImageResource instance.~0A @7field _chunks;~0A@1 @7// essentially this amounts to the tile count (as of now)~0A @7// For aggregated image sheets, this represents a relative weight of how much ~0Ystuff~0Y~0A @7// this sheet loads so that the overall percentage can be shown as a function of all~0A @7// sheets more accurately.~0A @7field _weight;~0A@1 @7~12private~0A @7constructor(info, isAsync) {~0A @Bthis._info = info;~0A @Bthis._name = info[~0dname~0d];~0A @Bthis._id = info[~0did~0d];~0A@1 @Bchunks = info[~0dchunks~0d];~0A @Btiles = [];~0A @Bfor (chunk : chunks.values()) {~0A @Ftiles.concat(chunk[~0dtiles~0d]);~0A @B}~0A@1 @Bthis._weight = tiles.length;~0A@1 @Bif (isAsync) {~0A @Fthis._loader = new ImageResources.ImageSheetLoaderAsync(tiles).load();~0A @B} else {~0A @Flookup = {};~0A @Ffor (tile : tiles) {~0A @JgenName = tile[0];~0A @Jwidth = tile[3];~0A @Jheight = tile[4];~0A @Jlookup[genName] = ImageLoader._loadImpl(~0A @NgenName,~0A @Ntrue, // is generated name~0A @Nfalse, // is asynchronous~0A @Nwidth, height);~0A @F}~0A @Fthis._turnTilesIntoSheet(lookup);~0A @B}~0A @7}~0A@1 @7static function loadFromResources(name) {~0A @Breturn ImageSheet._initImpl(name, false, true);~0A @7}~0A@1 @7static function loadFromResourcesAsync(name) {~0A @Breturn ImageSheet._initImpl(name, true, true);~0A @7}~0A@1 @7static function _initImpl(name, isAsync, allowLists) {~0A@1 @B// If name is actually a LIST of names, then the user actually wants an~0A @B// aggregated image sheet.~0A @Bif (allowLists && Core.typeof(name) == Core.Type.LIST) {~0A @Fsheets = [];~0A @Ffor (t : name) {~0A @Jsheets.add(ImageSheet._initImpl(t, isAsync, false));~0A @F}~0A @Freturn new AggregatedImageSheet(sheets);~0A @B}~0A@1 @B// asserts on not found, so info is always non-null/valid~0A @Binfo = ImageResourceManifest.getSheetInfo(name);~0A@1 @Breturn new ImageSheet(info, isAsync);~0A @7}~0A@1 @7function getImage(resourcePath) {~0A @Bif (!this._isLoaded) throw new ImageResources.LoadFailedException(~0YCannot load image from sheet that is not finished loading.~0Y);~0A@1 @B// Convert the _loader object into a finalized sheet and GC the loader~0A @B// if present.~0A @Bif (this._loader != null) {~0A @Fthis._turnTilesIntoSheet(this._loader.completed);~0A @Fthis._loader = null;~0A @B}~0A@1 @Bres = ImageResourceManifest.getFileInfo(resourcePath, true);~0A @Bif (res[1] != this._id) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YImage sheet ~0d~0Y + this._name + ~0Y~0d does not contain resource: ~0d{0}~0d~0Y, resourcePath);~0A @B}~0A@1 @Bimg = this._chunks[res[2]];~0A@1 @Boutput = new ImageResources.ImageResource(res[5], res[6], false);~0A @Boutput._nativeResource = img._nativeResource;~0A @Boutput._x = res[3];~0A @Boutput._y = res[4];~0A @Breturn output;~0A @7}~0A@1 @7static field _reusableStatusOut = [null, null];~0A @7function isDone() {~0A @Bif (this._isLoaded) return true;~0A @Bthis._loader.getStatus(ImageSheet._reusableStatusOut);~0A @Bif (ImageSheet._reusableStatusOut[0]) {~0A @Fthis._isLoaded = true;~0A @B}~0A @Breturn this._isLoaded;~0A @7}~0A@1 @7function getProgress() {~0A @Bif (this._isLoaded) return 1.0;~0A @Bthis._loader.getStatus(ImageSheet._reusableStatusOut);~0A @Bif (ImageSheet._reusableStatusOut[0]) {~0A @Fthis._isLoaded = true;~0A @Freturn 1.0;~0A @B}~0A @Breturn ImageSheet._reusableStatusOut[1];~0A @7}~0A@1 @7function _turnTilesIntoSheet(tilesByName) {~0A @BchunkMetadata = this._info[~0dchunks~0d];~0A @Bchunks = [];~0A @Bfor (chunkId : chunkMetadata.keys()) {~0A @Fchunk = chunkMetadata[chunkId];~0A @Fimg = new ImageResources.ImageResource(chunk[~0dwidth~0d], chunk[~0dheight~0d]);~0A @Fres = img._nativeResource;~0A @Fres.lock();~0A @Ffor (tile : chunk[~0dtiles~0d]) {~0A @Jname = tile[0];~0A @Jx = tile[1];~0A @Jy = tile[2];~0A @Jres.blit(tilesByName[name], x, y);~0A @F}~0A @Fres.unlock();~0A @Fwhile (chunks.length <= chunkId) { chunks.add(null); }~0A @Fchunks[chunkId] = img;~0A @B}~0A @Bthis._chunks = chunks;~0A @Bthis._isLoaded = true;~0A @Bthis._info = null; // no longer needed. feed to the GC.~0A @7}~0A@1 @7function getFiles() {~0A @Breturn ImageResourceManifest.filesBySheetId[this._id].clone();~0A @7}~0A @3}~0A@1 @3class ImageSheetLoaderAsync {~0A @7field tiles;~0A @7field completed = {};~0A @7field inProgress = {};~0A@1 @7constructor(tiles) {~0A @Bthis.tiles = tiles;~0A @7}~0A@1 @7function load() {~0A @Bfor (tile : this.tiles) {~0A @FgenName = tile[0];~0A @Fwidth = tile[3];~0A @Fheight = tile[4];~0A @Fthis.inProgress[genName] = ImageLoader._loadImpl(~0A @JgenName,~0A @Jtrue, // is generated filename~0A @Jtrue, // is asynchronous~0A @Jwidth, height);~0A @B}~0A @Breturn this;~0A @7}~0A@1 @7function getStatus(out) {~0A @Bif (this.inProgress.length > 0) {~0A @Ffor (key : this.inProgress.keys()) {~0A @Jif (this.inProgress[key].isDone()) {~0A @Nthis.completed[key] = this.inProgress[key].getImage();~0A @Nthis.inProgress.remove(key);~0A @J}~0A @F}~0A @B}~0A@1 @Bif (this.inProgress.length == 0) {~0A @Fout[0] = true;~0A @Fout[1] = 1.0;~0A @B} else {~0A @Fout[0] = false;~0A @Fout[1] = 1.0 * this.completed.length / this.tiles.length;~0A @B}~0A @7}~0A @3}~0A}~0A%&JY[ImageResources:NativeImageData.cry]~0Anamespace ImageResources {~0A @3enum NativeImageDataConstructionType {~0A @7SIZE,~0A @7BLANK,~0A @7CLONE,~0A @3}~0A @3class NativeImageData {~0A@1 @7static field GLOBAL_ID = 0;~0A@1 @7// nativeData[0] -> native bitmap resource~0A @7// nativeData[1] -> bitmap width~0A @7// nativeData[2] -> bitmap height~0A @7// nativeData[3] -> pixel edit session~0A@1 @7field width;~0A @7field height;~0A @7field revisionId = 0;~0A @7field resourceId = NativeImageData.GLOBAL_ID++;~0A @7field resourceFingerprint;~0A @7field _locked = false;~0A@1 @7constructor(instruction, args) {~0A@1 @Bswitch (instruction) {~0A @Fcase NativeImageDataConstructionType.SIZE:~0A @Jthis.width = args[0];~0A @Jthis.height = args[1];~0A @Jbreak;~0A @Fcase NativeImageDataConstructionType.CLONE:~0A @Jother = args[0];~0A @Jthis.width = other.width;~0A @Jthis.height = other.height;~0A @Jbreak;~0A @Fcase NativeImageDataConstructionType.BLANK:~0A @Jbreak;~0A @B}~0A@1 @Bif (instruction != NativeImageDataConstructionType.BLANK) {~0A @F$$lib_imageresources_nativeImageDataInit(this, this.width, this.height);~0A @Fif (instruction == NativeImageDataConstructionType.CLONE) {~0A @Jthis.revisionId--; // since this is the constructor prevent the first revision ID from being 1.~0A @Jthis.lock();~0A @Jthis.blit(other, 0, 0);~0A @Jthis.unlock();~0A @F}~0A @B}~0A@1 @Bthis.updateResourceFingerprint();~0A @7}~0A@1 @7function updateResourceFingerprint() {~0A @Bthis.resourceFingerprint = this.resourceId + ~0d,~0d + this.revisionId;~0A @7}~0A@1 @7function lock() {~0A @Bthis._locked = true;~0A @Bthis.revisionId++;~0A @Bthis.updateResourceFingerprint();~0A @7}~0A@1 @7function unlock() {~0A @B$$lib_imageresources_flushImageChanges(this);~0A @Bthis._locked = false;~0A @7}~0A@1 @7function blit(image, x, y) {~0A @Bother = image._nativeResource;~0A @Bother.verifyUnlocked();~0A @Bthis.verifyLocked();~0A@1 @BtargetLeft = x;~0A @BtargetTop = y;~0A @BtargetRight = x + other.width;~0A @BtargetBottom = y + other.height;~0A @BsourceLeft = 0;~0A @BsourceTop = 0;~0A @BsourceRight = other.width;~0A @BsourceBottom = other.height;~0A @Bif (targetRight < 0 ||~0A @FtargetBottom < 0 ||~0A @FtargetTop >= this.height ||~0A @FtargetLeft >= this.width) return;~0A@1 @Bif (targetRight >= this.width) {~0A @Fdiff = targetRight - this.width;~0A @FtargetRight -= diff;~0A @FsourceRight -= diff;~0A @B}~0A @Bif (targetBottom >= this.height) {~0A @Fdiff = targetBottom - this.height;~0A @FtargetBottom -= diff;~0A @FsourceBottom -= diff;~0A @B}~0A @Bif (targetLeft < 0) {~0A @Fdiff = -targetLeft;~0A @FtargetLeft = 0;~0A @FsourceLeft += diff;~0A @B}~0A @Bif (targetTop < 0) {~0A @Fdiff = -targetTop;~0A @FtargetTop = 0;~0A @FsourceTop += diff;~0A @B}~0A @Bw = sourceRight - sourceLeft;~0A @Bh = sourceBottom - sourceTop;~0A @Bif (w == 0 || h == 0) return;~0A@1 @B// initializes the pixel edit session in nativeData[3] if not present~0A @B$$lib_imageresources_blit(this, other, targetLeft, targetTop, sourceLeft, sourceTop, w, h);~0A @7}~0A@1 @7function verifyUnlocked() {~0A @Bif (this._locked) throw new Core.InvalidOperationException(~0YImage resource is locked and cannot be used.~0Y);~0A @7}~0A@1 @7function verifyLocked() {~0A @Bif (!this._locked) throw new Core.InvalidOperationException(~0YImage resource must be locked.~0Y);~0A @7}~0A @3}~0A}~0A%&JZ[Graphics2D:GraphicsTextureResource.cry]~0Anamespace Graphics2D {~0A @3class GraphicsTextureResource {~0A@1 @7static field database = {}; // mapping of ImageResource version keys to GraphicsTextureResource instances.~0A@1 @7/*~0A @BnativeData[0] -> boolean if this is GL-based~0A @BnativeData[1] -> boolean if this texture is loaded.~0A @BnativeData[2] -> texture ID for OpenGL-based platforms~0A @BnativeData[3] -> a _COPY_ of the actual native image resource~0A @Ffor OpenGL platforms this is a power-of-2 sized image~0A @Ffor non-GL platforms this is a simple image of just the image desired, which could be a single~0A @Jmember of an image sheet.~0A @BnativeData[4] -> width~0A @BnativeData[5] -> height~0A @7*/~0A@1 @7// set externally~0A @7field width;~0A @7field height;~0A@1 @7constructor() { }~0A @3}~0A}~0A%&Jasource/Character.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst CHARACTER_RADIUS = 15.0;~0D~0Aconst CHARACTER_SPEED = 5.0;~0D~0A~0D~0A// A computer- or human-controlled game character.~0D~0Aclass Character : Body {~0D~0A~09field agent;~0D~0A~09field health = 5;~0D~0A~09field weapon = new Pistol();~0D~0A~0D~0A~09constructor(agent, pos) : base(pos, Vec2.zero(), CHARACTER_RADIUS) {~0D~0A~09@1this.agent = agent;~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1this.pos = this.pos.plus(this.vel.times(timeStep));~0D~0A~0D~0A~09@1// Clamp character to boundaries.~0D~0A~09@1if (this.pos.x < this.radius) {~0D~0A~09@2this.pos.x = this.radius;~0D~0A~09@1} else if (this.pos.x > X_RES - this.radius) {~0D~0A~09@2this.pos.x = X_RES - this.radius;~0D~0A~09@1}~0D~0A~09@1if (this.pos.y < this.radius) {~0D~0A~09@2this.pos.y = this.radius;~0D~0A~09@1} else if (this.pos.y > Y_RES - this.radius) {~0D~0A~09@2this.pos.y = Y_RES - this.radius;~0D~0A~09@1}~0D~0A~0D~0A~09@1this.agent.control(this);~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1color = this.agent.controlsTime() ? Color.black() : Color.red();~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, color.r, color.g, color.b~0D~0A~09@2);~0D~0A~09}~0D~0A}~0D~0A%&Jbsource/Color.cry~0A// Represents an RGBA color.~0D~0Aclass Color {~0D~0A~09field r; // red~0D~0A~09field g; // green~0D~0A~09field b; // blue~0D~0A~09field a; // alpha~0D~0A~0D~0A~09constructor(r, g, b, a = 255) {~0D~0A~09@1this.r = r;~0D~0A~09@1this.g = g;~0D~0A~09@1this.b = b;~0D~0A~09@1this.a = a;~0D~0A~09}~0D~0A~0D~0A~09static function black(a = 255) { return new Color(0, 0, 0, a); }~0D~0A~09static function gray(a = 255) { return new Color(128, 128, 128, a); }~0D~0A~09static function silver(a = 255) { return new Color(192, 192, 192, a); }~0D~0A~09static function white(a = 255) { return new Color(255, 255, 255, a); }~0D~0A~09static function red(a = 255) { return new Color(255, 0, 0, a); }~0D~0A}~0D~0A%&Jcsource/Drawing.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0A// Helper class for slightly more advanced/flexible image drawing.~0D~0Aclass Drawing {~0D~0A~09field x = 0;~0D~0A~09field y = 0;~0D~0A~09field hAlign = 0.0;~0D~0A~09field vAlign = 0.0;~0D~0A~09field bgColor = null;~0D~0A~09field image = null;~0D~0A~0D~0A~09function setPos(x, y) {~0D~0A~09@1this.x = x;~0D~0A~09@1this.y = y;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function alignLeft() {~0D~0A~09@1this.hAlign = 0.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignCenter() {~0D~0A~09@1this.hAlign = 0.5;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignRight() {~0D~0A~09@1this.hAlign = 1.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function alignTop() {~0D~0A~09@1this.vAlign = 0.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignMiddle() {~0D~0A~09@1this.vAlign = 0.5;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignBottom() {~0D~0A~09@1this.vAlign = 1.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function setBgColor(color) {~0D~0A~09@1this.bgColor = color;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function setImage(image) {~0D~0A~09@1this.image = image;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1left = this.x - Math.floor(this.image.width * this.hAlign);~0D~0A~09@1top = this.y - Math.floor(this.image.height * this.vAlign);~0D~0A~09@1if (this.bgColor != null) {~0D~0A~09@2Graphics2D.Draw.rectangle~0D~0A~09@3( left~0D~0A~09@3, top~0D~0A~09@3, this.image.width~0D~0A~09@3, this.image.height~0D~0A~09@3, this.bgColor.r, this.bgColor.g, this.bgColor.b, this.bgColor.a~0D~0A~09@3);~0D~0A~09@1}~0D~0A~09@1if (this.image != null) {~0D~0A~09@2this.image.draw(left, top);~0D~0A~09@1}~0D~0A~09}~0D~0A}~0D~0A%&Jdsource/Environment.cry~0Aimport Graphics2D;~0D~0A~0D~0Aconst MIN_TIME_STEP = 0.05;~0D~0Aconst MAX_TIME_STEP = 1.0;~0D~0Aconst TIME_STEP_STEP = 0.05;~0D~0A~0D~0A// Represents a set of objects in a common environment.~0D~0Aclass Environment {~0D~0A~09field characters = [];~0D~0A~09field bullets = [];~0D~0A~09field timeStep = MIN_TIME_STEP;~0D~0A~09field totalTime = 0.0;~0D~0A~0D~0A~09constructor() {}~0D~0A~0D~0A~09// Updates all the objects in this environment.~0D~0A~09function update() {~0D~0A~09@1// Update characters.~0D~0A~09@1for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@2this.characters[i].update(this.timeStep);~0D~0A~09@1}~0D~0A~0D~0A~09@1// Update bullets.~0D~0A~09@1for (i = 0; i < this.bullets.length; ++i) {~0D~0A~09@2this.bullets[i].update(this.timeStep);~0D~0A~0D~0A~09@2// Remove out-of-bounds bullets.~0D~0A~09@2if (this.outOfBounds(this.bullets[i])) {~0D~0A~09@3this.bullets.remove(i);~0D~0A~09@3--i;~0D~0A~09@2} else {~0D~0A~09@3// Bullet-character collisions.~0D~0A~09@3for (j = 0; j < this.characters.length; ++j) {~0D~0A~09@4if (this.bullets[i].collidesWith(this.characters[j], this.timeStep)) {~0D~0A~09@5this.bullets.remove(i);~0D~0A~09@5--i;~0D~0A~0D~0A~09@5--this.characters[j].health;~0D~0A~09@5if (this.characters[j].health <= 0) {~0D~0A~09@6this.characters.remove(j);~0D~0A~09@5}~0D~0A~09@5break;~0D~0A~09@4}~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1}~0D~0A~0D~0A~09@1// Speed up time the longer the player has been moving, up to real time.~0D~0A~09@1if (this.characters.length > 0) {~0D~0A~09@2for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@3if (this.characters[i].agent.controlsTime()) {~0D~0A~09@4if (this.characters[i].vel.isZero()) {~0D~0A~09@5this.timeStep = MIN_TIME_STEP;~0D~0A~09@4} else {~0D~0A~09@5this.timeStep += TIME_STEP_STEP;~0D~0A~09@5if (this.timeStep > MAX_TIME_STEP) {~0D~0A~09@6this.timeStep = MAX_TIME_STEP;~0D~0A~09@5}~0D~0A~09@4}~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1} else {~0D~0A~09@2this.timeStep = MAX_TIME_STEP;~0D~0A~09@1}~0D~0A~09@1this.totalTime += this.timeStep;~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1Graphics2D.Draw.fill(255, 255, 255);~0D~0A~0D~0A~09@1// Draw bullets.~0D~0A~09@1for (i = 0; i < this.bullets.length; ++i) {~0D~0A~09@2this.bullets[i].draw();~0D~0A~09@1}~0D~0A~0D~0A~09@1// Draw characters.~0D~0A~09@1for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@2this.characters[i].draw();~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Whether the given body is out of the environment bounds.~0D~0A~09function outOfBounds(body) {~0D~0A~09@1return body.pos.x < -2.0 * body.radius~0D~0A~09@2|| body.pos.x > X_RES + 2.0 * body.radius~0D~0A~09@2|| body.pos.y < -2.0 * body.radius~0D~0A~09@2|| body.pos.y > Y_RES + 2.0 * body.radius;~0D~0A~09}~0D~0A~0D~0A~09// Shoots a bullet (with no source) from from to to.~0D~0A~09function shoot(from, to) {~0D~0A~09@1bulletPos = from.clone();~0D~0A~09@1bulletVel = to.minus(from).normalize().times(BULLET_SPEED);~0D~0A~09@1this.bullets.add(new Bullet(null, bulletPos, bulletVel));~0D~0A~09}~0D~0A}~0D~0A%&Jesource/Font.cry~0Aimport Graphics2DText;~0D~0A~0D~0A// Shared font resources.~0D~0Aclass Font {~0D~0A~09static field title = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 0, 0).setSize(48);~0D~0A~09static field white = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 255, 255).setSize(16);~0D~0A~09static field black = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 0, 0).setSize(16);~0D~0A~09static field red = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 0, 0).setSize(16);~0D~0A~09static field lime = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 255, 0).setSize(16);~0D~0A~09static field yellow = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 255, 0).setSize(16);~0D~0A~09static field green = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 128, 0).setSize(16);~0D~0A}~0D~0A%&Jf[Graphics2DText]~0A%&Jg[Graphics2DText:enums.cry]~0A/*~0A @3On some level, some sort of font resource needs to be cached.~0A @3What is defined as a font resource varies from platform to platform~0A@1 @3For Python, it~0ds the font face, size, style~0A@1 @3For Java, it~0ds just the font~0A@1 @3For JavaScript, there~0ds nothing. You pass the font name as a string to the draw context for each use~0A @3- although, for JS, the process for checking if a font is a little weird.~0A@1 @3For OpenGL a collection of texture atlases are created.~0A @3- first each character is rendered at size 36 in individual images~0A @3- these characters are stored in a several layer cache~0A @3- each time a character is used it~0ds moved to the top cache~0A @3- every minute or so each cache layer is demoted~0A @3- every once in a while a series of textures are created~0A @3- if there are less than 200 characters rendered by the font, no cache churning occurs~0A @3- each cache/texture system is keyed off font face, size, and style~0A @3- coloring is handled by the fragment shader~0A @3- note that rendering rapidly changing characters (of something like chinese) at size 72 could kill performance, but that~0ds an edge case~0A@1*/~0Anamespace Graphics2DText {~0A@1 @3enum FontSourceType {~0A @7DEFAULT = 0,~0A @7RESOURCE = 1,~0A @7FILE = 2,~0A @7SYSTEM = 3,~0A @3}~0A@1 @3enum FontClass {~0A @7SERIF = 1,~0A @7SANS_SERIF = 2,~0A @7MONOSPACE = 3,~0A @3}~0A@1 @3enum FontStyle {~0A @7NORMAL = 0,~0A @7BOLD = 1,~0A @7ITALIC = 2,~0A @7BOLD_ITALIC = 3, // bit mask of BOLD | ITALIC~0A @3}~0A}~0A%&Jh[Graphics2DText:FontNotFoundException.cry]~0Anamespace Graphics2DText {~0A@1 @3class FontNotFoundException : Core.Exception {~0A @7constructor(m) : base (m, null) { }~0A @3}~0A}~0A%&Ji[Graphics2DText:FontRenderer.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7Renders a specific font face, style, size, and color.~0A @3*/~0A @3class FontRenderer {~0A@1 @7field font; // a FontResource instance~0A@1 @7field size = 12;~0A @7field style = FontStyle.NORMAL;~0A @7field red = 255;~0A @7field green = 255;~0A @7field blue = 255;~0A@1 @7// These are cleared every time an attribute is updated.~0A @7// These are repopulated when you call render(text).~0A @7field _native = null; // NativeFont~0A @7field _settingsKey = null; // A string key that uniquely identifies text appearance encompasing all attributes. Used as part of the texture cache~0A @7field _glRenderer = null;~0A@1 @7static field _textureCache = {}; // A cache of previously rendered images so that drawing the same text in multiple frames is done quickly~0A@1 @7// TODO: make the texture cache a layered dictionary where the first key is the the settings key and the secondary key is the text itself~0A @7// That will reduce memory churn of concatenating these two strings every time it~0ds rendered.~0A@1 @7constructor(font) {~0A @Bif (!(font is Graphics2DText.FontResource)) throw new InvalidArgumentException(~0YExpected a FontResource instance~0Y);~0A @Bthis.font = font;~0A @7}~0A@1 @7function setColor(red, green, blue) {~0A @B// TODO: verify args~0A @Bthis.red = red;~0A @Bthis.green = green;~0A @Bthis.blue = blue;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function setSize(size) {~0A @B// TODO: verify args~0A @Bthis.size = size;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function setStyle(style) {~0A @B// TODO: verify args~0A @Bthis.style = style;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function render(text) {~0A @Bif (this._native == null) {~0A @Fthis._native = NativeFont.get(~0A @Jthis.font._sourceType, this.font._source,~0A @Jthis.size, this.style, this.red, this.green, this.blue);~0A@1 @F// don~0dt recycle the native font key for this since the native key will~0A @F// drop attributes that aren~0dt part of an allocated font face instance.~0A @F// We need all attributes in this key.~0A @Fthis._settingsKey =~0A @J[~0A @Nthis.font._sourceType, this.font._source,~0A @Nthis.size,~0A @Nthis.style,~0A @Nthis.red, this.green, this.blue~0A @J].join(~0d:~0d);~0A@1 @Fif ($$lib_graphics2dtext_isGlRenderer()) {~0A @Jthis._glRenderer = GLRenderer.get(this.font._sourceType, this.font._source, this.size, this.style, this._native);~0A @F}~0A @B}~0A@1 @BtextureKey = this._settingsKey + ~0d~1Un~0d + text;~0A @Btexture = FontRenderer._textureCache.get(textureKey);~0A @Bif (texture == null) {~0A @Ftexture = new TextSurface(this, text + ~0d@1);~0A @FFontRenderer._textureCache[textureKey] = texture;~0A @B}~0A@1 @Breturn texture;~0A @7}~0A @3}~0A}~0A%&Jj[Graphics2DText:FontResource.cry]~0Anamespace Graphics2DText {~0A@1 @3class FontResource {~0A @7field _sourceType;~0A @7field _source;~0A@1 @7~12private~0A @7constructor(sourceType, source) {~0A @Bthis._sourceType = sourceType;~0A @Bthis._source = source;~0A @7}~0A@1 @7function getRenderer() {~0A @Breturn new FontRenderer(this);~0A @7}~0A@1 @7static field _cache = {};~0A@1 @7static function _getKey(sourceType, source) {~0A @Breturn sourceType + source;~0A @7}~0A@1 @7static function _get(sourceType, source) {~0A @Bkey = sourceType + source;~0A @Bfont = FontResource._cache.get(key);~0A @Bif (font == null) {~0A @Ffont = new FontResource(sourceType, source);~0A @FFontResource._cache[key] = font;~0A @B}~0A @Breturn font;~0A @7}~0A@1 @7static function fromResource(path) {~0A @Bif (!$$lib_graphics2dtext_isResourceAvailable(path)) {~0A @Fthrow new FontNotFoundException(~0YFont resource not found: ~0d~0Y + path + ~0Y~0d~0Y);~0A @B}~0A @Breturn FontResource._get(FontSourceType.RESOURCE, path);~0A @7}~0A@1 @7static function fromDisk(path) {~0A @Bthrow new NotImplementedException();~0A @7}~0A@1 @7static function fromSystem(name) {~0A @Bif (!FontResource.isSystemFontPresent(name)) {~0A @Fthrow new FontNotFoundException(~0YFont not installed: ~0d~0Y + name + ~0Y~0d~0Y);~0A @B}~0A @Breturn FontResource._get(FontSourceType.SYSTEM, name);~0A @7}~0A@1 @7static function isSystemFontPresent(name) {~0A @Breturn $$lib_graphics2dtext_isSystemFontPresent(name);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultSerifFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.SERIF);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultSansSerifFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.SANS_SERIF);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultMonospaceFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.MONOSPACE);~0A @7}~0A @3}~0A}~0A%&Jk[Graphics2DText:GLRenderer.cry]~0Aimport Math;~0A@1namespace Graphics2DText {~0A@1 @3/*~0A @7A GL renderer juggles around some textures~0A@1 @7A GL instance always stays alive.~0A @7They are only created on a unique (font, style, size) basis~0A @7They will unload their textures if unused and will essentially take up no space, so having a~0A @7lifetime tied to the life of the app is okay.~0A@1 @7nativeData[0] -> some native object that takes in a character code and generates a bitmap.~0A @3*/~0A @3class GLRenderer {~0A @7/*~0A @BnativeData[0] -> some sort of native font resource the system can use to generate~0A @Fbitmaps that can be loaded as textures.~0A @FIf the nativeRenderer happens to only include face, style, and size, then this may possibly be the same instance.~0A @BnativeData[1] -> a nullable int-to-int dictionary that maps char code ID~0ds to texture ID~0ds~0A @Fset to null to invalidate and reconstruct~0A @7*/~0A@1 @7field sheets = [];~0A @7field sheetByCharId = {};~0A @7field tileByCharId = {};~0A @7field spaceWidth = null;~0A @7field nativeFont = null;~0A@1 @7static field glRenderers = {};~0A @7static field unknownChars = [];~0A@1 @7static function get(sourceType, sourceId, size, style, nativeFont) {~0A @Bkey = [sourceType, sourceId, size, style].join(~0d:~0d);~0A @Brenderer = GLRenderer.glRenderers.get(key);~0A @Bif (renderer == null) {~0A @Frenderer = new GLRenderer(nativeFont, size);~0A @FGLRenderer.glRenderers[key] = renderer;~0A @B}~0A @Breturn renderer;~0A @7}~0A@1 @7~12private~0A @7constructor(nativeFont, size) {~0A @Bthis.nativeFont = nativeFont;~0A @Bthis.spaceWidth = size * 3 / 10;~0A @B$@2(~0dallocNativeData~0d, this, 1);~0A @B$@2(~0dsetNativeData~0d, this, 0, null);~0A @7}~0A@1 @7function renderText(text, sizeOut, textSurfaceWithNativeData, tileList) {~0A @Bwidth = 0;~0A @Bheight = 0;~0A @BnewTiles = null;~0A @BcharIds = [];~0A @Bxs = [];~0A @Bys = [];~0A @BlastTile = null;~0A @Bfor (c : text) {~0A @FcharId = Core.ord(c);~0A @Fif (c == ~0d ~0d) {~0A @Jwidth += this.spaceWidth;~0A @F} else if (c == ~0d~1Ur~0d || c == ~0d~1Un~0d) {~0A @Jthrow new Core.NotImplementedException();~0A @F} else {~0A @JcharIds.add(charId);~0A @Jtile = this.tileByCharId.get(charId);~0A @Jif (tile == null) {~0A @Nretry = true;~0A @Ntile = new GLTile(this, charId);~0A @Nif (newTiles == null) newTiles = [];~0A @NnewTiles.add(tile);~0A @J}~0A @JlastTile = tile;~0A @Jxs.add(width - tile.leftMargin);~0A @Jys.add(0);~0A @JtileList.add(tile);~0A @Jheight = Math.max(height, tile.height);~0A @Jwidth += tile.effectiveWidth;~0A @F}~0A @B}~0A @Bwidth += (lastTile.width - lastTile.effectiveWidth - tile.leftMargin) * 6 / 10;~0A@1 @Bif (newTiles != null) {~0A @F// Just dump all of them into new sheets.~0A @F// The consolidator will get triggered at the end of the frame and make the packing better.~0A @Fsheets = GLTextureSheet.makeSheets(newTiles);~0A @Ffor (sheet : sheets) {~0A @Jthis.sheets.add(sheet);~0A @Jfor (tile : sheet.tiles) {~0A @Nthis.sheetByCharId[tile.charId] = sheet;~0A @Nthis.tileByCharId[tile.charId] = tile;~0A @J}~0A @F}~0A @B}~0A@1 @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 1, xs);~0A @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 2, ys);~0A @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 3, charIds);~0A @B$@2(~0dsetNativeData~0d, textSurfaceWithNativeData, 4, charIds.length);~0A@1 @BsizeOut[0] = width;~0A @BsizeOut[1] = height;~0A @7}~0A@1 @7/*~0A @BIf there are two or more textures that are less than or equal to 512 x 512, then trigger a reconsolidation~0A @BThis is called once per frame.~0A@1 @BTODO: add this to a Game frame end callback~0A @7*/~0A @7function consolidate() {~0A @Bthrow new NotImplementedException();~0A @7}~0A @3}~0A}~0A%&Jl[Graphics2DText:GLTextureSheet.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7nativeData[0] -> bitmap instance (lifetime is very short, discarded once loaded)~0A @3*/~0A @3class GLTextureSheet {~0A @7field tiles = [];~0A @7field tilesByCharId = {};~0A@1 @7constructor(rows) {~0A @By = 0;~0A @Bheight = rows[0][0].height;~0A @Bxs = [];~0A @Bys = [];~0A @Btiles = [];~0A @Bfor (row : rows) {~0A @Fthis.tiles.concat(row);~0A @Fx = 0;~0A @Ffor (tile : row) {~0A @Jthis.tilesByCharId[tile.charId] = tile;~0A @Jtile.sheetX = x;~0A @Jtile.sheetY = y;~0A @Jtile.sheet = this;~0A @Jtile.currentTextureId = null;~0A @Jxs.add(x);~0A @Jys.add(y);~0A @Jtiles.add(tile);~0A @Jx += tile.width;~0A @F}~0A @Fy += height;~0A @B}~0A @B// This will apply the properties to the individual tile~0ds metadata~0A @B// It will not load the texture yet.~0A @B// TODO: remove ~0YLoadTexture~0Y from the name.~0A @B$$lib_graphics2dtext_glGenerateAndLoadTexture(xs, ys, tiles, y);~0A @7}~0A@1 @7static function makeSheets(tiles) {~0A @B// A simple O(n) greedy packing algorithm~0A @B// Since sheets are on a per-size basis, all tiles will have the same height~0A @B// that makes things a little simpler.~0A@1 @Bsheets = [];~0A @BtilesLength = tiles.length;~0A @BtileIndex = 0;~0A @Bif (tiles.length > 0) {~0A @Fheight = tiles[0].height;~0A @FrowCount = 1024 / height;~0A @Ftiles.sort(GLTextureSheet.sortByWidthKeyFunction);~0A @Frows = [];~0A @Fwhile (rows.length < rowCount && tileIndex < tilesLength) {~0A @Jrow = [];~0A @Jrows.add(row);~0A @Jwidth = 0;~0A @J// Fill the front of the row with as many large tiles as possible~0A @Jwhile (tileIndex < tilesLength && width + tiles[tileIndex].width < 1024) {~0A @Ntile = tiles[tileIndex++];~0A @Nrow.add(tile);~0A @Nwidth += tile.width;~0A @J}~0A @J// once you run out of space, fill the row with as many small tiles as possible~0A @Jwhile (tileIndex < tilesLength && width + tiles[tilesLength - 1].width < 1024) {~0A @Ntile = tiles[--tilesLength];~0A @Nrow.add(tile);~0A @Nwidth += tile.width;~0A @J}~0A @F}~0A @Fsheets.add(new GLTextureSheet(rows));~0A @B}~0A @Breturn sheets;~0A @7}~0A@1 @7static function sortByWidthKeyFunction(tile) {~0A @Breturn tile.width;~0A @7}~0A @3}~0A}~0A%&Jm[Graphics2DText:GLTile.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7The following are attributes of the image and never change once allocated:~0A @7nativeData[0] -> A bitmap instance of the tile~0A @7nativeData[1] -> pixel width (int)~0A @7nativeData[2] -> pixel height (int)~0A @7nativeData[3] -> left margin (int)~0A @7nativeData[4] -> effective width (int) (distance to right margin from left margin)~0A@1 @7The following are values added each time this is allocated to a texture~0A @7nativeData[5] -> GL texture ID# or -1 if not initialized~0A @7nativeData[6] -> bitmap instance that needs to be loaded into the [5] GL Texture ID, or null if already loaded.~0A @7nativeData[7] -> texture region left~0A @7nativeData[8] -> texture region top~0A @7nativeData[9] -> texture region right~0A @7nativeData[10] -> texture region bottom~0A @7.@2~0A @7nativeData[11] -> full texture width (always 1024)~0A @7nativeData[12] -> full texture height~0A @3*/~0A @3class GLTile {~0A @7field charId;~0A @7field width;~0A @7field height;~0A @7field currentTextureId;~0A @7field sheet;~0A @7field sheetX;~0A @7field sheetY;~0A @7field lastUsed;~0A @7field renderer;~0A @7field leftMargin;~0A @7field effectiveWidth;~0A@1 @7constructor(renderer, charId) {~0A @Bthis.charId = charId;~0A @Bthis.renderer = renderer;~0A @B$@2(~0dallocNativeData~0d, this, 13);~0A @Bsize = [0, 0, 0, 0];~0A @Bif (!$$lib_graphics2dtext_glRenderCharTile(renderer.nativeFont, this, charId, size)) {~0A @Fthrow new InvalidArgumentException(~0YCould not render character (~0Y + charId + ~0Y)~0Y);~0A @B}~0A @Bthis.width = size[0];~0A @Bthis.height = size[1];~0A @Bthis.leftMargin = size[2];~0A @Bthis.effectiveWidth = size[3];~0A @7}~0A @3}~0A}~0A%&Jn[Graphics2DText:NativeFont.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7This class is not exposed to the user.~0A@1 @7Wraps a native font font instance.~0A @7Almost all platforms have some sort of notion of a font object.~0A @7What properties of a font constitutes a unique font object varies, though.~0A @7This class encompasses whatever that notion is.~0A@1 @7nativeData[0] -> native font instance. This will be:~0A @B- JS -> a simple struct with the attributes in it~0A @B- PyGame -> a pygame.font.Font instance~0A @B- Java -> a java.awt.Font instance~0A @B- C# -> a font object~0A@1 @3*/~0A @3class NativeFont {~0A@1 @7field key;~0A@1 @7static field _nativeFontInstances = {};~0A@1 @7~12private~0A @7constructor(type, id, size, style, r, g, b) {~0A @B// Native code must generate the key because some of these attributes will be dropped.~0A @B// For example, PyGame has a single font instance no matter what color, but a font instance changes~0A @B// depending on the size and style. Therefore r/g/b will be dropped, but the others must be part of~0A @B// the unique key.~0A @Bthis.key = NativeFont.getUniqueKey(type, id, size, r, g, b, style);~0A@1 @B$@2(~0dallocNativeData~0d, this, 1);~0A @Boutput = [null];~0A @B// assigns native font instance to native data~0A @Bstatus = $$lib_graphics2dtext_createNativeFont(this, type, id, size, r, g, b, style);~0A @Bif ($@2(~0disJavaScript~0d) && type == 1) {~0A @Fi = 0;~0A @Fwhile (!$$lib_graphics2dtext_isDynamicFontLoaded()) {~0A @Jif (++i > 10@3) throw new FontNotFoundException(~0YError loading font resource.~0Y);~0A @JCore.sleep(.001);~0A @F}~0A @B}~0A @Bswitch (status) {~0A @Fcase 0: break; // all is fine~0A @Fcase 1: throw new FontNotFoundException(~0YFont not installed: ~0d~0Y + id + ~0Y~0d~0Y);~0A @Fcase 2: throw new FontNotFoundException(~0YFont resource not found: ~0d~0Y + id + ~0Y~0d~0Y);~0A @Fdefault: throw new Exception(); // this won~0dt happen~0A @B}~0A @7}~0A@1 @7static function get(type, id, size, style, r, g, b) {~0A @Bkey = NativeFont.getUniqueKey(type, id, size, r, g, b, style);~0A @BnativeFont = NativeFont._nativeFontInstances.get(key);~0A @Bif (nativeFont == null) {~0A @FnativeFont = new NativeFont(type, id, size, style, r, g, b);~0A @FNativeFont._nativeFontInstances[key] = nativeFont;~0A @B}~0A @Breturn nativeFont;~0A @7}~0A@1 @7static function getUniqueKey(type, id, size, r, g, b, style) {~0A @Boutput = [];~0A @B$$lib_graphics2dtext_getNativeFontUniqueKey(~0A @F// convert everything to strings~0A @Ftype + ~0d@1, id + ~0d@1, size + ~0d@1, r + ~0d@1, g + ~0d@1, b + ~0d@1, style + ~0d@1,~0A @Foutput);~0A @Breturn output.join(~0d|~0d);~0A @7}~0A @3}~0A}~0A%&Jo[Graphics2DText:TextSurface.cry]~0Aimport Graphics2D;~0A@1namespace Graphics2DText {~0A@1 @3/*~0A @7Presents itself as something similar to a GraphicsTexture that can be drawn to the screen.~0A @7The actual implementation may vary depending on the platform.~0A @7It may either be a cached image or a set of drawing instructions.~0A @3*/~0A @3class TextSurface {~0A @7field _glRenderer = null;~0A @7field _isGl = false;~0A @7field width;~0A @7field height;~0A @7field text;~0A @7field tiles = null;~0A@1 @7constructor(fontRenderer, text) {~0A @Bthis.text = text;~0A@1 @B/*~0A @Ffor bitmap based platforms:~0A @FnativeData[0] -> a native image object such as a pygame.Surface or JS canvas~0A@1 @Ffor GL based platforms:~0A @FnativeData[0] -> unused~0A @FnativeData[1] -> an int[] of x coordinates~0A @FnativeData[2] -> an int[] of y coordinates~0A @FnativeData[3] -> an int[] of character codes~0A @FnativeData[4] -> number of characters to render (array.length of the above 3 arrays)~0A @FnativeData[5] -> red~0A @FnativeData[6] -> green~0A @FnativeData[7] -> blue~0A @B*/~0A@1 @BsizeOut = [0, 0];~0A @Bif ($$lib_graphics2dtext_isGlRenderer()) {~0A @Fthis.tiles = [];~0A @F$@2(~0dallocNativeData~0d, this, 8);~0A @Fthis._glRenderer = fontRenderer._glRenderer;~0A @Fthis._glRenderer.renderText(text, sizeOut, this, this.tiles);~0A @F$@2(~0dsetNativeData~0d, this, 5, fontRenderer.red);~0A @F$@2(~0dsetNativeData~0d, this, 6, fontRenderer.green);~0A @F$@2(~0dsetNativeData~0d, this, 7, fontRenderer.blue);~0A @Fthis._isGl = true;~0A @B} else {~0A @F$@2(~0dallocNativeData~0d, this, 1);~0A @F$$lib_graphics2dtext_renderText(~0A @JsizeOut,~0A @Jthis,~0A @JfontRenderer._native,~0A @JfontRenderer.font._sourceType,~0A @JfontRenderer.font._source,~0A @JfontRenderer.size,~0A @JfontRenderer.style,~0A @JfontRenderer.red,~0A @JfontRenderer.green,~0A @JfontRenderer.blue,~0A @Jtext);~0A @B}~0A @Bthis.width = sizeOut[0];~0A @Bthis.height = sizeOut[1];~0A @7}~0A@1 @7function _refreshGlRenderer() {~0A @Bthrow new Core.NotImplementedException();~0A @7}~0A@1 @7function draw(x, y) {~0A @Breturn this.drawWithAlpha(x, y, 255);~0A @7}~0A@1 @7function drawWithAlpha(x, y, alpha) {~0A @Bif (this._isGl){~0A @Freturn $$lib_graphics2dtext_glRenderTextSurface(this, this.tiles, Graphics2D.Draw._queue, x, y, alpha);~0A @B} else {~0A @FGraphics2D.Draw.rectangle(0, 0, 10, 10, 255, 0, 0); // ensure the Draw._queue has capacity~0A @Freturn $$lib_graphics2dtext_simpleBlit(this, Graphics2D.Draw._queue, x, y, alpha);~0A @B}~0A @7}~0A @3}~0A}~0A%&Jpsource/Input.cry~0Aimport Game;~0D~0A~0D~0A// Represents input events since the last call to window.pumpEvents().~0D~0Aclass Input {~0D~0A~09static field keysDown = new Set();~0D~0A~09static field keysPressed = new Set();~0D~0A~09static field keysReleased = new Set();~0D~0A~09static field leftClick = false;~0D~0A~09static field rightClick = false;~0D~0A~09static field mousePos = Vec2.zero();~0D~0A~0D~0A~09// Processes relevant input events and removes them from the event list.~0D~0A~09static function update(eventList) {~0D~0A~09@1Input.keysPressed = new Set();~0D~0A~09@1Input.keysReleased = new Set();~0D~0A~09@1Input.leftClick = false;~0D~0A~09@1Input.rightClick = false;~0D~0A~0D~0A~09@1for (i = 0; i < eventList.length;) {~0D~0A~09@2event = eventList[i];~0D~0A~09@2if (event.type == Game.EventType.KEY_DOWN) {~0D~0A~09@3Input.keysDown.add(event.key);~0D~0A~09@3Input.keysPressed.add(event.key);~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.KEY_UP) {~0D~0A~09@3Input.keysDown.remove(event.key);~0D~0A~09@3Input.keysReleased.add(event.key);~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_LEFT_DOWN) {~0D~0A~09@3Input.leftClick = true;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_RIGHT_DOWN) {~0D~0A~09@3Input.rightClick = true;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_MOVE) {~0D~0A~09@3Input.mousePos.x = event.x;~0D~0A~09@3Input.mousePos.y = event.y;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else {~0D~0A~09@3++i;~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09static function pressed(key) {~0D~0A~09@1return Input.keysPressed.contains(key);~0D~0A~09}~0D~0A~09static function released(key) {~0D~0A~09@1return Input.keysReleased.contains(key);~0D~0A~09}~0D~0A~09static function down(key) {~0D~0A~09@1return Input.keysDown.contains(key);~0D~0A~09}~0D~0A~09static function up(key) {~0D~0A~09@1return !Input.keysDown.contains(key);~0D~0A~09}~0D~0A}~0D~0A%&Jqsource/main.cry~0Aimport Game;~0Aimport Graphics2D;~0Aimport Math;~0Aimport Random;~0A@1const FPS = 60;~0Aconst X_RES = 800;~0Aconst Y_RES = 600;~0A@1const DIE_DOG_SHOOT_CHANCE = 0.02;~0A@1enum GameState { MENU, CAMPAIGN, DANCE_DOG }~0A@1function main() {~0A~09window = new Game.GameWindow(~0YLUKEWARM~0Y, FPS, X_RES, Y_RES);~0A@1~09gameState = GameState.MENU;~0A~09titleImage = Font.title.render(~0YL U K E W A R M~0Y);~0A~09campaignImage = Font.black.render(~0YCampaign~0Y);~0A~09danceDogImage = Font.black.render(~0YDance, Dog~0Y);~0A~09instructionsImage = Font.black.render(~0YWASD to move, click to shoot, F2 to restart~0Y);~0A~09menuChoice = 0;~0A@1~09programRunning = true;~0A~09while (programRunning) {~0A~09@1eventList = window.pumpEvents();~0A~09@1Input.update(eventList);~0A~09@1for (i = 0; i < eventList.length; i++) {~0A~09@2event = eventList[i];~0A~09@2if (event.type == Game.EventType.QUIT) {~0A~09@3programRunning = false;~0A~09@2}~0A~09@1}~0A@1~09@1if (Input.pressed(Game.KeyboardKey.F2)) {~0A~09@2// Restart game.~0A~09@2gameState = GameState.MENU;~0A~09@1}~0A@1~09@1switch (gameState) {~0A~09@2case GameState.MENU:~0A~09@3if (Input.pressed(Game.KeyboardKey.UP) || Input.pressed(Game.KeyboardKey.W)) {~0A~09@4--menuChoice;~0A~09@3}~0A~09@3if (Input.pressed(Game.KeyboardKey.DOWN) || Input.pressed(Game.KeyboardKey.S)) {~0A~09@4++menuChoice;~0A~09@3}~0A~09@3menuChoice ~0b= 2;~0A@1~09@3if (Input.pressed(Game.KeyboardKey.ENTER) || Input.pressed(Game.KeyboardKey.SPACE)) {~0A~09@4switch (menuChoice) {~0A~09@5case 0:~0A~09@6// Campaign~0A~09@6gameState = GameState.CAMPAIGN;~0A~09@6env = new Environment();~0A~09@6env.characters =~0A~09@7[ new Character(new Player(env), new Vec2(X_RES / 2, Y_RES / 2))~0A~09@7, new Character(new AI(env), new Vec2(X_RES / 4, Y_RES / 4))~0A~09@7, new Character(new AI(env), new Vec2(3 * X_RES / 4, Y_RES / 4))~0A~09@7, new Character(new AI(env), new Vec2(3 * X_RES / 4, 3 * Y_RES / 4))~0A~09@7, new Character(new AI(env), new Vec2(X_RES / 4, 3 * Y_RES / 4))~0A~09@7];~0A~09@6break;~0A~09@5case 1:~0A~09@6// Die, Dog~0A~09@6gameState = GameState.DANCE_DOG;~0A~09@6env = new Environment();~0A~09@6env.characters = [new Character(new Player(env), new Vec2(X_RES / 2, Y_RES / 2))];~0A~09@6gameOver = false;~0A~09@6break;~0A~09@4}~0A~09@3}~0A@1~09@3Graphics2D.Draw.fill(255, 255, 255);~0A~09@3// Title~0A~09@3new Drawing()~0A~09@4.setImage(titleImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 4)~0A~09@4.alignCenter()~0A~09@4.alignMiddle()~0A~09@4.draw();~0A~09@3// Campaign~0A~09@3campaignDrawing = new Drawing()~0A~09@4.setImage(campaignImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 2)~0A~09@4.alignCenter()~0A~09@4.alignBottom();~0A~09@3// Dance, Dog~0A~09@3danceDogDrawing = new Drawing()~0A~09@4.setImage(danceDogImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 2)~0A~09@4.alignCenter()~0A~09@4.alignTop();~0A~09@3// Highlight current menu choice.~0A~09@3switch (menuChoice) {~0A~09@4case 0:~0A~09@5campaignDrawing.setBgColor(Color.red(128));~0A~09@5break;~0A~09@4case 1:~0A~09@5danceDogDrawing.setBgColor(Color.red(128));~0A~09@5break;~0A~09@3}~0A~09@3// Draw menu options.~0A~09@3campaignDrawing.draw();~0A~09@3danceDogDrawing.draw();~0A@1~09@3// Draw instructions.~0A~09@3new Drawing()~0A~09@4.setImage(instructionsImage)~0A~09@4.setPos(X_RES / 2, 3 * Y_RES / 4)~0A~09@4.alignCenter()~0A~09@4.alignMiddle()~0A~09@4.draw();~0A@1~09@3break;~0A~09@2case GameState.CAMPAIGN:~0A~09@3// Draw environment.~0A~09@3env.draw();~0A@1~09@3// Update environment.~0A~09@3env.update();~0A@1~09@3// Draw timer.~0A~09@3timeImage = Font.white.render(~0YTime: ~0Y + Math.floor(env.totalTime));~0A~09@3new Drawing()~0A~09@4.setImage(timeImage)~0A~09@4.setPos(0, 0)~0A~09@4.setBgColor(Color.black(128))~0A~09@4.draw();~0A@1~09@3// Draw health if the player is alive.~0A~09@3if (env.characters.length > 0) {~0A~09@4healthImage = Font.red.render(~0YHealth: ~0Y + env.characters[0].health);~0A~09@4new Drawing()~0A~09@5.setImage(healthImage)~0A~09@5.setPos(0, timeImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3}~0A~09@3break;~0A~09@2case GameState.DANCE_DOG:~0A~09@3// Choose target: the player or a random point if the player is dead.~0A~09@3target = env.characters.length > 0~0A~09@4? env.characters[0].pos~0A~09@4: new Vec2(Random.randomInt(0, X_RES), Random.randomInt(0, Y_RES))~0A~09@4;~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(Vec2.zero(), target);~0A~09@3}~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(new Vec2(X_RES, 0), target);~0A~09@3}~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(new Vec2(0, Y_RES), target);~0A~09@3}~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(new Vec2(X_RES, Y_RES), target);~0A~09@3}~0A@1~09@3// Update environment.~0A~09@3env.update();~0A@1~09@3// Check for game over.~0A~09@3if (!gameOver && env.characters.length == 0) {~0A~09@4scoreImage = Font.lime.render(~0YScore: ~0Y + Math.floor(env.totalTime));~0A~09@4gameOver = true;~0A~09@3}~0A@1~09@3// Draw environment.~0A~09@3env.draw();~0A@1~09@3// Draw timer.~0A~09@3timeImage = Font.white.render(~0YTime: ~0Y + Math.floor(env.totalTime));~0A~09@3new Drawing()~0A~09@4.setImage(timeImage)~0A~09@4.setPos(0, 0)~0A~09@4.setBgColor(Color.black(128))~0A~09@4.draw();~0A@1~09@3// Draw health if the player is alive.~0A~09@3if (gameOver) {~0A~09@4// Draw score.~0A~09@4new Drawing()~0A~09@5.setImage(scoreImage)~0A~09@5.setPos(0, timeImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3} else {~0A~09@4// Draw health.~0A~09@4healthImage = Font.red.render(~0YHealth: ~0Y + env.characters[0].health);~0A~09@4new Drawing()~0A~09@5.setImage(healthImage)~0A~09@5.setPos(0, timeImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3}~0A~09@3break;~0A~09@1}~0A@1~09@1window.clockTick();~0A~09}~0A}~0A%&Jrsource/Pistol.cry~0A// A small gun with five rounds.~0D~0Aclass Pistol : Weapon {~0D~0A~09constructor() : base() {}~0D~0A}~0D~0A%&Jssource/Player.cry~0Aimport Game;~0D~0A~0D~0A// Interface for an agent, which controls a character.~0D~0Aclass Player : Agent {~0D~0A~09constructor(env) : base(env) {}~0D~0A~0D~0A~09function control(character) {~0D~0A~09@1if (Input.leftClick && !Input.mousePos.equals(character.pos)) {~0D~0A~09@2bulletHeading = Input.mousePos.minus(character.pos).normalize();~0D~0A~09@2bulletPos = character.pos.plus(bulletHeading.times(BULLET_SPAWN_DISTANCE));~0D~0A~09@2bulletVel = bulletHeading.times(BULLET_SPEED);~0D~0A~09@2~0D~0A~09@2this.env.bullets.add(new Bullet(character, bulletPos, bulletVel));~0D~0A~09@1}~0D~0A~09@1character.vel = Vec2.zero();~0D~0A~09@1if (Input.down(Game.KeyboardKey.A)) {~0D~0A~09@2--character.vel.x;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.D)) {~0D~0A~09@2++character.vel.x;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.W)) {~0D~0A~09@2--character.vel.y;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.S)) {~0D~0A~09@2++character.vel.y;~0D~0A~09@1}~0D~0A~09@1character.vel.normalize();~0D~0A~09@1character.vel = character.vel.times(CHARACTER_SPEED);~0D~0A~09}~0D~0A~0D~0A~09function controlsTime() { return true; }~0D~0A}~0D~0A%&Jtsource/Set.cry~0A// Implementation of Set using a built-in dictionary.~0D~0Aclass Set {~0D~0A~09field keys = {};~0D~0A~0D~0A~09constructor(keys = {}) {~0D~0A~09@1this.keys = keys;~0D~0A~09}~0D~0A~0D~0A~09// Removes all elements from the set.~0D~0A~09function clear() {~0D~0A~09@1this.keys.clear();~0D~0A~09}~0D~0A~09// Returns a one-level-deep copy of the set.~0D~0A~09function clone() {~0D~0A~09@1return new Set(this.keys.clone());~0D~0A~09}~0D~0A~09// Returns whether this set contains the given key.~0D~0A~09function contains(key) {~0D~0A~09@1return this.keys.contains(key);~0D~0A~09}~0D~0A~09// Adds the given key to the set.~0D~0A~09function add(key) {~0D~0A~09@1this.keys[key] = null; // Value unused.~0D~0A~09}~0D~0A~09// Removes the given key from the set, if present.~0D~0A~09function remove(key) {~0D~0A~09@1this.keys.remove(key);~0D~0A~09}~0D~0A}~0D~0A%&Jusource/Util.cry~0Aimport Random;~0D~0A~0D~0A// Utility functions that don~0dt fit anywhere else.~0D~0Aclass Util {~0D~0A~09// Fisher-Yates shuffle a list.~0D~0A~09static function shuffle(list) {~0D~0A~09@1for (i = 0; i < list.length - 1; ++i) {~0D~0A~09@2j = Random.randomInt(i, list.length);~0D~0A~09@2t = list[i];~0D~0A~09@2list[i] = list[j];~0D~0A~09@2list[j] = t;~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Solves ax^2 + bx + c = 0 and returns the list of real roots. The a coefficient must not be zero.~0D~0A~09static function getQuadraticRoots(a, b, c) {~0D~0A~09@1determinant = b ** 2 + 4 * a * c;~0D~0A~09@1if (determinant < 0.0) {~0D~0A~09@2// No roots.~0D~0A~09@2return [];~0D~0A~09@1} else if (determinant > 0.0) {~0D~0A~09@2// Two roots.~0D~0A~09@2return~0D~0A~09@3[ (-b - determinant ** 0.5) / (2.0 * a)~0D~0A~09@3, (-b + determinant ** 0.5) / (2.0 * a)~0D~0A~09@3];~0D~0A~09@1} else {~0D~0A~09@2// One root.~0D~0A~09@2return [-b / (2.0 * a)];~0D~0A~09@1}~0D~0A~09}~0D~0A}~0D~0A%&Jvsource/Vec2.cry~0A// A simple 2D vector type.~0D~0Aclass Vec2 {~0D~0A~09field x;~0D~0A~09field y;~0D~0A~0D~0A~09static function zero() { return new Vec2(0.0, 0.0); }~0D~0A~0D~0A~09constructor(x, y) {~0D~0A~09@1this.x = x;~0D~0A~09@1this.y = y;~0D~0A~09}~0D~0A~0D~0A~09function clone() {~0D~0A~09@1return new Vec2(this.x, this.y);~0D~0A~09}~0D~0A~0D~0A~09function isZero() {~0D~0A~09@1return this.x == 0.0 && this.y == 0.0;~0D~0A~09}~0D~0A~0D~0A~09function plus(that) {~0D~0A~09@1return new Vec2(this.x + that.x, this.y + that.y);~0D~0A~09}~0D~0A~0D~0A~09function minus(that) {~0D~0A~09@1return new Vec2(this.x - that.x, this.y - that.y);~0D~0A~09}~0D~0A~0D~0A~09function times(k) {~0D~0A~09@1return new Vec2(this.x * k, this.y * k);~0D~0A~09}~0D~0A~0D~0A~09function dividedBy(k) {~0D~0A~09@1return new Vec2(this.x / k, this.y / k);~0D~0A~09}~0D~0A~0D~0A~09function lengthSquared() {~0D~0A~09@1return this.x ** 2 + this.y ** 2;~0D~0A~09}~0D~0A~0D~0A~09function length() {~0D~0A~09@1return this.lengthSquared() ** 0.5;~0D~0A~09}~0D~0A~0D~0A~09function normalize()~0D~0A~09{~0D~0A~09@1if (!this.isZero()) {~0D~0A~09@2l = this.length();~0D~0A~09@2this.x /= l;~0D~0A~09@2this.y /= l;~0D~0A~09@1}~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function normalized()~0D~0A~09{~0D~0A~09@1result = this.clone();~0D~0A~09@1result.normalize();~0D~0A~09@1return result;~0D~0A~09}~0D~0A~0D~0A~09function equals(that) {~0D~0A~09@1return this.x == that.x && this.y == that.y;~0D~0A~09}~0D~0A}~0D~0A%&Jwsource/Weapon.cry~0A// A weapon a character can use to attack.~0D~0Aclass Weapon {~0D~0A}~0D~0A%5A001X5A00157A001@272@2uRA002336495C6F7I8L9OARBUCXDa5A7090JAW0XHYeZ@11a@1Ob@1lG@29H@2K1@2V7A0011287A00291K*B00A%*B0US%*B0uC%*B0@1ZT%*B0@2KI%*B0@3AJ%&f1Core,v1%&f2Math,v1%&f3Random,v1%&f4Graphics2D,v1%&f5Game,v1%&f6ImageResources,v1%&f7Graphics2DText,v1%1R@1Zx#1nU3#1ne^3#1nn3#1o9^3#1pS3#1pe^3#2Hi3#2Hp^3#2Hu3#2I1^3#2LM3#2LU^3#2gD3#2hT^3#2ht3#2i23#2iH^3#2iL^3#2lJ3#2lT3#2m3^3#2mB^3#2rh3#2rs^3#2s73#2sK^3#2sV3#2se^3#2sy3#2tI^3#2zd3#34O^3#34T3#34a^3#3583#35J^3#37I3#37g3#384^3#38N^3#38w3#396^3#39M3#39l^3#39u3#3AJ^3#3AW3#3Aq^3!TLukewarm%~AVkd0000J@630main%5i32106C64@1w1M2302h42313Ot02h56C510102323Ot22h66C510102333Ot22h76C510102343Ot22h86C510102352h42362h92373j7c2b@5b3j026C500112383j836C21e0u2h42393j943j832M727B2bG3j833j941W23A3jA52M62hA2Q02b22hB2372j92hA2702392Z^L2hC6C21f1u2b22h42313j183r2@4z2hE6C21f1u2e22hD6C21f1u2b42j62hA2712362hG6C21f1u2e22hF6C21f1u2b42j62hA2702362j62hH2742362hJ6C21f1u2e22hI6C21f1u2bo3j693r0m2hA2316C60c1k23B3jBA3jBA6C61o1w3iLK6C62@1A1z6C62G1h3jBA6C6171J3iNM6C62@1A1z6C62G1h3jBA6C6171J3iN36C62@1A1z6C62G1h3jBA6C6171J3iO36C62@1A1z6C62G1h3jBA6C6171J3iOM6C62@1A1z6C62G1h2L535B0391F2hH2316C60c1k23B3jBA3jBA6C61o1w3iLK6C62@1A1z6C62G1h2L135B02hB23C39104iPPP6C23@2A0T6C60X1j3j2H6C5101G3iNK6C5201F6C5001E6C5001D6C5000C6C60X1j3j3J6C5101G3iLK6C5201F6C5001E6C5001I23D6C60X1j3j4L6C5101G3iLK6C5201F6C5001E6C5001K23E3j693r1A3jDN2hQ6C21L1i6C5100M39153jEO2hQ6C21L1i6C5100M39103jDN6C5000C3jEO6C5000C6C60X1j3j5P6C5101G3iOK6C5201F6C5001E6C5001D6C5000C391@2s3jBA6C5000C3jBA6C5000Q3Ot12hR3jBA2MR3II12706C5101023F6C60X1j3jFS6C5101G3i446C5201F2hQ6C21H1i6C5101M6C5000C3jBA2MB2M72h427D2bL3Ot32hS3jBA2MB2h41W2MT2706C5101023G6C60X1j3jGU6C5101G2h43jFS2MV6C5201F2hQ6C21H1i6C5101M6C5000C391@253jBA2MB2M72h427D2b63jBA2MB2h41W2MW2Z53i246C12@3u103i346C12@3u106C62@1A1z23H5ET3012hU27B2b43jBA6C20y1z3jHY6C5200X5ET3012hU27B2b53jBA3i426C62@1A1z3jHY6C5200X5ET3012hU27B2b53jBA3i346C62@1A1z3jHY6C5200X5ET3012hU27B2b53jBA3i326C62@1A1z3jHY6C5200X3jBA6C5000Q3jCZ182c53jBA2MB2M72h42Q02bA3Ot42hV3jBA2MR3II12706C5101023I2h923C3jBA6C5000C3Ot12hR3jBA2MR3II12706C5101023F6C60X1j3jFS6C5101G3i446C5201F2hQ6C21H1i6C5101M6C5000C3jCZ2bC6C60X1j3jIa6C5101G2h43jFS2MV6C5201F2hQ6C21H1i6C5101M6C5000C2ZL3Ot32hS3jBA2MB2h41W2MT2706C5101023G6C60X1j3jGU6C5101G2h43jFS2MV6C5201F2hQ6C21H1i6C5101M6C5000C39103j026C5000b2Z%-349%2o0~BV@1Cg12002712assert%2hW2313j0e3j1f2h93I712o1~AV@1Dh1100150fail%2hB3j0f2hB3I712o1~AV@1Ej1100130chr%3j0i3I812o1~AV@1Fk0000020currentTime%3IA12o1~AV@1Gl1100130ord%3j0i3I912o1~AV@1Hm1100130parseFloat%3j0i3I212o1~AV@1In1100130parseInt%3j0i3I112o1~AV@1Jo1100130print%3j0i3I312o1~AV@1Kq11001C0sleep%3j0p6I512432c33j0p2h427E2hX2h93I703j0p3IU12o1~AV@1Lr1100130typeof%3j0i3I412o1~AV@1Ms1100130isString%3j0i5I51152o1~AV@1Nt1100130isNumber%3j0i6I512432o1~AV@1Ow22002B0_LIB_CORE_list_sort_by_key%3j1u2M72hA27D2b53j1u3j0v3j1u6C12@1P103IB02o0~AV@1P@1022004I0_LIB_CORE_list_map%2L02322h42hY3j1u1y2Y63j2y3j0v3j3z6C410106C5100x2Z^71l1l1l3j2y2o1~AV@1Q@1222005U0_LIB_CORE_list_filter%2L02322h42hY3j1u1y2YI3j0v3j3z6C410102343j4@115I5112182b42hB2hZ2hB3I703j4@112b33j2y3j3z6C5100x2Z^J1l1l1l3j2y2o1~AV@1R@130000020getCurrentExecutionToken%3I612o1~AV@1S@140000020getExecutionIterationCounter%3IT12o1~AV@1T@150000020getProjectId%3IV12o1~AV@1U@172200240_LIB_CORE_invoke%3j0v3j1@166C4^10102o1~AV@1W@1822002j0_LIB_CORE_generateException%3j063r3d3j1f6C61@1Z131u3j1f6C61@1a141u3j1f6C61@1b151u3j1f6C61@1c161u3j1f6C61@1d171u3j1f6C61@1e181u3j1f6C61@1f191u3j1f6C61@1g1A1u3j1f6C61@1i1C1u3j1f6C61@1k1E1u3j1f6C61@1l1F1u3j1f6C61@1m1G1u3j1f6C61@1n1H1u3j1f6C61@1Y121u2o0~AV@1o@1A1100130getClassFromInstance%3j0@193Id12o1~BV@1p@1F01004U12getClasses%2hW2303Ib12313j0@1B2hW2Q12bK2L02322h42hY3j1y1y2Y83j3@1D3j0@1B6C5101@1C2b33j2@1E3j3@1D6C5100x2Z^91l1l1l3j2@1E2o13j1y2o1~AV@1q@1H11001A0getMethods%3j0@1G3I413r433j0@1G3Ic12o12ha6C61@1d171u2o0~AV@3e@1J1100130arccos%3j0@1I3ID12o1~AV@3f@1K1100130arcsin%3j0@1I3IE12o1~BV@3g@1N12002612arctan%2hA2313j0@1L3j1@1M3IF12o1~AV@3h@1P1100130cos%3j0@1O3IG12o1~AV@3i@1Q1100130floor%3j0i3II12o1~AV@3j@1R1100130sin%3j0@1O3IO12o1~AV@3k@1S1100130tan%3j0@1O3IP12o1~AV@3l@1T1100140log10%3j0i2hb3IQ12o1~AV@3m@1U1100140ln%3j0i2hc3IQ12o1~AV@3n@1V1100140log2%3j0i2hd3IQ12o1~AV@3o@1W1100130abs%3j0i3IC12o1~AV@3p@1Y2200240max%3j0@1X3j1@113IJ12o1~AV@3q@1Z2200240min%3j0@1X3j1@113IK12o1~AV@3r@1c3300350ensureRange%3j0i3j1@1a3j2@1b3IH12o1~AV@3s@1e1100130sign%3j0@1d3IN12o1~AV@3t@1f0000020randomFloat%5ET3012o1~BV@3u@1i12002K12randomInt%2hW2313j1@1g2hW2Q02b72h43j0@1h5Ee3212m22hf6C11@3v102Z63j0@1h3j1@1g5Ee3212m22hg6C11@3v102o1~AV@3v@1k1100140_randomIntErrorHelper%3j0@1j6C61@1d171u2o0~AV@3w@1l0000020randomBool%5Eh3012o1~BV@3x@1o12002812randomChance%2hA2315ET3013j1@1m2723j0@1n27B2o1~AV1@1p111I140control%2hi6C61@1Y121u2o0~AV2@1q001I040controlsTime%2hi6C61@1Y121u2o0~AV3^1113I130<constructor>%3j0A2602o0~MFI^1@1r3^1000A0W11@1p1012@1q20Agent%~AV4@1p111J4w0control%5ET3012hU27B2b42hj5ET3012722635ET3012hU27B2b82N42hk27D2b22hk2Z12hl2645ET3012hU27B2bO7C3061J53j0@1u2MW6C5101@1t6C5001@1s2313j0@1u2MW3j1@1x2hm6C5101@1w6C5101@1v2323j1@1x2hn6C5101@1w2332N02M@1y3j0@1u3j2@1z3j3@206C63D1g6C5100x3j0@1u2N33IG12N33IO16C62@1A1z2N46C5101@1w35@2102o0~AV5@1q001J020controlsTime%2hB2o1~AV6@24001J1X0getTarget%2h42303j042N02MB2M727B2bJ2N02MB3j041W2M@226C5001@1q2b72N02MB3j041W2MW6C5001@232o12j02hA2702302Z^P3i246C12@3u103i346C12@3u106C62@1A1z2o1~AV7^1113J170<constructor>%3j0A6C7130I2hj5ET3012722632o0~WFJI@257^1003@260W04@270l11@1p4012@1q5015@2460AI%~AV8@2I221KA@2S0collidesWith%3j0@282M@212N16C5101@1t2323j2@2A6C5001@292b22hB2o12N23j0@282M@2B2702hH2752332N02343j0@282MW2353j2@2A2M@1M2hH2753j2@2A2M@2C2hH2752702362hH3j4@2D2M@1M3j2@2A2M@1M2723j2@2A2M@1M3j5@2E2M@1M2722713j4@2D2M@2C3j2@2A2M@2C2722703j2@2A2M@2C3j5@2E2M@2C2722712722373j4@2D2M@1M2hH2753j5@2E2M@1M2hH2752702hH3j4@2D2M@1M2723j5@2E2M@1M2722713j4@2D2M@2C2hH2752703j5@2E2M@2C2hH2752702hH3j4@2D2M@2C2723j5@2E2M@2C2722713j3@2F2712383j6@1X3j7@113j8@1D6C23w1y2393j9@2G2M72h42Q02b32hB2o12Zg3j9@2G2M72hA2Q02bD2hk3j9@2G2h41W27C2c53j9@2G2h41W3j1@2H27C2o12ZO2hk3j9@2G2h41W27C2c53j9@2G2h41W3j1@2H27C2eB2hk3j9@2G2hA1W27C2c53j9@2G2hA1W3j1@2H27C2o12o0~AV9@2L111K190contains%2N03j0@2K6C5101@1t6C5001@2J2N22ho27527B2o1~AVA^1333K370<constructor>%3j0W2603j1@212613j2@2B2622o0~WFK^1@2MA^1000W0W01@210W02@2B0W13@2I8014@2L90Body%~AVBQ111g170update%2N02N13j0@2H6C5101@1w6C5101@1v2602o0~AVCC001g1@160draw%2N02N12hp6C5101@1w6C5101@1t2302N02N66C5101@1t6C5001@2J2N03j0@2N6C5101@1t6C5001@2J27B2b22N62302N02M@1M2hq2703II12N02M@2C2hq2703II13j0@2N2M@1M2hq2703II13j0@2N2M@2C2hq2703II15i44Pr6C28@260T3OT12hH2N02M@1M2N22712hq2703II12N02M@2C2N22712hq2703II12ho2N22722ho2N22722h42h42h42hP4IS092o0~AVD^1333g3A0<constructor>%3j1W3j2@212hs6C73A0K3j0@2P2653j1W6C5001@232662o0~RFgK@2OD^1005@2P0W06@2Q0W17QB018CC0Bullet%~AVEQ111h1q0update%2N02N13j0@2H6C5101@1w6C5101@1v2602N02M@1M2N227B2b42N02N235@1M02ZC2N02M@1M2h22N227127D2b52N02h22N227135@1M02N02M@2C2N227B2b42N02N235@2C02ZC2N02M@2C2h32N227127D2b52N02h32N227135@2C02N51t6C5100@1p2o0~AVFC001h1c0draw%2N56C5001@1q2b26C20H1i2Z16C20L1i2303OT12hH2N02M@1M2N22712hq2703II12N02M@2C2N22712hq2703II12ho2N22722ho2N22723j0@2R2M@2S3j0@2R2M@2T3j0@2R2M@112hP4IS092o0~AVG^1223h290<constructor>%3j1W6C20y1z2hn6C73A0K6C60l1v2673j0@222652o0~WFhK@2UG^1005@220W06T0t07@2V0W18QE019CF0Character%~BVH@2W012i1612black%2hP2304i4443j0@1X6C64M1i2o1~BVI@2X012i1612gray%2hP2304iQQQ3j0@1X6C64M1i2o1~BVJ@2Y012i1612silver%2hP2304iuuu3j0@1X6C64M1i2o1~BVK@2Z012i1612white%2hP2304iPPP3j0@1X6C64M1i2o1~BVL@2a012i1612red%2hP2304i44P3j0@1X6C64M1i2o1~BVM^1343i4B12<constructor>%2hP2333j0@2S2603j1@2T2613j2@112623j3@1X2632o0~RFi^1@2bM^1000@2S0W01@2T0W02@110W03@1X0WColor%~AVNF221j260setPos%3j0@1M2603j1@2C2611t2o1~AVO@2c001j040alignLeft%2hk2621t2o1~AVPE001j040alignCenter%2hq2621t2o1~AVQ@2d001j040alignRight%2hc2621t2o1~AVRK001j040alignTop%2hk2631t2o1~AVSD001j040alignMiddle%2hq2631t2o1~AVTI001j040alignBottom%2hc2631t2o1~AVUM111j140setBgColor%3j0@2R2641t2o1~AVVG111j140setImage%3j0@2e2651t2o1~AVWC001j2k0draw%2N02N52M@2f2N22723II12712302N12N52MV2N32723II12712312N42hW2Q12bH3OT12hA3j0@2g3j1@2h2N52M@2f2N52MV2N42M@2S2N42M@2T2N42M@112N42M@1X4IS092N52hW2Q12b42N53j0@2g3j1@2h6C5200C2o0~AVX^1003j010<constructor>%2o0~@1PFj^1@2iX^1000@1M0401@2C0402@2j0k03@2k0k04@2l0W05@2e0W16FN017@2cO018EP019@2dQ01AKR01BDS01CIT01DMU01EGV01FCW0Drawing%~AVYQ001k2@2K0update%2h42303j042N02M727B2bA2N03j041W2N26C5100Q2j02hA2702302Z^F2h42303j042N12M727B2b@182N13j041W2N26C5100Q2N13j041W7C31a1k62b82N13j046C5100@2m2j02hA2712302Zl2h42313j1@2n2N02M727B2be2N13j041W2N03j1@2n1W2N26C5201@2I2bQ2N13j046C5100@2m2j02hA2712302N03j1@2n1W2P12MT2hA27135T02N03j1@2n1W2MT2h427C2b32N03j1@2n6C5100@2m39152j12hA2702312Z^j2j02hA2702302Z%-75%2N02M72h427D2bc2h42303j042N02M727B2bU2N03j041W2M@226C5001@1q2bJ2N03j041W2M@216C5001@292b32hv2622ZA2N22hv2702622N22hc27D2b22hc2622j02hA2702302Z^Z2Z22hc2622N32N22702632o0~AVZC001k1Z0draw%4iPPP6C23@2A0T2h42303j042N12M727B2b92N13j041W6C5000C2j02hA2702302Z^E2h42303j042N02M727B2b92N03j041W6C5000C2j02hA2702302Z^E2o0~AVa@2p111k1e0outOfBounds%3j0@2o2MW2M@1M2hw3j0@2o2M@2B27227B2eU3j0@2o2MW2M@1M2h22ho3j0@2o2M@2B27227027D2eJ3j0@2o2MW2M@2C2hw3j0@2o2M@2B27227B2eA3j0@2o2MW2M@2C2h32ho3j0@2o2M@2B27227027D2o1~AVbX221k4H0shoot%3j0@2q6C5001@232323j1@2r3j0@2q6C5101@1t6C5001@1s2hn6C5101@1w2332N12hW3j2@1z3j3@206C63D1g6C5100x2o0~AVc^1003k010<constructor>%2o0~lFk^1@2sc^1000B1001@1y1002@2H0v03R0k14QY015CZ016@2pa017Xb0Environment%~AV@3y^1004t0v0<constructor>%2hx6C21@2c1n6C5001@2v4i4446C5301@2u2hy6C5101@2t34t02hx6C21@2c1n6C5001@2v4iPPP6C5301@2u2hz6C5101@2t34t12hx6C21@2c1n6C5001@2v4i4446C5301@2u2hz6C5101@2t34t22hx6C21@2c1n6C5001@2v4i44P6C5301@2u2hz6C5101@2t34t32hx6C21@2c1n6C5001@2v4i4P46C5301@2u2hz6C5101@2t34t42hx6C21@2c1n6C5001@2v4i4PP6C5301@2u2hz6C5101@2t34t52hx6C21@2c1n6C5001@2v4i4Q46C5301@2u2hz6C5101@2t34t62o0~AVd^1003t010<constructor>%2o0~7Ft^1@2wd@3y7Font%~AV@3z^1004u0D0<constructor>%6C60u1x34u06C60u1x34u16C60u1x34u22hB34u32hB34u46C20y1z34u52o0~AVeQ112u3@1a0update%6C60u1x34u16C60u1x34u22hB34u32hB34u42h42313j143j032M727B2b@1K3j033j141W2323j252M62hz2Q02bC3Ou03j252M@2x6C5100x3Ou13j252M@2x6C5100x3j033j146C5100@2m2Z^Q3j252M62h@102Q02bC3Ou03j252M@2x6C5100@2m3Ou23j252M@2x6C5100x3j033j146C5100@2m2Z^h3j252M62h@112Q02b62h934u33j033j146C5100@2m2Z^s3j252M62h@122Q02b62h934u43j033j146C5100@2m2Z%-65%3j252M62hI2Q02bC3Ou53j252M@1M35@1M03Ou53j252M@2C35@2C03j033j146C5100@2m2Z%-82%2j12hA2702312Z%-87%2o0~AVf@2y112u140pressed%3Ou13j0@2x6C5101@2L2o1~AVg@2z112u140released%3Ou23j0@2x6C5101@2L2o1~AVh@30112u140down%3Ou03j0@2x6C5101@2L2o1~AVi@31112u150up%3Ou03j0@2x6C5101@2L182o1~AVj^1003u010<constructor>%2o0~7Fu^1@32j@3z6Input%~AV@1B^1003@10010<constructor>%2o0~7F@10^1@33@1B^10Weapon%~AVl^1003v020<constructor>%6C70@1B0@102o0~7Fv@10@34l^10Pistol%~AVm@1p111w4@1N0control%3Ou32c53Ou53j0@1u2MW6C5101@35182bO3Ou53j0@1u2MW6C5101@1t6C5001@1s2313j0@1u2MW3j1@1x2hm6C5101@1w6C5101@1v2323j1@1x2hn6C5101@1w2332N02M@1y3j0@1u3j2@1z3j3@206C63D1g6C5100x3j0@1u6C20y1z35@2102h@136C21h1u2b73j0@1u2M@212P12M@1M2hA27135@1M02h@146C21h1u2b73j0@1u2M@212P12M@1M2hA27035@1M02hD6C21h1u2b73j0@1u2M@212P12M@2C2hA27135@2C02hF6C21h1u2b73j0@1u2M@212P12M@2C2hA27035@2C03j0@1u2M@216C5000@1s3j0@1u3j0@1u2M@212hl6C5101@1w35@2102o0~AVn@1q001w020controlsTime%2h92o1~AVo^1113w130<constructor>%3j0A6C7130I2o0~HFwI@36o^1011@1pm012@1qn0Player%~AVp@37001x030clear%2N06C5000@372o0~AVq@23001x040clone%2N06C5001@236C61u1x2o1~AVr@2L111x140contains%2N03j0@2x6C5101@2L2o1~AVsx111x150add%2N03j0@2x2hW2202o0~AVt@2m111x140remove%2N03j0@2x6C5100@2m2o0~BVu^1013x1512<constructor>%2K02303j0@392602o0~bFx^1@38u^1000@392011@37p012@23q013@2Lr014xs015@2mt0Set%~AVv@3A112y4Y0shuffle%2h42313j143j0u2M72hA27127B2bO3j143j0u2M76C12@3u102323j0u3j141W2333j0u3j143j0u3j2@2n1W2203j0u3j2@2n3j3z2202j12hA2702312Z^V2o0~AVw@3C332y4r0getQuadraticRoots%3j1@112hH2752h@153j0@1X2723j2@1D2722702333j3@3B2hk27B2b32L02o12ZZ3j3@3B2hk27D2bN3j1@111k3j3@3B2hq2752712ho3j0@1X2722733j1@111k3j3@3B2hq2752702ho3j0@1X2722732L22o12Z83j1@111k2ho3j0@1X2722732L12o12o0~AVx^1003y010<constructor>%2o0~7Fy^1@3Dx^10Util%~AVy@3E002z030zero%3ikk6C62@1A1z2o1~AVz@23001z040clone%2N02N16C62@1A1z2o1~AV@10@29001z080isZero%2N02hk2Q02c32N12hk2Q02o1~AV@11@1v111z1A0plus%2N03j0@282M@1M2702N13j0@282M@2C2706C62@1A1z2o1~AV@12@1t111z1A0minus%2N03j0@282M@1M2712N13j0@282M@2C2716C62@1A1z2o1~AV@13@1w111z180times%2N03j0@3F2722N13j0@3F2726C62@1A1z2o1~AV@14@3G111z180dividedBy%2N03j0@3F2732N13j0@3F2736C62@1A1z2o1~AV@15@2J001z080lengthSquared%2N02hH2752N12hH2752702o1~AV@167001z040length%7C30@151z82hq2752o1~AV@17@1s001z1F0normalize%7C30@101z3182bA7C30@161z92302N03j0@3H2732602N13j0@3H2732611t2o1~AV@18@3J001z160normalized%7C30z1z22303j0@3I6C5000@1s3j0@3I2o1~AV@19@35111z1A0equals%2N03j0@282M@1M2Q02c42N13j0@282M@2C2Q02o1~AV@1A^1223z250<constructor>%3j0@1M2603j1@2C2612o0~@1AFz^1@3K@1A^1000@1M0W01@2C0W12@23z013@29@10014@1v@11015@1t@12016@1w@13017@3G@14018@2J@150197@1601A@1s@1701B@3J@1801C@35@190Vec2%~AV@1V^10031010<constructor>%2o0~7F1^1@3L@1V^10Core.Object%~AV@1X@3M0012030getTrace%1t3Ia12o1~CV@1Y^102322G224<constructor>%2hW2302hW2311t2hH3IY01t2h42hB3IZ03j0f2613j1@3O2602o0~MF2^1@3N@1Y^1000@3O0W01f0W12@3M@1X0Core.Exception%~CV@1Z^102332C224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y021t2h42h93IZ02o0~7F32@3P@1Z^10Core.FatalException%~CV@1a^1023428224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7F42@3R@1a^10Core.AssertionFailedException%~CV@1b^1023528224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7F52@3S@1b^10Core.DivisionByZeroException%~CV@1c^1023628224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7F62@3T@1c^10Core.IndexOutOfRangeException%~CV@1d^1023728224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7F72@3U@1d^10Core.InvalidArgumentException%~CV@1e^1023828224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7F82@3V@1e^10Core.InvalidAssignmentException%~CV@1f^1023928224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7F92@3W@1f^10Core.InvalidInvocationException%~CV@1g^1023A28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FA2@3X@1g^10Core.InvalidKeyException%~CV@1h^1023B28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FB2@3Y@1h^10Core.InvalidOperationException%~CV@1i^1023C28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FC2@3Z@1i^10Core.KeyNotFoundException%~CV@1j^1023D28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FD2@3a@1j^10Core.NotImplementedException%~CV@1k^1023E28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FE2@3b@1k^10Core.NullReferenceException%~CV@1l^1023F28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FF2@3c@1l^10Core.UnassignedVariableException%~CV@1m^1023G28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FG2@3d@1m^10Core.UnknownFieldException%~CV@1n^1023H28224<constructor>%2hW2302hW2313j0@3Q3j1@1D6C72@1Y022o0~7FH2@3e@1n^10Core.UnsupportedOperationException%~AV@1r^1113L130<constructor>%3j062602o0~CFL^1@3f@1r^100060WGame.Event%~AV@40^1004M090<constructor>%2L034M12L034M22L034M32L034M42o0~AV@1s@3g002M060getScreenInfo%2hB2h42h42L35E@165112o1~AV@1tb001M1O0clockTick%2h42h43OM41y2Y33j0z6C400002Z^41l1l1l5E@175002h42h43OM31y2Y33j0z6C400002Z^41l1l1l2o0~AV@1u1001M5@3T0pumpEvents%2L02303OM15E@185112313j1z2M72322h42333j343j2@3i27B2b@2w3j1z3j342P12hA2702331W3r5@2f3j1z3j342P12hA2702331W3j1z3j342P12hA2702331W6C62@201Q234391@2T3j1z3j342hA2711W3i943j1z3j342P12hA2702331W3j1z3j342P12hA2702331W6C65@1y1O234391@263j1z3j342hA2711W3iB43j1z3j342P12hA2702331W3j1z3j342P12hA2702331W6C65@1y1O234391@1j3j1z3j342hA2711W3i9H3j1z3j342P12hA2702331W3j1z3j342P12hA2702331W6C65@1y1O234391@1M3j1z3j342hA2711W3iBH3j1z3j342P12hA2702331W3j1z3j342P12hA2702331W6C65@1y1O234391z3j1z3j342P12hA2702331W3j1z3j342P12hA2702331W3j1z3j342P12hA2702331W6C63@211R234391b3j1z3j342P12hA2702331W2h96C62@1x1N234391Q3j1z3j342P12hA2702331W2hB6C62@1x1N234391F3j1z3j342P12hA2702331W6C61@221S23439152hB2hW2h93I7039103j0y3j4@3h6C5100x2Z%-186%3OM22M72h427D2bC2h42hA3OM21y2Y43j1z3j0y6C410002Z^51l1l1l3j0y2o1~AV@1v@3k111M1F0setTitle%2j02h@192702303j0@3j2M72h42Q02b32h@1A6C61@1d171u3j0@3j5E@1B5112o1~CV@1w^1463M9@2S224<constructor>%2hW2342hW2353j0@3j5I51152h@1C2h93I702h@1D2362h@1E2372h@1F2383j1@3o6I512432h@1G3j6z2702h93I703j2@2f6I512432h@1E3j6z2702h93I703j3V6I512432h@1F3j6z2702h93I703j4@3p2hW2Q02e23j4@3p6I512432h@1H3j7@3q2703j6z2702h93I703j5@3r2hW2Q02e23j5@3r6I512432h@1H3j8@3s2703j6z2702h93I703OM02hW2Q02h@1I2h93I701t34M03j1@3o2673j4@3p2m13j2@2f2343j5@3r2m13j3V2353j2@2f3II12323j3V3II12333j4@3p3II12343j5@3r3II12353j2@2f2613j3V2622h@1J2363j2@2f2h427D3j7@3q3j6z2702h93I703j3V2h427D3j8@3s3j6z2702h93I703j4@3p2h427D2h@1H3j7@3q2703j6z2702h93I703j5@3r2h427D2h@1H3j8@3s2703j6z2702h93I703j1@3o2h427D2h@1G3j6z2702h93I703j1@3o5E@1K5103j2@2f3j3V3j4@3p3j5@3r5E@1L5403j0@3j5E@1B5102o0~bFM^1@3l@1w@40501@3m0W02@3n0W07@3o0W18b@1t0191@1u01A@3k@1v0Game.GameWindow%~AV@1x^1223N2B0<constructor>%3j1@302b22hz2Z12h@106C71@1r0L3j0@2x2613j1@302622o0~HFNL@3t@1x^1001@2x0W02@300WGame.KeyEvent%~AV@1z^1333P370<constructor>%3j066C71@1r0L3j1@1M2613j2@2C2622o0~HFPL@3u@1z^1001@1M0W02@2C0WGame.MouseEvent%~AV@1y^1553O590<constructor>%3j063j3@1M3j4@2C6C73@1z0P3j1@3w2633j2@302642o0~HFOP@3v@1y^1003@3w0W04@300WGame.MouseClickEvent%~AV@20^1223Q250<constructor>%2hI3j0@1M3j1@2C6C73@1z0P2o0~7FQP@3x@20^10Game.MouseMoveEvent%~AV@21^1333R370<constructor>%2h@1M3j0@1M3j1@2C6C73@1z0P3j2@3z2632o0~CFRP@3y@21^1003@3z0WGame.MouseScrollEvent%~AV@22^1113S150<constructor>%2hA6C71@1r0L3j0@412612o0~CFSL@40@22^1001@410WGame.QuitEvent%~AV@2C^1004T0J0<constructor>%6C60@1V1134T06C60@1V1134T13OT03OT22h45E@1N4303OT13OT32h45E@1N4303OM44n@232T6C5100x3OM34n@242T6C5100x2o0~AV@23@42002T1J0_renderer%3OT15E@1O4103OT13OT32hA5E@1N4303OT12303OT034T13j0z34T03OT32303OT234T33j0z34T22o0~AV@24@43002T070_rendererReset%2hW34T33OT13OT32hH5E@1N4312o1~BV@25@44782T8E12ellipse%2hP2373OT12hH3j0@2g3j1@2h3j2@2f3j3V3j4@2S3j5@2T3j6@113j7@1X4IS192o1~BV@26@4A892T9@1Y12line%2hP2383j4@452hA27B2b12o03Ie03j1@463j3@472Q02bL3OT12hA3j0@483j2@493IK13j1@463j4@452hH2732713j2@493j0@482713IC13j4@453j5@2S3j6@2T3j7@113j8@1X4IS192o13j0@483j2@492Q02bL3OT12hA3j0@483j4@452hH2732713j1@463j3@473IK13j4@453j3@473j1@462713IC13j5@2S3j6@2T3j7@113j8@1X4IS192o13j4@452hY27B2c25E@1P401182bD3OT12hY3j0@483j1@463j2@493j3@473j4@453j5@2S3j6@2T3j7@113j8@1X4IS1A2o13OT12ht3j0@483j1@463j2@493j3@473j4@452h42h42h43j5@2S3j6@2T3j7@113j8@1X4IS0D3OT15E@1Q4112o1~BV@27@4B782T8E12rectangle%2hP2373OT12hA3j0@2g3j1@2h3j2@2f3j3V3j4@2S3j5@2T3j6@113j7@1X4IS192o1~BV@28@4I9A2TAG12triangle%2hP2393OT12h@153j0@4C3j1@4D3j2@4E3j3@4F3j4@4G3j5@4H3j6@2S3j7@2T3j8@113j9@1X4IS1B2o1~BV@29@4LBC2TCI12quad%2hP23B3OT12ht3j0@4C3j1@4D3j2@4E3j3@4F3j4@4G3j5@4H3j6@4J3j7@4K3j8@2S3j9@2T3jA@113jB@1X4IS1D2o1~AV@2A@4M332T4K0fill%3OM02333OT13OT32hH5E@1N4303OT12hA2h42h43j3z2M@3m3j3z2M@3n3j0@2S3j1@2T3j2@112hP4IS192o1~AV@2B^1003T010<constructor>%2o0~7FT^1@4N@2B@2C4Graphics2D.Draw%~AV@41^1004e050<constructor>%2h42h42L234e02o0~AV@2D@4k112eG@2X0load%3j0@4O2M@4P2313j1@4R6C5000@4Q3j0@4O2M@4S2323j0@4O2M@4T2335E@1R4012b@1W3j1@4R2M@4U2343Of03j4@2x6C5101@4V2353j5@4W2hW2Q02bm6C60@2S1f2353j1@4R2M@2f6C21@2E1e2363j1@4R2MV6C21@2E1e2373j5@4W3j6@4X35@2f03j5@4W3j7@4Y35V02h43j6@4X3j7@4Y2L26C62@3d1d2383j1@4R2M@2f3j1@4R2MV2hB6C63@3G1Z2393j9@4Z3j1@4R35@4P03j8@4b6C5000@4a3j8@4b3j9@4Z3i446C5300@4c3j8@4b6C5000@4d3j5@4W2h93j8@4b5E@1S4303Of03j4@2x3j5@4W2203j0@4O2M@4e23A3j0@4O2M@4f23B3j5@4W2M@2f2hk27023C3j5@4W2MV2hk27023D3jA@1M3jC@4g2733jB@2C3jD@4h2733jA@1M3j2@2f2703jC@4g2733jB@2C3j3V2703jD@4h2732L423E2Zb2h43j2@2f3j3V2L26C62@3d1d2383j8@4b6C5000@4a3j8@4b3j0@4O3j0@4O2M@4e1k3j0@4O2M@4f1k6C5300@4c3j8@4b6C5000@4d6C60@2S1f2353j5@4W3j2@2f35@2f03j5@4W3j3V35V03j5@4W2h93j8@4b5E@1S4302hk2hk2hc2hc2L423E3j5@4W3j2@2f3j3V6C63@2R1e23F3jF@4i3j5@4W3jE@4j3j2@2f3j3V5E@1T4503jF@4i2o1~AV@2E@4m112e2V0_nextPowerOf2%3j0@1d3j0@1d2hA2712762h42Q02b23j0@1d2o13j0@1d2hH2732313j1@4l2h427D2b92j03j1@4l2772302j12hH2732312Z^D3j0@1d2hA2702o1~AV@2FC221e2F0draw%3OT11t8i44444443j0@1M3j1@2C3i445E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2G@4o331e3G0drawWithAlpha%3OT11t8i444444@1W3j0@1M3j1@2C2h43j2@4n5E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2H@4r661e6T0drawRegion%3j4@2f2h42Q02e33j5V2h42Q02b12o03OT11t2hA3j2@4p3j3@4q3j4@2f3j5V3i443j0@1M3j1@2C3i445E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2I@4s441e4Q0drawStretched%3j2@2f2h42Q02e33j3V2h42Q02b12o03OT11t6i4444H3j2@2f3j3V3j0@1M3j1@2C3i445E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2J@4z881e8c0drawRegionStretched%3j2@4w2h42Q02eB3j3@4v2h42Q02e73j6@4u2h42Q02e33j7@4t2h42Q02b12o03OT11t2hY3j4@4p3j5@4q3j6@4u3j7@4t3j2@4w3j3@4v3j0@4x3j1@4y3i445E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2K@50991e9L0drawRegionStretchedWithAlpha%3OT11t2h@1X3j4@4p3j5@4q3j6@4u3j7@4t3j2@4w3j3@4v3j0@4x3j1@4y3i445E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2L@51331e3G0drawRotated%3OT11t8i444444@153j0@1M3j1@2C3j2@1O2h45E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2M@52441e4G0drawRotatedWithAlpha%3OT11t8i444444@1Y3j0@1M3j1@2C3j2@1O3j3@4n5E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2N@53AA1eAM0drawWithOptions%3OT11t2h@1Z3j4@4p3j5@4q3j6@4u3j7@4t3j2@4w3j3@4v3j0@4x3j1@4y3j8@1O3j9@4n5E@1U4D12b22hW2Z42hB2h@1V2hB3I712o1~AV@2O@56111e3R0_createResCopy%3j0@543j0@542L22315E@1R401182bI6C60@2S1f2323j2@553j0@542M@2f35@2f03j2@553j0@542MV35V03j2@552hB3j0@545E@1S4303j1y2hA3j2@552203j1y2o1~AV@2P@57221e4T0flip%3j0@3s2e13j1@2A182b21t2o12N07C31@2O1eD2323j2@542hA1W2N12N26C63@2R1e2331t3j3y3j0@3s3j1@2A3j2@542h41W3j2@542hA1W5E@1a4612o1~AV@2Q@5A221e7@1F0scale%3j0@3q5I51132c23j1@3s5I5113182e73j0@3q2h42Q02e33j1@3s2h42Q02b42hB2h@1b2hB3I703j0@3q2h427B2323j1@3s2h427B2333j2@592e13j3@582bB3j2@593j3@587C32@2P1eE2343j0@3q3IC12303j1@3s3IC12312Z21t2343j0@3q2N12Q02c33j1@3s2N22Q02b23j4@4b2o12N07C31@2O1eD2353j5@542hA1W3j0@3q3j1@3s6C63@2R1e2363j4@4b3j6y3j0@3q3j1@3s3j5@542h41W3j5@542hA1W5E@1c4603j6y2o1~AV@2R^1333e370<constructor>%3j0@5D2603j1@2f2613j2V2622o0~@1KFe^1@5B@2R@41100@5C0W01@2f0W02V0W14C@2F015@4o@2G016@4r@2H017@4s@2I018@4z@2J019@50@2K01A@51@2L01B@52@2M01C@53@2N01D@56@2O01E@57@2P01F@5A@2Q0Graphics2D.GraphicsTexture%~AV@42^1004f030<constructor>%2K034f02o0~AV@2S^1003f010<constructor>%2o0~HFf^1@5E@2S@42101@2f0W02V0WGraphics2D.GraphicsTextureResource%~AV@2T^1113l140<constructor>%3j0@3Q2hW6C72@1Y022o0~7Fl2@5F@2T^10Graphics2DText.FontNotFoundException%~AV@43^1004m030<constructor>%2K034m02o0~AV@2U@2u331m3C0setColor%3j0@2a2633j1@5G2643j2@5H2652hW2662hW2671t2o1~AV@2V@2t111m180setSize%3j0@5I2612hW2662hW2671t2o1~AV@2W@5K111m180setStyle%3j0@5J2622hW2662hW2671t2o1~AV@2X0111m3@130render%2N62hW2Q02bZ2N02M@5L2N02M@5M2N12N22N32N42N56C27@2s1r2662N02M@5L2N02M@5M2N12N22N32N42N52L72h@1d6C5101@5N2675E@1e7012b92N02M@5L2N02M@5M2N12N22N66C25@2k1o2682N72h@1f2703j0@5O2702313Om03j1@5P6C5101@4V2323j2@4i2hW2Q02bA1t3j0@5O2h@192706C62@2y1s2323Om03j1@5P3j2@4i2203j2@4i2o1~AV@2Y^1113m1A0<constructor>%3j0@5R2Xn182b32h@1g6C61@1d171u3j0@5R2602o0~@1AFm^1@5Q@2Y@43100@5R0W01@5I0@1Y02@5J0403@2a0P04@5G0P05@5H0P06@5S0W07@5T0W08@5U0W1A@2u@2U01B@2t@2V01C@5K@2W01D0@2X0Graphics2DText.FontRenderer%~AV@44^1004n030<constructor>%2K034n02o0~AV@2Z@2v001n030getRenderer%1t6C61@2Y1m2o1~AV@2a@5W222n240_getKey%3j0@5V3j1@2P2702o1~AV@2b@5X222n4M0_get%3j0@5V3j1@2P2702323On03j2@2x6C5101@4V2333j3@5R2hW2Q02b83j0@5V3j1@2P6C62@2j1n2333On03j2@2x3j3@5R2203j3@5R2o1~AV@2c@5Z112n1F0fromResource%3j0@5Y5E@1h711182b72h@1i3j0@5Y2702h@1j2706C61@2T1l1u2hA3j0@5Y6C22@2b1n2o1~AV@2d@5a112n130fromDisk%6C60@1j1D1u2o0~AV@2e@5c112n1F0fromSystem%3j0@5b5E@1k711182b72h@1l3j0@5b2702h@1j2706C61@2T1l1u2hY3j0@5b6C22@2b1n2o1~AV@2f@5d112n130isSystemFontPresent%3j0@5b5E@1k7112o1~AV@2g@5e002n030getDefaultSerifFont%3iA46C22@2b1n2o1~AV@2h@5f002n030getDefaultSansSerifFont%3iH46C22@2b1n2o1~AV@2i@5g002n030getDefaultMonospaceFont%3iY46C22@2b1n2o1~AV@2j^1223n250<constructor>%3j0@5V2603j1@2P2612o0~MFn^1@5h@2j@44100@5L0W01@5M0W13@2v@2Z0Graphics2DText.FontResource%~AV@45^1004o050<constructor>%2K034o02L034o12o0~AV@2k@4V552o7Q0get%3j0@5V3j1@5i3j2@5I3j3@5J2L42h@1d6C5101@5N2353Oo03j5@2x6C5101@4V2363j6@5j2hW2Q02b83j4@5k3j2@5I6C62@2n1o2363Oo03j5@2x3j6@5j2203j6@5j2o1~AV@2l@60441oH@2q0renderText%2h42342h42352hW2362L02372L02382L02392hW23A2h42h@1X3j0@5O1y2Y@1C3jB@1D3I9123C3jB@1D2h@1m2Q02b52j42N32702342Z^D3jB@1D2h@1n2Q02e33jB@1D2h@1f2Q02b36C60@1j1D1u2Z^O3j7@5l3jC@5m6C5100x2N23jC@5m6C5101@4V23D3jD@5n2hW2Q02bF2h923E1t3jC@5m6C62@2r1q23D3j6@5o2hW2Q02b22L02363j6@5o3jD@5n6C5100x3jD@5n23A3j8@5p3j4@2f3jD@5n2M@5q2716C5100x3j9@5r2h46C5100x3j3@5s3jD@5n6C5100x3j5V3jD@5n2MV3IJ12352j43jD@5n2M@5t2702342Z%-75%1l1l1l2j43jA@5u2M@2f3jA@5u2M@5t2713jD@5n2M@5q2712h@1o2722h@1p2732702343j6@5o2hW2Q12bZ3j6@5o6C21@2o1p23F2h42hz3jF@5v1y2YO2N03jG@5w6C5100x2h42hJ3jG@5w2M@5x1y2YB2N13jD@5n2M@5m3jG@5w2202N23jD@5n2M@5m3jD@5n2202Z^C1l1l1l2Z^P1l1l1l3j2@5y2hA3j8@5p5E@1q7303j2@5y2hH3j9@5r5E@1q7303j2@5y2hY3j7@5l5E@1q7303j2@5y2h@153j7@5l2M73IZ03j1@5z2h43j4@2f2203j1@5z2hA3j5V2202o0~AV@2m@61001o030consolidate%6C60@1j1D1u2o0~AV@2n^1223o2G0<constructor>%3j0@5k2643j1@5I2hY2722h@1p2732631t2hA3IY01t2h42hW3IZ02o0~gFo^1@62@2n@45200@5v1001@632002@642003@650W04@5k0W17@60@2l018@61@2m0Graphics2DText.GLRenderer%~AV@2o@6C112pA@1n0makeSheets%2L02313j0@5x2M72322h42333j0@5x2M72h427D2b@1Z3j0@5x2h41W2MV2342h@1r3j4V2732353j0@5x4n@2p2p6C5100@662L02363j6@672M73j5@6B27B2c33j3@693j2@6A27B2b@182L02373j6@673j7@686C5100x2h42383j3@693j2@6A27B2c83j8@2f3j0@5x3j3@691W2M@2f2702h@1r27B2bH3j0@5x3j3@692P12hA2702331W2393j7@683j9@5n6C5100x2j83j9@5n2M@2f2702382Z^U3j3@693j2@6A27B2cA3j8@2f3j0@5x3j2@6A2hA2711W2M@2f2702h@1r27B2bH3j0@5x3j2@6A2hA2712P12321W2393j7@683j9@5n6C5100x2j83j9@5n2M@2f2702382Z^W2Z%-79%3j1@5v3j6@676C61@2q1p6C5100x3j1@5v2o1~AV@2p@6D112p130sortByWidthKeyFunction%3j0@5n2M@2f2o1~AV@2q^1113p9@1H0<constructor>%2h42313j0@672h41W2h41W2MV2322L02332L02342L02352h42h@1o3j0@671y2Yo2N03j6@686C5100@6G2h42372h42h@1W3j6@681y2YW2N13j8@5n2M@5m3j8@5n2203j8@5n3j7@1M35@6H03j8@5n3j1@2C35@6I03j8@5n1t35@5w03j8@5n2hW35@6J03j3@5p3j7@1M6C5100x3j4@5r3j1@2C6C5100x3j5@5x3j8@5n6C5100x2j73j8@5n2M@2f2702372Z^X1l1l1l2j13j2V2702312Z^p1l1l1l3j3@5p3j4@5r3j5@5x3j1@2C5E@1s7402o0~HFp^1@6E@2q^1000@5x1001@6F20Graphics2DText.GLTextureSheet%~AV@2r^1223q3j0<constructor>%3j1@5m2603j0@5j2681t2hJ3IY02h42h42h42h42L42323j0@5j2M@5k1t3j1@5m3j2@5I5E@1t741182b72h@1u3j1@5m2702h@1v2706C61@1d171u3j2@5I2h41W2613j2@5I2hA1W2623j2@5I2hH1W2693j2@5I2hY1W26A2o0~@10Fq^1@6K@2r^1000@5m0W01@2f0W02V0W03@6J0W04@5w0W05@6H0W06@6I0W07@6L0W08@5j0W09@5q0W0A@5t0WGraphics2DText.GLTile%~AV@46^1004r030<constructor>%2K034r02o0~AV@2s@4V772r9W0get%3j063j1@6M3j2@5I3j4@2S3j5@2T3j6@113j3@5J6C27@2t1r2373Or03j7@2x6C5101@4V2383j8@5k2hW2Q02bD3j063j1@6M3j2@5I3j3@5J3j4@2S3j5@2T3j6@116C67@2u1r2383Or03j7@2x3j8@5k2203j8@5k2o1~AV@2t@6N772r8T0getUniqueKey%2L02373j062h@192703j1@6M2h@192703j2@5I2h@192703j3@2S2h@192703j4@2T2h@192703j5@112h@192703j6@5J2h@192703j7y5E@1w7803j7y2h@1x6C5101@5N2o1~AV@2u^1773rA@180<constructor>%3j063j1@6M3j2@5I3j4@2S3j5@2T3j6@113j3@5J6C27@2t1r2601t2hA3IY02hW2L12371t3j063j1@6M3j2@5I3j4@2S3j5@2T3j6@113j3@5J5E@1y7812383IW12c33j062hA2Q02bJ2h42395E@22701182bE3j942hA2702P12392h@1z27D2b32h@206C61@2T1l1u2h@216C11@1K002Z^H3j8@6P3r6F391G2h@1l3j1@6M2702h@1j2706C61@2T1l1u2h@1i3j1@6M2702h@1j2706C61@2T1l1u6C60@1Y121u2o0~CFr^1@6O@2u@46100@2x0WGraphics2DText.NativeFont%~AV@2v@6Q001s030_refreshGlRenderer%6C60@1j1D1u2o0~AV@2wC221s250draw%3j0@1M3j1@2C2hP7C33@2x1s82o1~AV@2x@4o331s3U0drawWithAlpha%2N12b91t2N53OT13j0@1M3j1@2C3j2@4n5E@237612o12ZI3OT12hA2h42h42h@1p2h@1p2hP2h42h42hP4IS091t3OT13j0@1M3j1@2C3j2@4n5E@247512o12o0~AV@2y^1223s3@1C0<constructor>%3j1@5O2642h42h42L22325E@1e7012bW2L02651t2h@1W3IY03j0@6T2M@5U2602N03j1@5O3j2@5z1t2N56C5400@601t2ht3j0@6T2M@2a3IZ01t2h@1o3j0@6T2M@5G3IZ01t2h@253j0@6T2M@5H3IZ02h92612ZP1t2hA3IY03j2@5z1t3j0@6T2M@5S3j0@6T2M@5R2M@5L3j0@6T2M@5R2M@5M3j0@6T2M@5I3j0@6T2M@5J3j0@6T2M@2a3j0@6T2M@5G3j0@6T2M@5H3j1@5O5E@267B03j2@5z2h41W2623j2@5z2hA1W2632o0~qFs^1@6R@2y^1000@5U0W01@6S0B02@2f0W03V0W04@5O0W05@5x0W16@6Q@2v017C@2w018@4o@2x0Graphics2DText.TextSurface%~AV@2z@6V111U3M0getImage%3j0@6U2h96C22@3H1a2312N03j1@542hA1W6C5101@4V2323j2@5w2hW2Q02b42h@273j0@6U6C62@341V1u3j2@5w3j0@6U6C5101@6V2o1~AV@30@6W001U1N0isDone%2N42b22h92o12h42h42N11y2Y73j0@5w6C5001@6W182b22hB2o12Z^81l1l1l2h92642h92o1~AV@31@6X001U2R0getProgress%2N42b22hc2o12hk2302h42hA2N11y2Y92j03j1@5w6C5001@6X3j1@5w2M@6Y2722702302Z^A1l1l1l3j0@6Z2N32732o1~AV@32@6a001U2J0getFiles%2L02302h42hA2N11y2Y53j0y3j1@5w6C5001@6a6C5100@6G2Z^61l1l1l3j0y6C5000@663j0y2o1~AV@33^1113U3a0<constructor>%3j0@5v6C5001@232613j0@5v2M72h42Q02b32h92642ZO2h42hA3j0@5v1y2YG3j1@5w2M@6g2322N03j2@6M3j1@5w2202N23j2@6M6C5100x2N33j1@5w2M@6Y2702632Z^H1l1l1l2o0~qFU^1@6b@33^1000@6c2001@6d0W02@6e1003@6Y0404@6f0B15@6V@2z016@6W@30017@6X@31018@6a@320ImageResources.AggregatedImageSheet%~AV@34^1223V280<constructor>%3j0@6j2h@283j1@5Y6C5201@6i6C71@1Y023j1@5Y2632o0~CFV2@6h@34^1003@5Y0WImageResources.ImageNotFoundException%~AV@35^1223W280<constructor>%3j0@6j2h@283j1@6M6C5201@6i6C71@1Y023j1@6M2632o0~CFW2@6k@35^1003@6M0WImageResources.SheetNotFoundException%~AV@36^1113X130<constructor>%3j0@1j6C71@1Y022o0~7FX2@6l@36^10ImageResources.LoadFailedException%~AV@47^1004Y040<constructor>%2hW2L134Y02o0~AV@37@6V001Y1X0getImage%2N42hW2Q12b22N42o12N2182b32h@296C61@1h1B1u2N32hW2Q02b32h@2A6C61@1h1B1u2N32M@2f2N32MV2hB6C63@3G1Z2303j0@4b2N335@4P03j0@4b2643j0@4b2o1~AV@38@6W001Y2q0isDone%2N22b22h92o11t2N33OY05E@2B6303OY02h41W2303j0@6P2h427D2bB2h92623j0@6P2hA2Q12b32h@2C6C61@361X1u2h92o15E@2D6012bL3IT12313j1@1D2N02Q12b52hA2613j1@1D2602Z42N12hA2702612N12h@1p27D2b22h@2E6C11@1K002hB2o1~AV@39@6n112Y140loadFromResourcesAsync%3j0@6m5iWW9B6C25@3B1Y2o1~AV@3A@6o112Y140loadFromResources%3j0@6m5iWWBB6C25@3B1Y2o1~AV@3B@6y552YB@1d0_loadImpl%3j1@6p182bF3j0@6m6C21@3C1Y2353j5@6q2hA1W2303j5@6q2hH1W2333j5@6q2hY1W2343iWA6C62@3d1d2363j6@6r3j3@2f35@2f03j6@6r3j4V35V03j2@6s2bB6C60@3D1Y2373j7@6t3j6@6r35@6u03j6@6r3j0@6m3j7@6t5E@2F6303j7@6t2o12hB2h92L22385E@2D6012bX6C60@3D1Y2373j7@6t3j6@6r35@6u03j6@6r3j0@6m3j7@6t5E@2F6302h@2G6C11@1K002h@2E2393j7@6t6C5001@6W182bD3j9@6v6C11@1K002j92h@2H2722393j9@6v2hA27D2b22hA2392Z^H3j8@6x6C5000@6w2Z43j6@6r3j0@6m3j8@6x5E@2I6303j8@6x2h41W182b32h@2J6C61@361X1u3j3@2f3j4V2hB6C63@3G1Z23A3jA@2e3j6@6r35@4P03jA@2e2o1~AV@3C@70112Y2Q0getGenName%3j0@6m6C21@3H1a2313j1@6z2hW2Q02b42h@2K3j0@6m6C62@341V1u3j1@6z2h41W2hA2Q02b72h@1j3j0@6m2702h@2L2706C61@361X1u3j1@6z2o1~AV@3D^1003Y010<constructor>%2o0~gFY^1@71@3D@47100@720401@730402@740B03@6u0W04@750W16@6V@37017@6W@380ImageResources.ImageLoader%~AV@3E@76001Z020getWidth%2N12o1~AV@3F@77001Z020getHeight%2N22o1~BV@3G^1233Z3F12<constructor>%2h92323j0@2f2613j1V2623j2@792b62h43j0@2f3j1V2L26C62@3d1d2602o0~gFZ^1@78@3G^1000@4P0W01@4S0W02@4T0W03@4e0404@4f0415@76@3E016@77@3F0ImageResources.ImageResource%~AV@48^1004a050<constructor>%2K034a22K034a32o0~BV@3H@7D122a4o12getFileInfo%2hB2316C20@3J0a3Oa03j0@6m6C5101@4V2323j2y2hW2Q02bH3j0@6m6C5001@7A3i@2N@2M6C5201@6i2333Oa03j3@7B6C5101@4V2323j2y2hW2Q12b43Oa03j0@6m3j2y2203j2y2hW2Q02b42h@2O3j0@6m6C62@341V1u3j1@7C2c53j2y2h41W2hA2Q12b42h@2P3j0@6m6C62@341V1u3j2y2o1~AV@3I@7E112a2P0getSheetInfo%6C20@3J0a3j0@5b3I412h@152Q12b32h@2Q6C61@1d171u3Oa23j0@5b6C5101@4V2313j1@6M2hW2Q02b42h@2R3j0@5b6C62@351W1u3Oa13j1@6M1W2o1~AV@3J@7Q002aI@5N0ensureInitialized%3Oa02hW2Q12b12o02K02302K02313j0@7F34a03j1@7G34a15E@2S6012322hW2332h42342h42ht3j2@7I2h@1f6C5101@7H1y2Y@4h3j5@4A2h@2T6C5101@7H2363j6@7J2h41W6C5001@7A3s0@4O3j6@7J2hA1W2373j6@7J2hH1W3I112383j6@7J2hY1W3I112393j6@7J2h@154g1002h@2T6C5101@5N6C5001@7A23A3j0@7F3jA@6m2h43j7@7K3j8@3q3j9@3s2L4220391@433j6@7J2hA1W2333j6@7J2hH4g1002h@2T6C5101@5N6C5001@7A23B3j1@7G3j3@7L2h@2U3jB@5b2h@2V3j3@7L2h@2W2K02K32203Oa23jB@5b3j3@7L220391@3d2j42hA2702343j6@7J2hA1W3I1123C3j6@7J2hH1W3I1123D3jC@2f2h42Q02c33jDV2h42Q02b42h@1r23C2h@1r23D3j1@7G3j3@7L1W2h@2W1W3j4@7M2h@1E3jC@2f2h@1F3jDV2h@2X2L02K3220391@2y3j6@7J2hA1W2373j6@7J2hH1W3I1123E3j6@7J2hY1W3I1123F3j6@7J2h@151W3I1123C3j6@7J2ht1W3I1123D3j6@7J2h@1o1W3I1123G3j1@7G3j3@7L1W2h@2W1W3j4@7M1W2h@2X1W3j7@7K3jE@1M3jF@2C3jC@2f3jDV3jG@7N2L66C5100x391@2D3j6@7J2hA1W3I1123E3j6@7J2hH1W3I1123F3j6@7J2hY1W3I1123C3j6@7J2h@151W3I1123D3j6@7J2ht4g1002h@2T6C5101@5N6C5001@7A23A3j0@7F3jA@6m2hA3j3@7L3j4@7M3jE@1M3jF@2C3jC@2f3jDV2L72203Oa33j3@7L6C5101@4V2m12L023H3Oa33j3@7L3jH@7O2203jH@7O3jA@6m6C5100x391@1N3j6@7J2hA1W2373j6@7J2hH1W3I1123C3j6@7J2hY1W3I1123D3j6@7J2h@151W3I1123G3j6@7J2ht4g1002h@2T6C5101@5N6C5001@7A23A2j42hA2702343j1@7G3j3@7L1W2h@2W1W3j4@7M2h@1E3jC@2f2h@1F3jDV2h@2X3j7@7K2h42h43jC@2f3jDV3jG@7N2L62L12K32203Oa33j3@7L6C5101@4V2m12L023H3Oa33j3@7L3jH@7O2203jH@7O3jA@6m6C5100x3j0@7F3jA@6m2hA3j3@7L3j4@7M2h42h43jC@2f3jDV2L722039193j6@7J3j6@7J2h41W6C5001@7A2M72L26C61@1Y121u2Z%-292%1l1l1l2h42h@103Oa36C5001@7P1y2Y33jH@7O6C5000@662Z^41l1l1l2o0~AV@3K^1003a010<constructor>%2o0~7Fa^1@7R@3K@484ImageResources.ImageResourceManifest%~AV@49^1004b050<constructor>%2hW2hW2L234b02o0~AV@3L@6o112b140loadFromResources%3j0@5b3i9B6C23@3N1b2o1~AV@3M@6n112b140loadFromResourcesAsync%3j0@5b3i996C23@3N1b2o1~AV@3N@7T332b6Y0_initImpl%3j2@7S2c43j0@5b3I412ht2Q02bK2L02332h42h@153j0@5b1y2Y73j3@5v3j4z3j1@6s2hB6C23@3N1b6C5100x2Z^81l1l1l3j3@5v6C61@331U2o13j0@5b6C21@3I1a2353j5@6z3j1@6s6C62@3T1b2o1~AV@3O@6V111b4@120getImage%2N0182b32h@2Y6C61@361X1u2N22hW2Q12b52N22M@7U7C31@3R0bB2hW2623j0@6U2h96C22@3H1a2313j1@542hA1W2N42Q12b82h@2Z2N32702h@2a2703j0@6U6C62@341V1u2N53j1@542hH1W1W2323j1@542ht1W3j1@542h@1o1W2hB6C63@3G1Z2333j3y3j2@4b2M@4P35@4P03j3y3j1@542hY1W35@4e03j3y3j1@542h@151W35@4f03j3y2o1~AV@3P@6W001b0F0isDone%2N02b22h92o12N23Ob06C5100@7V3Ob02h41W2b22h92602N02o1~AV@3Q@6X001b0J0getProgress%2N02b22hc2o12N23Ob06C5100@7V3Ob02h41W2b42h92602hc2o13Ob02hA1W2o1~AV@3R@7b111bB@1N0_turnTilesIntoSheet%2N12h@2W1W2312L02322h42hY3j1@7W6C5001@391y2Y@113j1@7W3j3@7X1W2343j4@7Y2h@1E1W3j4@7Y2h@1F1W6C62@3G1Z2353j5@4b2M@4P2363j6@546C5000@4a2h42h@253j4@7Y2h@2X1W1y2YK3j7@5n2h41W2383j7@5n2hA1W2393j7@5n2hH1W23A3j6@543j0@7Z3j8@5b1W3j9@1M3jA@2C6C5300@4c2Z^L1l1l1l3j6@546C5000@4d3j2@7a2M73j3@7X27C2b43j2@7a2hW6C5100x2Z^93j2@7a3j3@7X3j5@4b2202Z%-64%1l1l1l3j2@7a2652h92602hW2612o0~AV@3S@6a001b050getFiles%3Oa32N41W6C5001@232o1~AV@3T^1223bA@1D0<constructor>%3j0@6z2613j0@6z2h@2U1W2633j0@6z2h@2V1W2643j0@6z2h@2W1W2322L02332h42h@153j2@7a6C5001@7P1y2Y63j3@5x3j4@7Y2h@2X1W6C5100@6G2Z^71l1l1l3j3@5x2M72663j1@6s2b53j3@5x6C61@3W1c6C5001@4k2622ZX2K02352h42h@1o3j3@5x1y2YL3j6@5n2h41W2373j6@5n2hY1W2383j6@5n2h@151W2393j5@7h3j7@7i3j7@7i3iB93j8@2f3j9V6C25@3B1Y2202Z^M1l1l1l3j5@7h7C31@3R0bB2o0~@15Fb^1@7c@3T@49100@6f0B01@7d0W02@7e0W03@7f0W04@6g0W05@7g0W06@6Y0W18@6V@3O019@6W@3P01A@6X@3Q01B@7b@3R01C@6a@3S0ImageResources.ImageSheet%~AV@3U@4k001c4V0load%2h42h42N01y2YL3j0@5n2h41W2313j0@5n2hY1W2323j0@5n2h@151W2332N23j1@7i3j1@7i3i993j2@2f3j3V6C25@3B1Y2202Z^M1l1l1l1t2o1~AV@3V@7V111c2x0getStatus%2N22M72h427D2bP2h42hA2N26C5001@391y2YG2N23j1@2x1W6C5001@6W2bA2N13j1@2x2N23j1@2x1W6C5001@6V2202N23j1@2x6C5100@2m2Z^H1l1l1l2N22M72h42Q02b93j0@7j2h42h92203j0@7j2hA2hc2202ZE3j0@7j2h42hB2203j0@7j2hA2hc2N12M72722N02M72732202o0~AV@3W^1113c130<constructor>%3j0@5x2602o0~WFc^1@7k@3W^1000@5x0W01@7U2002@7l2013@4k@3U014@7V@3V0ImageResources.ImageSheetLoaderAsync%~AV@4A^1004d030<constructor>%2h434d02o0~AV@3X@7m001d070updateResourceFingerprint%2N42h@2T2702N32702652o0~AV@3Y@4a001d080lock%2h92662N32hA2702637C30@3X0d72o0~AV@3Z@4d001d050unlock%1t5E@2b6102hB2662o0~AV@3a@4c331dF@280blit%3j0@2e2M@4P2333j3@7n6C5000@4Q7C30@3c0dC3j1@1M2343j2@2C2353j1@1M3j3@7n2M@2f2702363j2@2C3j3@7n2MV2702372h42382h42393j3@7n2M@2f23A3j3@7n2MV23B3j6@7r2h427B2eB3j7@7q2h427B2e73j5@7p2N227E2e33j4@7o2N127E2b12o03j6@7r2N127E2bC3j6@7r2N127123C2j63jC@7s2712362jA3jC@7s27123A3j7@7q2N227E2bC3j7@7q2N227123C2j73jC@7s2712372jB3jC@7s27123B3j4@7o2h427B2b93j4@7o1k23C2h42342j83jC@7s2702383j5@7p2h427B2b93j5@7p1k23C2h42352j93jC@7s2702393jA@7t3j8@7u27123D3jB@7v3j9@7w27123E3jD@3q2h42Q02e33jE@3s2h42Q02b12o01t3j3@7n3j4@7o3j5@7p3j8@7u3j9@7w3jD@3q3jE@3s5E@2c6802o0~AV@3b@4Q001d060verifyUnlocked%2N62b32h@2d6C61@1h1B1u2o0~AV@3c@7x001d070verifyLocked%2N6182b32h@2e6C61@1h1B1u2o0~AV@3d^1223d3q0<constructor>%3Od02P12hA27034d02643j0@823r7L3j1@162h41W2613j1@162hA1W262391C3j1@162h41W2323j2@7n2M@2f2613j2@7n2MV262391139103j0@822hA2Q12bH1t2N12N25E@2f6303j0@822hH2Q02b92N32hA2712637C30@3Y0d83j2@7n3i447C33@3a0dA7C30@3Z0d97C30@3X0d72o0~@15Fd^1@7y@3d@4A101@2f0W02V0W03@7z0404@800W05@4U0W06@810B17@7m@3X018@4a@3Y019@4d@3Z01A@4c@3a01B@4Q@3b01C@7x@3c0ImageResources.NativeImageData%6C10k002o06C12@1U002o0";