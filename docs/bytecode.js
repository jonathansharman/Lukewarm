C$bytecode = "CRAYON@#3YA2w#1pq&05LUKEWARM%303y303@Cu303@9g3030&05L U K E W A R M%&05Campaign%&05Dance, Dog%&05WASD to move, click to shoot, F2 to restart%302130313020303@1p303@1P303c303@1L303e3032303W303D303@6S303@4q303@3E303@2Q303@7G303@47303@24&05Time: %&05Health: %303K&05Score: %201&05Invalid argument.%3033&05Filter function returned a non-boolean value.%&05Can only get methods from an instance or class reference.%&040.434294481903252%&041%&041.4426950408@296%&09lib_random_random_float%&09lib_random_random_int%&05First argument must be a positive integer.%&05randomInt requires two integers, where the latter is larger.%&09lib_random_random_bool%&05Abstract method not overridden!%&040.02%&040%&045%&0418%&042%&048%&040.5%&046%&043%&0425%&0440%&0410%&0415%303@36&040.05%&040.1%&04-2%&05fonts/Lato-Bold.ttf%303m303G303H303X303Z&0430%&0411.25%&0422.5%30373035303@13303@163034&046.28318530717959%&09lib_game_getScreenInfo%&09lib_game_clock_tick%&09lib_game_pump_events%&05%&05Title cannot be empty.%&09lib_game_set_title%&05Title must be a string.%&05 must be a number.%&05width%&05height%&05FPS%&05screen %&05Cannot create multiple GameWindows.%&05 must be positive.%&09lib_game_initialize%&09lib_game_initialize_screen%303b&09lib_graphics2d_renderQueueAction%&09lib_graphics2d_renderQueueValidateArgs%&09lib_graphics2d_isOpenGlBased%&09lib_graphics2d_lineToQuad%&09lib_graphics2d_isPlatformUsingTextureAtlas%&09lib_graphics2d_initializeTextureResource%&09lib_graphics2d_initializeTexture%&09lib_graphics2d_addImageRenderEvent%&05Invalid arguments%3038303B303C303F&09lib_graphics2d_flip%&05Image dimensions must be non-zero integers.%&09lib_graphics2d_scale%&05:%&09lib_graphics2dtext_isGlRenderer%&05~0A%&05Expected a FontResource instance%&09lib_graphics2dtext_isResourceAvailable%&05Font resource not found: ~0d%&05~0d%&09lib_graphics2dtext_isSystemFontPresent%&05Font not installed: ~0d%&05 %&05~0D%3036303A&09lib_graphics2dtext_glSetNativeDataIntArray%303@GW&09lib_graphics2dtext_glGenerateAndLoadTexture%&09lib_graphics2dtext_glRenderCharTile%&05Could not render character (%&05)%&09lib_graphics2dtext_getNativeFontUniqueKey%&05|%&09lib_graphics2dtext_createNativeFont%303#2bI&05Error loading font resource.%&040.001%&09lib_graphics2dtext_isDynamicFontLoaded%&09lib_graphics2dtext_glRenderTextSurface%&09lib_graphics2dtext_simpleBlit%&09lib_graphics2dtext_renderText%&05Resource ~0d{0}~0d is not included in this sheet.%&05{0}%&05Loading is not finished.%&05Image has already been constructed.%&09lib_imageresources_checkLoaderIsDone%&05Error encountered while loading image.%&09lib_imageresources_yieldRequiredByPlatform%&040.01%&09lib_imageresources_loadAsynchronous%&040.005%&041.2%&09lib_imageresources_loadSynchronous%&05Image load failed%&05Image resource ~0d{0}~0d not found.%&05~0d must be loaded as an ImageSheet.%&05~1U%&05/%&05Resource ~0d{0}~0d does not exist.%&05Resource ~0d{0}~0d is standalone and not included in an image sheet.%&05Image sheet ID must be a string%&05Image sheet with ID of ~0d{0}~0d not found.%&09lib_imageresources_getManifestString%&05,%&05name%&05id%&05chunks%&05tiles%&05Cannot load image from sheet that is not finished loading.%&05Image sheet ~0d%&05~0d does not contain resource: ~0d{0}~0d%&09lib_imageresources_flushImageChanges%&09lib_imageresources_blit%&05Image resource is locked and cannot be used.%&05Image resource must be locked.%&09lib_imageresources_nativeImageDataInit%!1render%!1pumpEvents%!1window%!1eventList%!1i%!1event%!1type%!1length%!1gameState%!1menuChoice%!1env%!1characters%!1draw%!1alignMiddle%!1alignCenter%!1setPos%!1setImage%!1titleImage%!1alignBottom%!1campaignImage%!1alignTop%!1danceDogImage%!1setBgColor%!1campaignDrawing%!1danceDogDrawing%!1instructionsImage%!1update%!1totalTime%!1timeImage%!1health%!1healthImage%!1height%!1charge%!1pos%!1shoot%!1sources%!1target%!1gameOver%!1scoreImage%!1clockTick%!1programRunning%!1main%!1condition%!1message%!1assert%!1fail%!1value%!1chr%!1currentTime%!1ord%!1parseFloat%!1parseInt%!1print%!1seconds%!1sleep%!1typeof%!1isString%!1isNumber%!1list%!1fp%!1_LIB_CORE_list_sort_by_key%!1add%!1output%!1t%!1_LIB_CORE_list_map%!1b%!1_LIB_CORE_list_filter%!1getCurrentExecutionToken%!1getExecutionIterationCounter%!1getProjectId%!1args%!1_LIB_CORE_invoke%!1_LIB_CORE_generateException%!1instance%!1getClassFromInstance%!1commonBaseClass%!1isA%!1c%!1filtered%!1getClasses%!1instanceOrClass%!1getMethods%!1ratio%!1arccos%!1arcsin%!1ratio_or_y%!1x%!1arctan%!1theta%!1cos%!1floor%!1sin%!1tan%!1log10%!1ln%!1log2%!1abs%!1a%!1max%!1min%!1minBound%!1maxBound%!1ensureRange%!1num%!1sign%!1randomFloat%!1maxExcl%!1minIncl%!1randomInt%!1msg%!1_randomIntErrorHelper%!1randomBool%!1d%!1n%!1randomChance%!1control%!1isPlayerControlled%!1Agent%!1character%!1normalize%!1minus%!1heading%!1plus%!1times%!1weapon%!1use%!1bulletPos%!1vel%!1isZero%!1agent%!1clone%!1getTarget%!1AI%!1direction%!1speed%!1timeStep%!1that%!1v%!1radius%!1y%!1p1%!1p2%!1collisionRadiusSquared%!1roots%!1collidesWith%!1lengthSquared%!1point%!1contains%!1Body%!1trail%!1Bullet%!1initialPos%!1color%!1r%!1g%!1weaponPos%!1weaponVel%!1thrownWeapons%!1thrownWeapon%!1throwWeapon%!1droppedWeapons%!1droppedWeapon%!1dropWeapon%!1Character%!1black%!1gray%!1silver%!1white%!1red%!1Color%!1alignLeft%!1alignRight%!1image%!1width%!1left%!1top%!1Drawing%!1hAlign%!1vAlign%!1bgColor%!1deceleration%!1normalized%!1DroppedWeapon%!1remove%!1j%!1bearer%!1activeCooldown%!1playerAlive%!1playerAcceleratedTime%!1body%!1outOfBounds%!1from%!1to%!1bulletVel%!1Environment%!1bullets%!1movementTimeStep%!1bulletTimeStep%!1setSize%!1setColor%!1getRenderer%!1Font%!1key%!1pressed%!1released%!1down%!1up%!1Input%!1cooldown%!1Weapon%!1unlimitedAmmo%!1Pistol%!1ammo%!1equals%!1Player%!1clear%!1Set%!1keys%!1ThrownWeapon%!1shuffle%!1determinant%!1getQuadraticRoots%!1randomAngle%!1angle%!1randomUnitVector%!1Util%!1zero%!1k%!1dividedBy%!1l%!1result%!1Vec2%!1Object%!1getTrace%!1Exception%!1cause%!1FatalException%!1m%!1AssertionFailedException%!1DivisionByZeroException%!1IndexOutOfRangeException%!1InvalidArgumentException%!1InvalidAssignmentException%!1InvalidInvocationException%!1InvalidKeyException%!1InvalidOperationException%!1KeyNotFoundException%!1NotImplementedException%!1NullReferenceException%!1UnassignedVariableException%!1UnknownFieldException%!1UnsupportedOperationException%!1Event%!1getScreenInfo%!1e%!1len%!1title%!1setTitle%!1GameWindow%!1_w%!1_h%!1fps%!1screenWidth%!1w%!1screenHeight%!1h%!1KeyEvent%!1MouseEvent%!1MouseClickEvent%!1button%!1MouseMoveEvent%!1MouseScrollEvent%!1amount%!1QuitEvent%!1quitType%!1_renderer%!1_rendererReset%!1ellipse%!1strokeWidth%!1startY%!1endY%!1startX%!1endX%!1line%!1rectangle%!1ax%!1ay%!1bx%!1by%!1cx%!1cy%!1triangle%!1dx%!1dy%!1quad%!1fill%!1Draw%!1imageResource%!1_nativeResource%!1verifyUnlocked%!1atlasNativeResource%!1_width%!1_height%!1resourceFingerprint%!1get%!1textureResource%!1newWidth%!1newHeight%!1atlasDummyWrapper%!1lock%!1img%!1blit%!1unlock%!1_x%!1_y%!1tfw%!1tfh%!1texture%!1textureCoords%!1load%!1walker%!1_nextPowerOf2%!1alpha%!1drawWithAlpha%!1sx%!1sy%!1drawRegion%!1drawStretched%!1sh%!1sw%!1th%!1tw%!1tx%!1ty%!1drawRegionStretched%!1drawRegionStretchedWithAlpha%!1drawRotated%!1drawRotatedWithAlpha%!1drawWithOptions%!1res%!1newRes%!1_createResCopy%!1flip%!1ver%!1hor%!1scale%!1GraphicsTexture%!1_graphicsTextureResource%!1ref%!1GraphicsTextureResource%!1FontNotFoundException%!1green%!1blue%!1size%!1style%!1setStyle%!1_sourceType%!1_source%!1join%!1text%!1textureKey%!1FontRenderer%!1font%!1_native%!1_settingsKey%!1_glRenderer%!1sourceType%!1source%!1_getKey%!1_get%!1path%!1fromResource%!1fromDisk%!1name%!1fromSystem%!1isSystemFontPresent%!1getDefaultSerifFont%!1getDefaultSansSerifFont%!1getDefaultMonospaceFont%!1FontResource%!1sourceId%!1renderer%!1nativeFont%!1charIds%!1charId%!1tile%!1newTiles%!1xs%!1leftMargin%!1ys%!1tileList%!1effectiveWidth%!1lastTile%!1sheets%!1sheet%!1tiles%!1textSurfaceWithNativeData%!1sizeOut%!1renderText%!1consolidate%!1GLRenderer%!1sheetByCharId%!1tileByCharId%!1spaceWidth%!1sort%!1rows%!1row%!1tileIndex%!1tilesLength%!1rowCount%!1makeSheets%!1sortByWidthKeyFunction%!1GLTextureSheet%!1tilesByCharId%!1concat%!1sheetX%!1sheetY%!1currentTextureId%!1GLTile%!1lastUsed%!1id%!1getUniqueKey%!1NativeFont%!1status%!1_refreshGlRenderer%!1TextSurface%!1_isGl%!1fontRenderer%!1resourcePath%!1getImage%!1isDone%!1getProgress%!1_weight%!1progress%!1getFiles%!1AggregatedImageSheet%!1_sheetsById%!1_orderedSheets%!1_ids%!1_isLoaded%!1_id%!1ImageNotFoundException%!1replace%!1template%!1SheetNotFoundException%!1LoadFailedException%!1filename%!1loadFromResourcesAsync%!1loadFromResources%!1isGen%!1data%!1nativeImage%!1isAsync%!1loader%!1_nativeImage%!1delay%!1reverse%!1statusOut%!1_loadImpl%!1info%!1getGenName%!1ImageLoader%!1_executionIterationCount%!1_isDoneChecksOnThisFrame%!1_isDone%!1_output%!1getWidth%!1getHeight%!1ImageResource%!1init%!1trim%!1nkey%!1sheetOnly%!1getFileInfo%!1getSheetInfo%!1resourceInfo%!1sheetInfo%!1split%!1manifest%!1parts%!1genFilename%!1activeSheetId%!1activeChunkId%!1bytes%!1files%!1values%!1ensureInitialized%!1ImageResourceManifest%!1allowLists%!1_initImpl%!1completed%!1getStatus%!1chunkMetadata%!1chunkId%!1chunk%!1tilesByName%!1chunks%!1_turnTilesIntoSheet%!1ImageSheet%!1_info%!1_loader%!1_name%!1_chunks%!1lookup%!1genName%!1out%!1ImageSheetLoaderAsync%!1inProgress%!1updateResourceFingerprint%!1other%!1targetLeft%!1targetTop%!1targetBottom%!1targetRight%!1diff%!1sourceRight%!1sourceLeft%!1sourceBottom%!1sourceTop%!1verifyLocked%!1NativeImageData%!1revisionId%!1resourceId%!1_locked%!1instruction%5v0D0r5v1EUr5v2EEr5v3E8r5v4GDr5v5GBr5v6HEr5v7HWr5v8HVr5v9HCr5vAIHr5vBIZr5vCIYr5vDIFr5vEJHr5vFJZr5vGJYr5vHJFr5vIKLr5vJKdr5vKKcr5vLKJr5vMLEr5vNLCr5vONIr5vPNGr5vQO8r5vRO8r5vSPEr5vTPVr5vUPCr5vVQFr5vWQEr5vXRBr5vYR9r5vZREr5vaRIr5vbRRr5vcRGr5vdREr5veSBr5vfSLr5vgSKr5vhS9r5viT7r5vjTCr5vkTLr5vlTIr5vmT7r5vnULr5voUJr5vpRar5vqRbr5vrRbr5vsRar5vuYKr5vvYJr5vwY6r5vxaFr5vyaDr5vzdAr5v@10d2r5v@11fMr5v@12fLr5v@13fhr5v@14fyr5v@15fxr5v@16f8r5v@17g7r5v@18g5r5v@19g5r5v@1Ag7r5v@1BiMr5v@1CiLr5v@1Dijr5v@1Ei@10r5v@1Fizr5v@1Gi8r5v@1Hj7r5v@1Ij5r5v@1Jj5r5v@1Kj7r5v@1Ll4r5v@1MlIr5v@1NlFr5v@1Ol4r5v@1PnMr5v@1QnLr5v@1Rnkr5v@1Sn@11r5v@1Tn@10r5v@1Un8r5v@1VoDr5v@1Wo5r5v@1XrJr5v@1YrHr5v@1ZsHr5v@1asBr5v@1bt7r5v@1cuOr5v@1duXr5v@1euqr5v@1fulr5v@1guEr5v@1hvOr5v@1ivXr5v@1jvmr5v@1kvhr5v@1lvEr5v@1mwOr5v@1nwXr5v@1owmr5v@1pwhr5v@1qwEr5v@1rxOr5v@1sxXr5v@1txmr5v@1uxhr5v@1vxEr5v@1wyOr5v@1xyXr5v@1yymr5v@1zyhr5v@20yEr5v@21u8r5v@22tMr5v@23@107r5v@24@13Jr5v@25@13Hr5v@26@14Hr5v@27@14Br5v@28@157r5v@29@15dr5v@2A@15mr5v@2B@15@15r5v@2C@15@10r5v@2D@15Tr5v@2E@15Or5v@2F@15Mr5v@2G@16Gr5v@2H@16Er5v@2I@17Ir5v@2J@17Gr5v@2K@187r5v@2L@1CPr5v@2M@1COr5v@2N@1E8r5v@2O@1FFr5v@2P@1FEr5v@2Q@1GDr5v@2R@1GCr5v@2S@1HHr5v@2T@1IHr5v@2U@1JAr5v@2V@1LQr5v@2W@1MFr5v@2X@1MEr5v@2Y@1NDr5v@2Z@1NCr5v@2a@1OHr5v@2b@1PHr5v@2c@1LKr5v@2d@1RQr5v@2e@1SFr5v@2f@1SEr5v@2g@1TDr5v@2h@1TCr5v@2i@1UHr5v@2j@1VEr5v@2k@1RKr5v@2l@1XCr5v@2m@1X4r5v@2n@1Z6r5v@2o@1Zhr5v@2p@1Zgr5v@2q@1ZWr5v@2r@1a6r5v@2s@1c6r5v@2t@1chr5v@2u@1cgr5v@2v@1cWr5v@2w@1d6r5v@2x@1g4r5v@2y@1gOr5v@2z@1h4r5v@30@1hOr5v@31@1k8r5v@32@1lFr5v@33@1lEr5v@34@1mDr5v@35@1mCr5v@36@1nHr5v@37@1oHr5v@38@1pAr5v@39@1r4r5v@3A@1u4r5v@3B@1uCr5v@3C@1x4r5v@3D@1xEr5v@3E@20Gr5v@3F@20Yr5v@3G@20ur5v@3H@20xr5v@3I@20tr5v@3J@20hr5v@3K@20Xr5v@3L@20Er5v@3M@218r5v@3N@22Fr5v@3O@22Er5v@3P@23Dr5v@3Q@23Cr5v@3R@24Tr5v@3S@24Sr5v@3T@24Gr5v@3U@25Ar5v@3V@288r5v@3W@28Br5v@3X@28Mr5v@3Y@28Wr5v@3Z@28Ur5v@3a@288r5v@3b@29Jr5v@3c@29Zr5v@3d@29mr5v@3e@29pr5v@3f@29@11r5v@3g@29@10r5v@3h@29@13r5v@3i@29kr5v@3j@29Yr5v@3k@29Hr5v@3l@2A9r5v@3m@2BGr5v@3n@2BFr5v@3o@2CEr5v@3p@2CHr5v@3q@2CQr5v@3r@2CDr5v@3s@2DUr5v@3t@2DTr5v@3u@2DHr5v@3v@2EBr5v@3w@2G4r5v@3x@2I6r5v@3y@2I4r5v@3z@2I4r5v@40@2I6r5v@41@2J8r5v@42@2JHr5v@43@2JFr5v@44@2J8r5v@45@2K5r5v@46@2KFr5v@47@2KCr5v@48@2K5r5v@49@2MEr5v@4A@2MHr5v@4B@2MSr5v@4C@2Mcr5v@4D@2Mar5v@4E@2MEr5v@4F@2N8r5v@4G@2NBr5v@4H@2NNr5v@4I@2NMr5v@4J@2NPr5v@4L@2OYr5v@4M@2OXr5v@4N@2O@10r5v@4O@2Ozr5v@4P@2OCr5v@4Q@2MCr5v@4R@2RYr5v@4S@2RXr5v@4T@2Rjr5v@4U@2RCr5v@4V@2SHr5v@4W@2Sfr5v@4X@2Ser5v@4Y@2SCr5v@4Z@2TYr5v@4a@2TXr5v@4b@2Tjr5v@4c@2TCr5v@4d@2UHr5v@4e@2Ubr5v@4f@2Uar5v@4g@2UCr5v@4h@2R6r5v@4i@2QDr5v@4j@2W5r5v@4k@2WFr5v@4l@2Wer5v@4m@2Whr5v@4n@2Wor5v@4o@2Wdr5v@4p@2WMr5v@4q@2Wzr5v@4r@2WEr5v@4s@2a4r5v@4t@2aEr5v@4u@2d9r5v@4v@2d8r5v@4w@2dIr5v@4x@2dLr5v@4y@2dOr5v@4z@2dZr5v@50@2dkr5v@51@2dhr5v@52@2d8r5v@53@2eIr5v@54@2eZr5v@55@2ewr5v@56@2ezr5v@57@2evr5v@58@2ejr5v@59@2eYr5v@5A@2eGr5v@5B@2fGr5v@5C@2fEr5v@5D@2j4r5v@5E@2jCr5v@5F@2mGr5v@5G@2mYr5v@5H@2mur5v@5I@2mxr5v@5J@2mtr5v@5K@2mhr5v@5L@2mXr5v@5M@2mEr5v@5N@2n8r5v@5O@2oFr5v@5P@2oEr5v@5Q@2pDr5v@5R@2pCr5v@5S@2qTr5v@5T@2qSr5v@5U@2qGr5v@5V@2rAr5v@5W@2u8r5v@5X@2u8r5v@5Y@2w9r5v@5Z@2xGr5v@5a@2xFr5v@5b@2yEr5v@5c@2yHr5v@5d@2yQr5v@5e@2yDr5v@5f@2zUr5v@5g@2zTr5v@5h@2zHr5v@5i@30Br5v@5k@33Jr5v@5l@33Zr5v@5m@33mr5v@5n@33pr5v@5o@33@11r5v@5p@33@10r5v@5q@33@13r5v@5r@33kr5v@5s@33Yr5v@5t@33Hr5v@5u@349r5v@5v@35Gr5v@5w@35Fr5v@5x@36Er5v@5y@36Hr5v@5z@36Qr5v@60@36Dr5v@61@37Ur5v@62@37Tr5v@63@37Hr5v@64@38Br5v@65@3A4r5v@66@3D2r5v@67@3DIr5v@69D0r5v@6AG425v@6BGf25v@6CGV25v@6DHT25v@6EHe25v@6FHn25v@6GHF25v@6HH825v@6IK425v@6JLT25v@6KLa25v@6LLj25v@6MLF25v@6NL825v@6OO425v@6PPQ25v@6QPF25v@6RP825v@6SS425v@6TTF25v@6UT825v@6VW425v@6WXQ25v@6XXF25v@6YX825v@6Za425v@6abX25v@6bbF25v@6cb825v@6de425v@6efV25v@6ffF25v@6gf825v@6hi425v@6ijS25v@6jjF25v@6kj825v@6lm425v@6moQ25v@6noC25v@6oo@1925v@6ppC25v@6qpN25v@6rpK25v@6spQ25v@6tHn25v@6unJ25v@6vqS25v@6wqF25v@6xq825v@6yt425v@6zuS25v@70uF25v@71u825v@72x425v@73yT25v@74yF25v@75y825v@76@11425v@77@12T25v@78@12F25v@79@12825v@7A@15425v@7B@16C25v@7C@16G25v@7D@16Q25v@7E@16O25v@7F@16C25v@7G@17S25v@7H@17r25v@7I@17v25v@7J@17q25v@7K@17C25v@7L@15425v@7M@1B425v@7N@1CH25v@7O@1CF25v@7R@1DH25v@7S@1DH25v@7T@1D825v@7U@1EC25v@7V@1EN25v@7W@1EQ25v@7X@1EP25v@7Y@1EM25v@7d@1GF25v@7e@1G825v@7f@1J425v@7g@1KH25v@7h@1KF25v@7k@1LH25v@7l@1LH25v@7m@1L825v@7n@1MG25v@7o@1MJ25v@7p@1MI25v@7q@1ME25v@7r@1NV25v@7s@1NH25v@7t@1NG25v@7u@1NG25v@7vLT25v@7w@1OQ25v@7xLj25v@7y@1OP25v@7z@1QG25v@80@1QG25v@81@1RG25v@82@1RR25v@83@1RQ25v@88@1UF25v@89@1U825v@8A@1X425v@8B@1YF25v@8C@1Y825v@8D@1b425v@8E@1cF25v@8F@1c825v@8G@1f425v@8H@1gF25v@8I@1g825v@8J@1k425v@8K@1oF25v@8L@1oI25v@8M@1oH25v@8N@1o825v@8OO435v@8PPG35v@8QP835v@8RQ@1435v@8SQp35v@8TQf35v@8UR@1P35v@8VR@1035v@8WRq35v@8XS@1O35v@8YS@1035v@8ZSq35v@8aT@1R35v@8bT@1235v@8cTs35v@8dU@1P35v@8eU@1035v@8fUq35v@8gV@1T35v@8hV@1235v@8iVs35v@8jW@1T35v@8kW@1235v@8lWs35v@8mX@1F35v@8nXv35v@8oXl35v@8pY@1I35v@8qYx35v@8rYn35v@8sZ@1L35v@8tZy35v@8uZo35v@8va@1V35v@8wa@1335v@8xat35v@8yb@1J35v@8zbx35v@90bn35v@91c@1Z35v@92c@1535v@93cv35v@94df35v@95dV35v@96dL35v@97O435v@984845v@996g45v@9A6J45v@9B6C45v@9C9845v@9D9k45v@9E9S45v@9FAL45v@9GAJ45v@9HBG45v@9IBZ45v@9JBW45v@9KBG45v@9LCR45v@9MCP45v@9PDP45v@9QDP45v@9RDG45v@9SEO45v@9TEU45v@9UET45v@9VEO45v@9WFO45v@9XFb45v@9YFa45v@9dIN45v@9eIG45v@9fKJ45v@9gKC45v@9hN845v@9iOW45v@9jOV45v@9kOC45v@9lSq45v@9mSR45v@9nSK45v@9oUy45v@9pUU45v@9qUK45v@9rN845v@9s5465v@9t7T65v@9u7F65v@9v7865v@9wA465v@9xCT65v@9yCF65v@9zC865v@A0F465v@A1Fa65v@A2FW65v@A3GT65v@A4Gf65v@A5GF65v@A6G865v@A7J465v@A8KQ65v@A9KF65v@AAK865v@ABN465v@ACOS65v@ADOF65v@AEO865v@AFR465v@AGSQ65v@AHSF65v@AIS865v@AJV465v@AKWQ65v@ALWF65v@AMW865v@ANc465v@AOdP65v@APdW65v@AQdF65v@ARd865v@ASf465v@ATgP65v@AUgW65v@AVgF65v@AWg865v@AXi465v@AYjP65v@AZjW65v@AajF65v@Abj865v@Aco465v@AdpQ65v@AepF65v@Afp865v@Ags465v@AhtQ65v@AitT65v@AjtF65v@Akt865v@Alw465v@AmxQ65v@AnxT65v@AoxF65v@Apx865v@Aq@10465v@Ar@11Y65v@As@11f65v@At@11p65v@Au@11F65v@Av@11865v@Aw@14465v@Ax@15R65v@Ay@15F65v@Az@15865v@B03485v@B14F85v@B24885v@B38485v@B48g85v@B58W85v@B69G85v@B79R85v@B89O85v@B99G85v@BAAd85v@BBAg85v@BCAF85v@BDAF85v@BEBm85v@BFBl85v@BHCd85v@BICm85v@BJCF85v@BKCF85v@BLDm85v@BMDl85v@BN9885v@BOG485v@BPHm85v@BQHI85v@BRH885v@BSG485v@BTK485v@BUNF85v@BVN885v@BWV485v@BXVX85v@BYVT85v@BZWF85v@BaWj85v@BbWh85v@BcWn85v@BdWl85v@BeW885v@Bf3105v@Bg4M05v@Bh4C05v@Bi4205v@Bj3105v@Bk8105v@Bl9M05v@Bm9C05v@Bn9205v@Bo8105v@Br1005v@BsE155v@BtG655v@BuGF55v@BvGJ55v@BwGU55v@BxGe55v@ByGc55v@BzG655v@C0HR55v@C1HQ55v@C2HA55v@C3I355v@C4IN55v@C5Ia55v@C6Ij55v@C7IZ55v@C8Iy55v@C9IL55v@CALO55v@CBLT55v@CCLR55v@CDL655v@CEMa55v@CFMI55v@CGOO55v@CHOT55v@CIOR55v@CJO655v@CKPG55v@CLPT55v@CMPR55v@CNPG55v@COPZ55v@CQPf55v@CRPE55v@CSRO55v@CTRT55v@CURR55v@CVR655v@CWT755v@CXTG55v@CYTK55v@CZTV55v@CaTg55v@CbTd55v@CcT755v@CdUS55v@CeUR55v@CfUB55v@CgV455v@ChVO55v@CiVb55v@CjVk55v@CkVa55v@ClVz55v@CmVM55v@CnYF55v@CoYO55v@CpYY55v@CqYh55v@CrYw55v@CsYv55v@CtYX55v@CuYD55v@Cva755v@CwaG55v@CxaR55v@CyaO55v@Cza755v@D0b455v@D1bD55v@D2bP55v@D3ba55v@D4bi55v@D5bO55v@D6f255v@D7fa55v@D8fZ55v@D9f@1055v@DAfz55v@DBfM55v@DCf@1N55v@DDf@1M55v@DEfG55v@DFh755v@DGhG55v@DHhR55v@DIh655v@DJh655v@DKE155v@DLl155v@DMle55v@DNlX55v@DOn155v@DPoG55v@DQoE55v@DRpB55v@DSp955v@DTqB55v@DUq955v@DVqE55v@DWqI55v@DXqR55v@DYqV55v@DZqg55v@DaqG55v@DbqE55v@Dcs755v@DdsG55v@DesK55v@DfsW55v@DgsV55v@DhsY55v@Disx55v@Djs755v@DktB55v@DltK55v@DmtO55v@Dnta55v@DotZ55v@Dptc55v@Dqtm55v@Drt455v@Dsw755v@DtwG55v@DuwK55v@DvwW55v@DwwV55v@Dxwc55v@DywZ55v@Dzwm55v@E0wp55v@E1wz55v@E2ww55v@E3w755v@E4xD55v@E5xM55v@E6xQ55v@E7xc55v@E8xb55v@E9xe55v@EAxB55v@EBqr55v@ECqp55v@EDqp55v@EEqr55v@EG@11955v@EH@11J55v@EI@11G55v@EJ@11955v@EK@12V55v@EL@12U55v@EM@12x55v@EN@12w55v@EO@12955v@EQ@13555v@ER@13H55v@ES@11255v@ETC155v@EUCH55v@EV9Z55v@EW9155v@EY8055v@EZC195v@EaDD95v@EbDR95v@EcDg95v@EdDf95v@EeDQ95v@EfDB95v@EgC195v@EhJ195v@EiL695v@EjLA95v@EkLL95v@ElLK95v@EmL495v@EnM695v@EoME95v@EpM695v@EqNA95v@ErN395v@EsQS95v@EtQg95v@EuQk95v@EvQe95v@EwQw95v@ExQt95v@EyQP95v@EzT795v@F0T595v@F1U795v@F2UB95v@F3U595v@F4V695v@F5V795v@F6VD95v@F7VA95v@F8VH95v@F9VI95v@FAVO95v@FBVL95v@FCVF95v@FDV495v@FEW695v@FFWB95v@FGWD95v@FHWI95v@FIWJ95v@FJWG95v@FKWO95v@FLWP95v@FMWU95v@FNWW95v@FOWS95v@FPWM95v@FQWb95v@FRWd95v@FSWi95v@FTWj95v@FUWg95v@FVWZ95v@FWWo95v@FXWp95v@FYWu95v@FZWw95v@FaWs95v@FbWm95v@FcW895v@FdW495v@FeX695v@FfX895v@FgXE95v@FhXB95v@FiXI95v@FjXK95v@FkXQ95v@FlXN95v@FmXG95v@FnXU95v@FoXY95v@FpXa95v@FqXW95v@FrXf95v@FsXh95v@FtXd95v@FuXS95v@FvXm95v@FwXo95v@FxXu95v@FyXr95v@FzXk95v@G0Xy95v@G1X@1095v@G2X@1695v@G3X@1395v@G4Xw95v@G5X@1A95v@G6X@1E95v@G7X@1G95v@G8X@1C95v@G9X@1L95v@GAX@1N95v@GBX@1J95v@GCX@1895v@GDX@1S95v@GEX@1Q95v@GFX495v@GGaX95v@GHaa95v@GIad95v@GJaW95v@GKa895v@GLb695v@GMbB95v@GNbM95v@GObJ95v@GPb695v@GQcA95v@GRc395v@GTdD95v@GUdI95v@GVdT95v@GWdQ95v@GXdD95v@GYeA95v@GZeH95v@GaeN95v@GbeM95v@GceE95v@GdeQ95v@GeeT95v@GfeZ95v@GgeY95v@Ghef95v@Giec95v@Gje395v@GlgB95v@GmgI95v@GngO95v@GogN95v@GpgF95v@GqgR95v@GrgU95v@Gsga95v@GtgZ95v@Gugg95v@Gvgd95v@Gwgq95v@Gxgu95v@Gyg@1195v@Gzg@1795v@H0g@1695v@H1gy95v@H2g@1A95v@H3g@1D95v@H4g@1J95v@H5g@1I95v@H6g@1P95v@H7g@1M95v@H8g395v@H9J195v@HAl195v@HBm995v@HCmO95v@HDmN95v@HEmi95v@HFmn95v@HGm@1295v@HHmz95v@HIml95v@HJm295v@HK6195v@HL7D95v@HM7B95v@HN8D95v@HO8B95v@HP9G95v@HQ9E95v@HS1095v@HTH1A5v@HUIAA5v@HVIPA5v@HWIeA5v@HXIdA5v@HYIOA5v@HZI8A5v@HaJ6A5v@HbJLA5v@HcJKA5v@HdJpA5v@HeJuA5v@HfJ@19A5v@HgJ@18A5v@HhJ@1TA5v@HiJsA5v@HjJ6A5v@HkKBA5v@HlK9A5v@HmNGA5v@HnNOA5v@HoNTA5v@HpNRA5v@HqNFA5v@HrOGA5v@HsOOA5v@HtOTA5v@HuORA5v@HvOFA5v@HwPGA5v@HxPLA5v@HyPQA5v@HzPOA5v@I0PFA5v@I1QGA5v@I2QLA5v@I3QQA5v@I4QOA5v@I5QFA5v@I6R5A5v@I7N3A5v@I8wgC5v@I9xGC5v@IAVGA5v@IBVOA5v@ICVTA5v@IDVRA5v@IEVhA5v@IFVfA5v@IGVFA5v@IHWGA5v@IIWOA5v@IJWTA5v@IKWRA5v@ILWhA5v@IMWfA5v@INWFA5v@IOX5A5v@IPXBA5v@IQX9A5v@IRY5A5v@ISYBA5v@ITY9A5v@IUZ5A5v@IVZ8A5v@IWZBA5v@IXv@19C5v@IYV3A5v@IZH1A5v@IaD1A5v@IbDUA5v@IcDZA5v@IdDeA5v@IeDPA5v@IfEKA5v@IgETA5v@IhEIA5v@IjA0A5v@IkK1a5v@IlLEa5v@ImLDa5v@InO6a5v@IoOEa5v@IpOJa5v@IqOHa5v@IrO6a5v@IsP3a5v@ItPGa5v@IuPEa5v@IwQDa5v@IxQLa5v@IyQQa5v@IzQYa5v@J0QWa5v@J1QOa5v@J2QDa5v@J3R3a5v@J4RGa5v@J5ROa5v@J6RMa5v@J7REa5v@J8T6a5v@J9TEa5v@JATJa5v@JBTHa5v@JCT6a5v@JDU3a5v@JEUGa5v@JFUEa5v@JHVDa5v@JIVLa5v@JJVQa5v@JKVYa5v@JLVWa5v@JMVOa5v@JNVDa5v@JOW3a5v@JPWGa5v@JQWOa5v@JRWMa5v@JSWEa5v@JTZ6a5v@JUZLa5v@JVZIa5v@JWZ6a5v@JXa3a5v@JYaMa5v@JZaLa5v@Jad2a5v@JbdLa5v@JcdKa5v@JdK1a5v@Jeg1a5v@JfhAa5v@Jghda5v@JhhAa5v@Jihta5v@Jkh@17a5v@Jlh8a5v@JmwgC5v@JnxGC5v@JojGa5v@JpjOa5v@JqjTa5v@JrjRa5v@Jsjha5v@Jtjfa5v@JujFa5v@JvkGa5v@JwkOa5v@JxkTa5v@JykRa5v@Jzkha5v@K0kfa5v@K1kFa5v@K2l5a5v@K3lBa5v@K4l9a5v@K5m5a5v@K6mBa5v@K7m9a5v@K8n5a5v@K9nAa5v@KAnEa5v@KBnJa5v@KCnNa5v@KDnSa5v@KEv@19C5v@KFj3a5v@KGq6a5v@KHqLa5v@KIqIa5v@KJq6a5v@KKr3a5v@KLrJa5v@KMg1a5v@KNw1a5v@KOy6a5v@KPyLa5v@KQyIa5v@KRy6a5v@KSzFa5v@KTzTa5v@KUzma5v@KVzla5v@KWzSa5v@KXzDa5v@KY@10Fa5v@KZ@10Ya5v@Ka@10Xa5v@Kb@10Da5v@Kc@11Za5v@Kd@11ma5v@Ke@11xa5v@Kf@11Ma5v@Kg@11Ga5v@Kh@12Ha5v@Ki@12Fa5v@Kj@133a5v@Kk@13Ba5v@Kl@13Ua5v@Km@13Ta5v@Knw1a5v@Ko@181a5v@Kp@196a5v@Kq@19La5v@Kr@19Ia5v@Ks@196a5v@Kt@1Aaa5v@Ku@1ADa5v@Kv@1BFa5v@Kw@1BTa5v@Kx@1Bja5v@Ky@1Bia5v@Kz@1BSa5v@L0@1BDa5v@L1@1CFa5v@L2@1CVa5v@L3@1CUa5v@L4@1CDa5v@L5@1Dba5v@L6@1Doa5v@L7@1Dza5v@L8@1DNa5v@L9@1DHa5v@LA@1EHa5v@LB@1EFa5v@LC@1F3a5v@LD@1FBa5v@LE@1FVa5v@LF@1FUa5v@LG@181a5v@LHE1a5v@LIEba5v@LJEpa5v@LKEta5v@LLEWa5v@LMAQa5v@LNALa5v@LOA1a5v@LPFDa5v@LQFBa5v@LRGFa5v@LSGDa5v@LTHRa5v@LUHKa5v@LVHEa5v@LX70a5v@LYE8b5v@LZERb5v@LaENb5v@LbEpb5v@LcEyb5v@LdEjb5v@LeEYb5v@LfF8b5v@LgFQb5v@LhFMb5v@LiFob5v@LjF@13b5v@LkFib5v@LlFXb5v@LmG8b5v@LnGSb5v@LoGOb5v@LpGqb5v@LqG@15b5v@LrGkb5v@LsGZb5v@LtH8b5v@LuHRb5v@LvHNb5v@LwHpb5v@LxH@14b5v@LyHjb5v@LzHYb5v@M0I8b5v@M1IPb5v@M2ILb5v@M3Inb5v@M4Iyb5v@M5Ihb5v@M6IWb5v@M771b5v@M87Qb5v@M97Mb5v@MA8Bb5v@MB89b5v@MC9Bb5v@MD99b5v@MEABb5v@MFA9b5v@MGBBb5v@MHB9b5v@MJ10b5v@MKC1c5v@MLDBc5v@MMD9c5v@MNEBc5v@MOE9c5v@MPF9c5v@MQF2c5v@MRI1c5v@MSJGc5v@MTJEc5v@MUK9c5v@MVK2c5v@MWM1c5v@MXNGc5v@MYNEc5v@MZO9c5v@MaO2c5v@MbQ1c5v@McRGc5v@MdREc5v@MeS9c5v@MfS2c5v@MgV1c5v@MhWGc5v@MiWEc5v@MjX9c5v@MkX2c5v@MlZ1c5v@MmaGc5v@MnaEc5v@Mob9c5v@Mpb2c5v@Mqd1c5v@MreGc5v@MseEc5v@Mtf9c5v@Muf2c5v@Mvi1c5v@MwjHc5v@MxjFc5v@Myk9c5v@Mzk2c5v@N0n1c5v@N1oFc5v@N2oDc5v@N3p9c5v@N4p2c5v@N5s1c5v@N6t9c5v@N7tTc5v@N8tdc5v@N9tmc5v@NAtkc5v@NBtSc5v@NCtGc5v@NDt7c5v@NEu8c5v@NFuSc5v@NGucc5v@NHumc5v@NIukc5v@NJuRc5v@NKuFc5v@NLu6c5v@NMv6c5v@NNvMc5v@NOvJc5v@NPv6c5v@NQ@1wgC5v@NR@1xGC5v@NSx6c5v@NTy6c5v@NUz6c5v@NVzGc5v@NW@106c5v@NX@10Gc5v@NY@116c5v@NZ@11Ic5v@Na@11Mc5v@Nb@11Yc5v@Nc@11cc5v@Nd@11oc5v@Ne@11sc5v@Nf@11@14c5v@Ngx4c5v@Nh@146c5v@Ni@14Kc5v@Nj@14Hc5v@Nk@146c5v@Nl@153c5v@Nm@15Jc5v@Nn@15Pc5v@No@15Ic5v@Nps1c5v@Ns40c5v@NtG1d5v@NuHEd5v@NvHDd5v@NwJHd5v@NxJld5v@NyJjd5v@NzJFd5v@O0K6d5v@O1KSd5v@O2KXd5v@O3Knd5v@O4Kkd5v@O5KVd5v@O6K6d5v@O7LEd5v@O8LTd5v@O9Lmd5v@OALvd5v@OBLud5v@OCLSd5v@ODLCd5v@OFNNd5v@OGNCd5v@OHG1d5v@OIR1d5v@OJSLd5v@OKS8d5v@OLwgC5v@OMxGC5v@ONUGd5v@OOUOd5v@OPUTd5v@OQURd5v@ORUhd5v@OSUfd5v@OTUFd5v@OUVGd5v@OVVOd5v@OWVTd5v@OXVRd5v@OYVhd5v@OZVfd5v@OaVFd5v@ObW5d5v@OcWBd5v@OdW9d5v@OeX5d5v@OfXBd5v@OgX9d5v@OhY5d5v@OiYAd5v@OjYEd5v@OkYJd5v@OlYNd5v@OmYSd5v@Onv@19C5v@OoU3d5v@OpR1d5v@OqC1d5v@OrCcd5v@OsChd5v@OtCmd5v@OuCXd5v@OvDGd5v@OwDEd5v@Oy90d5v@OzN1e5v@P0PBe5v@P1P9e5v@P2PEe5v@P3PIe5v@P4PXe5v@P5PGe5v@P6PEe5v@P7Q3e5v@P8QJe5v@P9QIe5v@PAQTe5v@PBQSe5v@PCPie5v@PDPge5v@PEPge5v@PFPie5v@PHUBe5v@PIU9e5v@PJUEe5v@PKUIe5v@PLUUe5v@PMUGe5v@PNUEe5v@POV3e5v@PPVGe5v@PQVFe5v@PRVQe5v@PSVPe5v@PTYOe5v@PUYbe5v@PVYae5v@PWYNe5v@PXY7e5v@PYZ4e5v@PZZOe5v@PaZNe5v@Pba6e5v@Pca4e5v@Pda4e5v@Pea6e5v@PgdDe5v@PhdBe5v@PidGe5v@PjdKe5v@PkdZe5v@PldIe5v@PmdGe5v@Pne9e5v@PoeMe5v@PpeLe5v@Pqece5v@Prese5v@Psere5v@Ptewe5v@Puebe5v@Pve9e5v@Pwg6e5v@PxgQe5v@PygPe5v@Pzh8e5v@Q0h6e5v@Q1h6e5v@Q2h8e5v@Q3j8e5v@Q4jOe5v@Q5jNe5v@Q7jQe5v@Q8j6e5v@Q9j6e5v@QAj6e5v@QBkAe5v@QCkQe5v@QDkPe5v@QEkSe5v@QFkde5v@QGkae5v@QHkAe5v@QIl7e5v@QJlUe5v@QKlTe5v@QLn6e5v@QMdke5v@QNdie5v@QOdie5v@QPdke5v@QRUfe5v@QSUde5v@QTUde5v@QUUfe5v@QWuBe5v@QXu9e5v@QYuEe5v@QZuIe5v@Qauae5v@QbuGe5v@QcuEe5v@Qdv3e5v@QevMe5v@QfvLe5v@QgvWe5v@QhvVe5v@Qix7e5v@QjxQe5v@QkxPe5v@QlxSe5v@Qmxde5v@Qnx7e5v@Qoy4e5v@QpyUe5v@QqyTe5v@Qrz6e5v@Qsz4e5v@Qtz4e5v@Quz6e5v@Qv@104e5v@Qw@13Ce5v@Qx@13Ae5v@Qy@13Fe5v@Qz@13Je5v@R0@13Ye5v@R1@13He5v@R2@13Fe5v@R3@148e5v@R4@14Re5v@R5@14Qe5v@R6@14he5v@R7@14xe5v@R8@14we5v@R9@14@11e5v@RA@14ge5v@RB@148e5v@RC@165e5v@RD@16Ve5v@RE@16Ue5v@RF@177e5v@RG@175e5v@RH@175e5v@RI@177e5v@RJ@195e5v@RK@19Le5v@RL@19Ke5v@RM@19Ye5v@RN@1A5e5v@RO@13je5v@RP@13he5v@RQ@13he5v@RR@13je5v@RTule5v@RUuje5v@RVuje5v@RWule5v@RY@1GBe5v@RZ@1G9e5v@Ra@1GEe5v@Rb@1GIe5v@Rc@1Gbe5v@Rd@1GGe5v@Re@1GEe5v@Rf@1H3e5v@Rg@1HNe5v@Rh@1HMe5v@Ri@1HXe5v@Rj@1HWe5v@Rk@1JCe5v@Rl@1JAe5v@Rm@1JFe5v@Rn@1JJe5v@Ro@1JYe5v@Rp@1JHe5v@Rq@1JFe5v@Rr@1K8e5v@Rs@1KSe5v@Rt@1KRe5v@Ru@1Kie5v@Rv@1Kye5v@Rw@1Kxe5v@Rx@1K@12e5v@Ry@1Khe5v@Rz@1K@1He5v@S0@1K@1Ke5v@S1@1K@1ae5v@S2@1K@1Ze5v@S3@1K@1ce5v@S4@1K@1ne5v@S5@1K@1ke5v@S6@1K8e5v@S7@1M5e5v@S8@1MLe5v@S9@1MKe5v@SA@1MXe5v@SB@1Mre5v@SC@1Mqe5v@SD@1Mte5v@SE@1MVe5v@SF@1N5e5v@SG@1NLe5v@SH@1NKe5v@SI@1NNe5v@SJ@1Nee5v@SK@1Nue5v@SL@1Nte5v@SM@1Nce5v@SN@1O5e5v@SO@1OLe5v@SP@1OKe5v@SQ@1ONe5v@SR@1Ome5v@SS@1Oke5v@ST@1P5e5v@SU@1PWe5v@SV@1PVe5v@SW@1Q7e5v@SX@1Q5e5v@SY@1Q5e5v@SZ@1Q7e5v@Sa@1R5e5v@Sb@1Jje5v@Sc@1Jhe5v@Sd@1Jhe5v@Se@1Jje5v@Sg@1Gme5v@Sh@1Gke5v@Si@1Gke5v@Sj@1Gme5v@Sl@1XGe5v@Sm@1XEe5v@Sn@1YQe5v@So@1YOe5v@Sp@1ZBe5v@Sq@1Z9e5v@Sr@1ZEe5v@Ss@1ZIe5v@St@1ZXe5v@Su@1ZGe5v@Sv@1ZEe5v@Sw@1a7e5v@Sx@1aNe5v@Sy@1aMe5v@Sz@1aPe5v@T0@1aoe5v@T1@1a7e5v@T2@1bIe5v@T3@1bGe5v@T4@1c9e5v@T5@1cPe5v@T6@1cOe5v@T7@1cRe5v@T8@1cce5v@T9@1c8e5v@TA@1c8e5v@TB@1dTe5v@TC@1dRe5v@TD@1e5e5v@TE@1eUe5v@TF@1eRe5v@TG@1eRe5v@TH@1f5e5v@TI@1Zie5v@TJ@1Zge5v@TK@1Zge5v@TL@1Zie5v@TN@1j7e5v@TO@1j6e5v@TP@1j6e5v@TQ@1lRe5v@TR@1lPe5v@TT@1mEe5v@TU@1mDe5v@TV@1mDe5v@TW@1oRe5v@TX@1oPe5v@TY@1rXe5v@TZ@1rce5v@Ta@1rye5v@Tb@1rwe5v@Tc@1rWe5v@Td@1rMe5v@Te@1tRe5v@Tf@1the5v@Tg@1tfe5v@Th@1t@15e5v@Ti@1t@13e5v@Tj@1t@1Qe5v@Tk@1tQe5v@Tl@1tGe5v@Tm@1v2e5v@Tn@1vTe5v@To@1vie5v@Tp@1vSe5v@Tq@1vHe5v@Tr@1vHe5v@TsN1e5v@Tt@1y1e5v@Tu@1zNe5v@Tv@1zMe5v@Tw@22Be5v@Tx@229e5v@Ty@22Ee5v@Tz@22Ie5v@U0@22be5v@U1@22Ge5v@U2@22Ee5v@U3@233e5v@U4@23Ne5v@U5@23Me5v@U6@23Ue5v@U7@22me5v@U8@22ke5v@U9@22ke5v@UA@22me5v@UC@27Be5v@UD@279e5v@UE@27Ee5v@UF@27Ie5v@UG@27ae5v@UH@27Ge5v@UI@27Ee5v@UJ@283e5v@UK@28Me5v@UL@28Le5v@UM@28Te5v@UN@27le5v@UO@27je5v@UP@27je5v@UQ@27le5v@US@2CBe5v@UT@2C9e5v@UU@2CEe5v@UV@2CIe5v@UW@2CUe5v@UX@2CGe5v@UY@2CEe5v@UZ@2D3e5v@Ua@2DGe5v@Ub@2DFe5v@Uc@2DNe5v@Ud@2Cfe5v@Ue@2Cde5v@Uf@2Cde5v@Ug@2Cfe5v@Ui@2HBe5v@Uj@2H9e5v@Uk@2HEe5v@Ul@2HIe5v@Um@2HXe5v@Un@2HGe5v@Uo@2HEe5v@Up@2I3e5v@Uq@2IJe5v@Ur@2IIe5v@Us@2IQe5v@Ut@2Hie5v@Uu@2Hge5v@Uv@2Hge5v@Uw@2Hie5v@Uy@1y1e5v@Uz@2N1e5v@V0@2O9e5v@V1@2ODe5v@V2@2OHe5v@V3@2OMe5v@V4@2OTe5v@V5@2OXe5v@V6@2ORe5v@V7@2OKe5v@V8@2P3e5v@V9@2P6e5v@VA@2PAe5v@VB@2PEe5v@VC@2PJe5v@VD@2PRe5v@VE@2PXe5v@VF@2Pbe5v@VG@2PVe5v@VH@2PPe5v@VI@2PHe5v@VJ@2Q3e5v@VK@2Q6e5v@VL@2QAe5v@VM@2QEe5v@VN@2QJe5v@VO@2QQe5v@VP@2QUe5v@VQ@2QOe5v@VR@2QHe5v@VS@2R3e5v@VT@2R6e5v@VU@2RAe5v@VV@2REe5v@VW@2RJe5v@VX@2RRe5v@VY@2RXe5v@VZ@2Rbe5v@Va@2RVe5v@Vb@2RPe5v@Vc@2RHe5v@Vd@2O2e5v@Ve@2V1e5v@Vf@2WEe5v@Vg@2WOe5v@Vh@2WCe5v@Vi@2XEe5v@Vj@2XNe5v@Vk@2XMe5v@Vl@2Xce5v@Vm@2Xle5v@Vn@2Xke5v@Vo@2XCe5v@Vp@2Y2e5v@Vq@2YUe5v@Vr@2Yfe5v@Vs@2YNe5v@Vt@2YIe5v@Vu@2V1e5v@VvK1e5v@VxA0e5v@Vz4mf5v@W04lf5v@W14@1Kf5v@W24@1Wf5v@W34@1Vf5v@W44@1nf5v@W54@1mf5v@W64Ef5v@W75mf5v@W85lf5v@W95@1Kf5v@WA5@1Wf5v@WB5@1Vf5v@WC5@1tf5v@WD5@1sf5v@WE5Ef5v@WF6mf5v@WG6lf5v@WH6@1Kf5v@WI6@1Wf5v@WJ6@1Vf5v@WK6@1nf5v@WL6@1mf5v@WM6Ef5v@WN7kf5v@WO7jf5v@WP7@1If5v@WQ7@1Uf5v@WR7@1Tf5v@WS7@1nf5v@WT7@1mf5v@WU7Ef5v@WV8lf5v@WW8kf5v@WX8@1Jf5v@WY8@1Vf5v@WZ8@1Uf5v@Wa8@1of5v@Wb8@1nf5v@Wc8Ef5v@Wd9nf5v@We9mf5v@Wf9@1Lf5v@Wg9@1Xf5v@Wh9@1Wf5v@Wi9@1sf5v@Wj9@1rf5v@Wk9Ef5v@WlAmf5v@WmAlf5v@WnA@1Kf5v@WoA@1Wf5v@WpA@1Vf5v@WqA@1pf5v@WrA@1of5v@WsAEf5v@Ww30f5v@Wy4Tq5v@Wz4Eq5v@X05Wq5v@X15Eq5v@X26Xq5v@X36Eq5v@X47Qq5v@X57Eq5v@X68Rq5v@X78Eq5v@X89Yq5v@X99Eq5v@XBC8q5v@XCDQq5v@XDDKq5v@XEERq5v@XFELq5v@XGFKq5v@XHFIq5v@XIGLq5v@XJGJq5v@XKIBq5v@XLI9q5v@XMIEq5v@XNIIq5v@XOIRq5v@XPIGq5v@XQIEq5v@XRJBq5v@XSJLq5v@XTJKq5v@XUJ9q5v@XVK7q5v@XWKCq5v@XXKLq5v@XYKIq5v@XZK7q5v@XaL4q5v@XbLNq5v@XcLSq5v@XdLMq5v@XeM4q5v@XfMQq5v@XgMVq5v@XhMPq5v@XiN4q5v@XjNLq5v@XkNKq5v@XmOEq5v@XnOJq5v@XoOSq5v@XpOPq5v@XqOEq5v@XrP4q5v@XsPQq5v@XtPVq5v@XuPPq5v@XvQ4q5v@XwQRq5v@XxQWq5v@XyQQq5v@XzR4q5v@Y0RLq5v@Y1RKq5v@Y3SEq5v@Y4SJq5v@Y5SSq5v@Y6SPq5v@Y7SEq5v@Y8TMq5v@Y9TKq5v@YAU4q5v@YBULq5v@YCUKq5v@YEVEq5v@YFVJq5v@YGVSq5v@YHVPq5v@YIVEq5v@YJWNq5v@YKWLq5v@YLX4q5v@YMXLq5v@YNXKq5v@YPYEq5v@YQYJq5v@YRYSq5v@YSYPq5v@YTYEq5v@YUZ4q5v@YVZNq5v@YWZSq5v@YXZLq5v@YYa4q5v@YZaNq5v@YaaSq5v@YbaLq5v@Ycb4q5v@YdbLq5v@YebKq5v@Ygd6q5v@Yhd4q5v@Yid4q5v@Yjd6q5v@YlC8q5v@Ymi8q5v@Ynj9q5v@Yojaq5v@YpjZq5v@Yqj2q5v@Yrl8q5v@Ysm9q5v@Ytmbq5v@Yumaq5v@Yvm2q5v@Ywo8q5v@Yxp9q5v@YypXq5v@YzpWq5v@Z0p2q5v@Z1r8q5v@Z2sAq5v@Z3sYq5v@Z4sXq5v@Z5s9q5v@Z6s2q5v@Z930q5v@ZAA1y5v@ZBBMy5v@ZCBCy5v@ZDB2y5v@ZEA1y5v@ZFE1y5v@ZGF2y5v@ZHFPy5v@ZIFMy5v@ZJFMy5v@ZKE1y5v@ZLJ1y5v@ZMJey5v@ZNJOy5v@ZOKMy5v@ZPKCy5v@ZQK2y5v@ZRJ1y5v@ZSO1y5v@ZTPMy5v@ZUPCy5v@ZVP2y5v@ZWO1y5v@ZX51y5v@ZY6Gy5v@ZZ6Ey5v@Zb10y5v@ZcA1s5v@ZdAUs5v@ZeANs5v@ZfC1s5v@ZgCes5v@ZhCOs5v@ZiD6s5v@ZjDTs5v@ZkDQs5v@ZlDXs5v@ZmDas5v@ZnDms5v@ZoDks5v@ZpD6s5v@ZqE3s5v@ZrEEs5v@ZsEPs5v@ZtEVs5v@ZuEOs5v@ZvF8s5v@ZwF7s5v@ZxF7s5v@ZyG6s5v@ZzG4s5v@a0G4s5v@a1G4s5v@a2Ics5v@a3INs5v@a4C1s5v@a5M1s5v@a6N9s5v@a7NKs5v@a8NUs5v@a9Nfs5v@aANus5v@aBNts5v@aCNTs5v@aDN7s5v@aEO7s5v@aFOIs5v@aGOSs5v@aHOds5v@aIOss5v@aJOrs5v@aKORs5v@aLO5s5v@aMPNs5v@aNPRs5v@aOPVs5v@aPPZs5v@aQPds5v@aRPfs5v@aSPjs5v@aTPls5v@aUPps5v@aVPMs5v@aWM1s5v@aX81s5v@aY8Ss5v@aZ8Ns5v@ab50s5v@ac61t5v@ad72t5v@ae7Mt5v@af7ht5v@ag7qt5v@ah7gt5v@ai7@15t5v@aj7Kt5v@ak86t5v@al8Mt5v@am8Qt5v@an8mt5v@ao8vt5v@ap8lt5v@aq8Pt5v@ar86t5v@asA7t5v@atAGt5v@auARt5v@avAOt5v@awA7t5v@axBGt5v@ayBPt5v@azBZt5v@b0Bit5v@b1Bxt5v@b2Bwt5v@b3BYt5v@b4BEt5v@b5C4t5v@b6CDt5v@b7CPt5v@b8Cat5v@b9COt5v@bAD4t5v@bBDDt5v@bCDZt5v@bDDXt5v@bEG6t5v@bFGNt5v@bGGRt5v@bHGnt5v@bIGwt5v@bJGmt5v@bKGQt5v@bLG6t5v@bMH3t5v@bNHOt5v@bOI3t5v@bPICt5v@bQIYt5v@bRIWt5v@bSK2t5v@bTKRt5v@bUKGt5v@bVLHt5v@bWLGt5v@bXL6t5v@bYM5t5v@bZMEt5v@bbMIt5v@bcM3t5v@bdM3t5v@beM3t5v@bfOHt5v@bgOGt5v@bhO6t5v@biP5t5v@bjPEt5v@blPIt5v@bmP3t5v@bnP3t5v@boP3t5v@bpRHt5v@bqRGt5v@brR6t5v@bsS5t5v@btSEt5v@bvSIt5v@bwS3t5v@bxS3t5v@byS3t5v@bzUHt5v@c0UGt5v@c1U6t5v@c2V5t5v@c3VEt5v@c5VIt5v@c6V3t5v@c7V3t5v@c8V3t5v@c9X2t5v@cAXBt5v@cBXPt5v@cCY2t5v@cDYIt5v@cEYRt5v@cFYct5v@cGYbt5v@cHYGt5v@cI61t5v@cJb1t5v@cKbet5v@cLbXt5v@cM41t5v@cN4Ht5v@cP30t5v@cQ91u5v@cRA2u5v@cSAHu5v@cT91u5v@cUD1u5v@cVEHu5v@cWEWu5v@cXEDu5v@cYE2u5v@cZH1u5v@caI9u5v@cbISu5v@ccIRu5v@cdI2u5v@ceL1u5v@cfM2u5v@cgMCu5v@chMJu5v@ciMHu5v@cjL1u5v@ckP1u5v@clQ2u5v@cmQJu5v@cnQIu5v@coP1u5v@cp41u5v@cq4Ku5v@cr4Du5v@cs5Eu5v@ct5Cu5v@cv10u5v@cwG1v5v@cxHEv5v@cyHDv5v@czJHv5v@d0Jkv5v@d1Jiv5v@d2JFv5v@d3K6v5v@d4KSv5v@d5KXv5v@d6Knv5v@d7Kkv5v@d8KVv5v@d9K6v5v@dALEv5v@dBLTv5v@dCLmv5v@dDLvv5v@dELuv5v@dFLSv5v@dGLCv5v@dINNv5v@dJNCv5v@dKG1v5v@dLR1v5v@dMSLv5v@dNS8v5v@dOwgC5v@dPxGC5v@dQUGv5v@dRUOv5v@dSUTv5v@dTURv5v@dUUhv5v@dVUfv5v@dWUFv5v@dXVGv5v@dYVOv5v@dZVTv5v@daVRv5v@dbVhv5v@dcVfv5v@ddVFv5v@deW5v5v@dfWBv5v@dgW9v5v@dhX5v5v@diXBv5v@djX9v5v@dkY5v5v@dlYAv5v@dmYEv5v@dnYJv5v@doYNv5v@dpYSv5v@dqv@19C5v@drU3v5v@dsR1v5v@dtC1v5v@duCcv5v@dvChv5v@dwCmv5v@dxCXv5v@dyDGv5v@dzDEv5v@e190v5v@e268w5v@e37Bw5v@e479w5v@e57Ew5v@e67Iw5v@e77Mw5v@e87Ww5v@e97Uw5v@eA7Gw5v@eB7Ew5v@eC8Ow5v@eD8Rw5v@eE8Vw5v@eF8Nw5v@eG85w5v@eH97w5v@eI9Cw5v@eJ9Bw5v@eK95w5v@eLA3w5v@eMA8w5v@eNADw5v@eOAIw5v@ePAHw5v@eQABw5v@eRB3w5v@eSB8w5v@eTBDw5v@eUBBw5v@eV7bw5v@eW7Zw5v@eX7Zw5v@eY7bw5v@ea68w5v@ebG8w5v@ecHGw5v@edHLw5v@eeHIw5v@efHPw5v@egHTw5v@ehHRw5v@eiHXw5v@ejHVw5v@ekHNw5v@elHEw5v@emI6w5v@enIKw5v@eoIIw5v@epI6w5v@eqKAw5v@erK3w5v@etLDw5v@euLRw5v@evLPw5v@ewLDw5v@exO8w5v@eyO7w5v@ezOCw5v@f0ORw5v@f1OOw5v@f2OAw5v@f3OZw5v@f4Ofw5v@f5Odw5v@f6OWw5v@f7P8w5v@f8P7w5v@f9PCw5v@fAPRw5v@fBPOw5v@fCPAw5v@fDPZw5v@fEPfw5v@fFPdw5v@fGPWw5v@fHO4w5v@fIN3w5v@fKTCw5v@fLTBw5v@fMTHw5v@fNTNw5v@fOTLw5v@fPTEw5v@fQTAw5v@fRT3w5v@fSG8w5v@fTY8w5v@fUZ9w5v@fVZhw5v@fWZNw5v@fXZ2w5v@fYd8w5v@fZeQw5v@fae8w5v@fbfRw5v@fcfQw5v@fdfiw5v@fefhw5v@fffDw5v@fgf2w5v@fj40w5v@fk58x5v@fl5gx5v@fm5bx5v@fn5Qx5v@foC1x5v@fpDIx5v@fqDQx5v@frDDx5v@fsD2x5v@ftG1x5v@fuH9x5v@fvHJx5v@fwHGx5v@fxHNx5v@fyHQx5v@fzHax5v@g0HXx5v@g1H2x5v@g2K1x5v@g3LIx5v@g4LRx5v@g5LVx5v@g6LPx5v@g7LZx5v@g8Lix5v@g9Lmx5v@gALgx5v@gBLDx5v@gCL2x5v@gDO1x5v@gEPIx5v@gFPRx5v@gGPVx5v@gHPPx5v@gIPZx5v@gJPix5v@gKPmx5v@gLPgx5v@gMPDx5v@gNP2x5v@gOS1x5v@gPTIx5v@gQTRx5v@gRTPx5v@gSTUx5v@gTTdx5v@gUTbx5v@gVTDx5v@gWT2x5v@gXW1x5v@gYXIx5v@gZXRx5v@gaXPx5v@gbXUx5v@gcXdx5v@gdXbx5v@geXDx5v@gfX2x5v@gga1x5v@ghb9x5v@gibJx5v@gjbGx5v@gkbNx5v@glbXx5v@gmbUx5v@gnbLx5v@gob2x5v@gpe1x5v@gqfRx5v@grfXx5v@gsfUx5v@gtf2x5v@gui1x5v@gvkIx5v@gwk6x5v@gxk6x5v@gylIx5v@gzl5x5v@h0m3x5v@h1mDx5v@h2mAx5v@h3mAx5v@h4n3x5v@h5nDx5v@h6nAx5v@h7nAx5v@h8p9x5v@h9p2x5v@hAs1x5v@hBuLx5v@hCu9x5v@hDv2x5v@hEvIx5v@hFw9x5v@hGw2x5v@hHz1x5v@hI@109x5v@hJ@10Jx5v@hK@10Nx5v@hL@10Gx5v@hM@10Qx5v@hN@10Tx5v@hO@10dx5v@hP@10hx5v@hQ@10ax5v@hR@102x5v@hS71x5v@hT8Bx5v@hU89x5v@hV9Bx5v@hW99x5v@hY10x5v@hb@1u425v@hc@10835v@hd@11i35v@he@11J35v@hf@11C35v@hgt835v@hhtU35v@hitK35v@hjti35v@hkta35v@hluZ35v@hmuf35v@hnuC35v@hovX35v@hpvd35v@hqvg35v@hrvC35v@hswR35v@htwP35v@huxP35v@hvxN35v@hxh435v@hy@16835v@hz@16O35v@i0@16K35v@i1@16Y35v@i2@16U35v@i3@16l35v@i4@16o35v@i5@16g35v@i6@17X35v@i7@17d35v@i8@17g35v@i9@17C35v@iB@15435v@iC@1Bn35v@iD@1B@1335v@iE@1Bz35v@iF@1B@1D35v@iG@1B@1935v@iH@1B@1Q35v@iI@1B@1T35v@iJ@1B@1L35v@iL@1B435v@iM@1Cm35v@iN@1C@1235v@iO@1Cy35v@iP@1C@1C35v@iQ@1C@1835v@iR@1C@1P35v@iS@1C@1S35v@iT@1C@1K35v@iV@1C435v@iW@1Dn35v@iX@1D@1335v@iY@1Dz35v@iZ@1D@1D35v@ia@1D@1935v@ib@1D@1Q35v@ic@1D@1T35v@id@1D@1L35v@if@1D435v@ig@1En35v@ih@1E@1335v@ii@1Ez35v@ij@1E@1D35v@ik@1E@1935v@il@1E@1Q35v@im@1E@1T35v@in@1E@1L35v@ip@1E435v@iq@1Fp35v@ir@1F@1535v@is@1F@1135v@it@1F@1F35v@iu@1F@1B35v@iv@1F@1S35v@iw@1F@1V35v@ix@1F@1N35v@iz@1F435v@j0@1Gp35v@j1@1G@1535v@j2@1G@1135v@j3@1G@1F35v@j4@1G@1B35v@j5@1G@1S35v@j6@1G@1V35v@j7@1G@1N35v@j9@1G435v@jA@1Hi35v@jB@1Hy35v@jC@1Hu35v@jD@1H@1835v@jE@1H@1435v@jF@1H@1L35v@jG@1H@1O35v@jH@1H@1G35v@jJ@1H435v@jK@1Io35v@jL@1I@1435v@jM@1I@1035v@jN@1I@1E35v@jO@1I@1A35v@jP@1I@1R35v@jQ@1I@1U35v@jR@1I@1M35v@jT@1I435v@jU@1Jj35v@jV@1Jz35v@jW@1Jv35v@jX@1J@1935v@jY@1J@1535v@jZ@1J@1M35v@ja@1J@1P35v@jb@1J@1H35v@jd@1J435v@je@1Km35v@jf@1K@1235v@jg@1Ky35v@jh@1K@1C35v@ji@1K@1835v@jj@1K@1P35v@jk@1K@1S35v@jl@1K@1K35v@jn@1K435v@jo@1Ll35v@jp@1L@1135v@jq@1Lx35v@jr@1L@1B35v@js@1L@1735v@jt@1L@1O35v@ju@1L@1R35v@jv@1L@1J35v@jx@1L435v@jy@1Mq35v@jz@1M@1635v@k0@1M@1235v@k1@1M@1G35v@k2@1M@1C35v@k3@1M@1T35v@k4@1M@1W35v@k5@1M@1O35v@k7@1M435v@k8@1Nk35v@k9@1N@1035v@kA@1Nw35v@kB@1N@1A35v@kC@1N@1635v@kD@1N@1N35v@kE@1N@1Q35v@kF@1N@1I35v@kH@1N435v@kI@1Os35v@kJ@1O@1835v@kK@1O@1435v@kL@1O@1I35v@kM@1O@1E35v@kN@1O@1V35v@kO@1O@1Y35v@kP@1O@1Q35v@kR@1O435v@kS68E5v@kT7OE5v@kU7ME5v@kW44E5v@kYBcI5v@kZBLI5v@kaHgI5v@kbHLI5v@kcIhI5v@kdILI5v@keJfI5v@kfJLI5v@kh@14FI5v@ki@15jI5v@kj@15qI5v@kk@15tI5v@kl@15iI5v@km@15JI5v@kn@15CI5v@ko@188I5v@kr@19LI5v@ks@19LI5v@kt@19CI5v@ku@1AGI5v@kv@1AHI5v@l0@1DCI5v@l3@1FLI5v@l4@1FLI5v@l5@1FCI5v@l6@1GGI5v@l7@1GHI5v@lC@188I5v@lD@1K8I5v@lE@1LLI5v@lF@1LJI5v@lG@1MdI5v@lH@1MGI5v@lI@1MEI5v@lJ@1NII5v@lK@1NJI5v@lL@1NGI5v@lM@1OGI5v@lN@1OEI5v@lO@1PJI5v@lP@1PNI5v@lQ@1PLI5v@lR@1PJI5v@lS@1QOI5v@lT@1QQI5v@lU@1QRI5v@lV@1QRI5v@lW@1QRI5v@lX@1QQI5v@lY@1QPI5v@lZ@1QGI5v@la@1S@18I5v@lb@1S@1AI5v@lc@1S@1BI5v@ld@1S@1BI5v@le@1S@1BI5v@lf@1S@1AI5v@lg@1S@19I5v@lh@1S@1GI5v@li@1S@1II5v@lj@1S@1JI5v@lk@1S@1JI5v@ll@1S@1JI5v@lm@1S@1II5v@ln@1S@1HI5v@lo@1StI5v@lp@1SnI5v@lq@1S@1PI5v@lr@1T@1EI5v@ls@1T@1GI5v@lt@1T@1KI5v@lu@1T@1II5v@lv@1T@1FI5v@lw@1T@1OI5v@lx@1T@1mI5v@ly@1T@1oI5v@lz@1T@1pI5v@m0@1T@1pI5v@m1@1T@1pI5v@m2@1T@1oI5v@m3@1T@1nI5v@m4@1T@1uI5v@m5@1T@1wI5v@m6@1T@1xI5v@m7@1T@1xI5v@m8@1T@1xI5v@m9@1T@1wI5v@mA@1T@1vI5v@mB@1TyI5v@mC@1TsI5v@mD@1T@23I5v@mE@1U@1CI5v@mF@1U@1EI5v@mG@1U@1II5v@mH@1U@1GI5v@mI@1U@1DI5v@mJ@1U@1MI5v@mK@1U@1lI5v@mL@1U@1nI5v@mM@1U@1oI5v@mN@1U@1oI5v@mO@1U@1oI5v@mP@1U@1nI5v@mQ@1U@1mI5v@mR@1U@1tI5v@mS@1U@1vI5v@mT@1U@1wI5v@mU@1U@1wI5v@mV@1U@1wI5v@mW@1U@1vI5v@mX@1U@1uI5v@mY@1UwI5v@mZ@1UqI5v@ma@1U@22I5v@mb@1V@1FI5v@mc@1V@1HI5v@md@1V@1LI5v@me@1V@1JI5v@mf@1V@1GI5v@mg@1V@1PI5v@mh@1V@1oI5v@mi@1V@1qI5v@mj@1V@1rI5v@mk@1V@1rI5v@ml@1V@1rI5v@mm@1V@1qI5v@mn@1V@1pI5v@mo@1V@1wI5v@mp@1V@1yI5v@mq@1V@1zI5v@mr@1V@1zI5v@ms@1V@1zI5v@mt@1V@1yI5v@mu@1V@1xI5v@mv@1VzI5v@mw@1VtI5v@mx@1V@25I5v@my@1W@1DI5v@mz@1W@1FI5v@n0@1W@1JI5v@n1@1W@1HI5v@n2@1W@1EI5v@n3@1W@1NI5v@n4@1W@1nI5v@n5@1W@1pI5v@n6@1W@1qI5v@n7@1W@1qI5v@n8@1W@1qI5v@n9@1W@1pI5v@nA@1W@1oI5v@nB@1W@1vI5v@nC@1W@1xI5v@nD@1W@1yI5v@nE@1W@1yI5v@nF@1W@1yI5v@nG@1W@1xI5v@nH@1W@1wI5v@nI@1WxI5v@nJ@1WrI5v@nK@1W@24I5v@nL@1Z@1CI5v@nM@1Z@1EI5v@nN@1Z@1FI5v@nO@1Z@1FI5v@nP@1Z@1FI5v@nQ@1Z@1EI5v@nR@1Z@1DI5v@nS@1Z@1KI5v@nT@1Z@1MI5v@nU@1Z@1NI5v@nV@1Z@1NI5v@nW@1Z@1NI5v@nX@1Z@1MI5v@nY@1Z@1LI5v@nZ@1Z@1SI5v@na@1Z@1UI5v@nb@1Z@1VI5v@nc@1Z@1VI5v@nd@1Z@1VI5v@ne@1Z@1UI5v@nf@1Z@1TI5v@ng@1ZvI5v@nh@1ZpI5v@ni@1Z@1bI5v@nj@1c@10I5v@nk@1c@12I5v@nl@1c@13I5v@nm@1c@13I5v@nn@1c@13I5v@no@1c@12I5v@np@1c@11I5v@nq@1c@18I5v@nr@1crI5v@ns@1clI5v@nt@1c@1FI5v@nu@1dyI5v@nv@1d@10I5v@nw@1d@11I5v@nx@1d@11I5v@ny@1d@11I5v@nz@1d@10I5v@o0@1dzI5v@o1@1d@16I5v@o2@1dpI5v@o3@1djI5v@o4@1d@1EI5v@o5@1gxI5v@o6@1gzI5v@o7@1g@10I5v@o8@1g@10I5v@o9@1g@10I5v@oA@1gzI5v@oB@1gyI5v@oC@1gnI5v@oD@1ghI5v@oE@1g@16I5v@oF@1iaI5v@oGGf25v@oHHn25v@oI@1iZI5v@oJ@1iiI5v@oK@1lGI5v@oL@1lRI5v@oM@1lQI5v@oO@1pGI5v@oP@1pjI5v@oQ@1ptI5v@oR@1prI5v@oS@1pGI5v@oV@1qPI5v@oW@1qPI5v@oX@1qGI5v@oY@1rKI5v@oZ@1rMI5v@oa@1rLI5v@of@1vJI5v@og@1vCI5v@oh@1y8I5v@oi@1zCI5v@oj@1zLI5v@ok@1zII5v@ol@1zCI5v@om@20GI5v@on@20LI5v@oo@20WI5v@op@20TI5v@oq@20GI5v@or@20@1DI5v@os@20jI5v@ot@20ZI5v@ou@21eI5v@ov@21JI5v@ow@21CI5v@oxN8I5v@oyNzI5v@ozNlI5v@p0N@1KI5v@p1N@15I5v@p2OcI5v@p3ObI5v@p4OkI5v@p5Hn25v@p6ONI5v@p7PGI5v@p8PEI5v@p9QGI5v@pAQEI5v@pBRGI5v@pCREI5v@pDScI5v@pESbI5v@pFSiI5v@pGSqI5v@pHSoI5v@pIHn25v@pJSNI5v@pKTcI5v@pLTbI5v@pMTkI5v@pNTuI5v@pOTsI5v@pPHn25v@pQTNI5v@pRUcI5v@pSUbI5v@pTUlI5v@pUUwI5v@pVUuI5v@pWHn25v@pXUNI5v@pYVOI5v@pZVdI5v@paVaI5v@pbViI5v@pcVzI5v@pdVyI5v@peV@1DI5v@pfV@1PI5v@pgV@1NI5v@phV@1TI5v@piV@1RI5v@pjHn25v@pkVNI5v@plWOI5v@pmWeI5v@pnWbI5v@poWjI5v@ppW@10I5v@pqWzI5v@prW@1FI5v@psW@1RI5v@ptW@1PI5v@puW@1VI5v@pvW@1TI5v@pwHn25v@pxWNI5v@pyYOI5v@pzYlI5v@q0YiI5v@q1YrI5v@q2Hn25v@q3YNI5v@q4ZYI5v@q5ZWI5v@q6bNI5v@q7bLI5v@q8dQI5v@q9dQI5v@qAdfI5v@qBdOI5v@qCeRI5v@qDeRI5v@qEehI5v@qFePI5v@qGgVI5v@qHgUI5v@qIgII5v@qJhWI5v@qKhVI5v@qLhJI5v@qMibI5v@qNiaI5v@qOiOI5v@qPjcI5v@qQjbI5v@qRjPI5v@qSlMI5v@qTlKI5v@qUmMI5v@qVmKI5v@qWoGI5v@qXoEI5v@qYpOI5v@qZpWI5v@qapUI5v@qbpZI5v@qcpdI5v@qdpbI5v@qeHn25v@qfpNI5v@qgqOI5v@qhqXI5v@qiqVI5v@qjqaI5v@qkqeI5v@qlqcI5v@qmHn25v@qnqNI5v@qorOI5v@qprcI5v@qqraI5v@qrrfI5v@qsrrI5v@qtrpI5v@qurvI5v@qvrtI5v@qwHn25v@qxrNI5v@qysOI5v@qzsdI5v@r0sbI5v@r1sgI5v@r2ssI5v@r3sqI5v@r4swI5v@r5suI5v@r6Hn25v@r7sNI5v@r8tOI5v@r9tUI5v@rAtSI5v@rBtXI5v@rCtfI5v@rDtdI5v@rEHn25v@rFtNI5v@rGvYI5v@rHvCI5v@rIwfI5v@rJwmI5v@rKwuI5v@rLw@17I5v@rMwCI5v@rNxXI5v@rOxCI5v@rQ44I5v@rR68K5v@rS6cK5v@rT6cK5v@rU6jK5v@rW6@14K5v@rX6XK5v@rY7NK5v@rZ7LK5v@ra8OK5v@rb8MK5v@rd24K5v@re58M5v@rf5dM5v@rg5YM5v@rh6LM5v@ri6JM5v@rj7LM5v@rk7JM5v@rm24M5v@rn58L5v@ro5rL5v@rp5xL5v@rq5@10L5v@rr5mL5v@rs6QL5v@rt6OL5v@ru7OL5v@rv7ML5v@rx24L5v@ry38N5v@rz3XN5v@s03tN5v@s13wN5v@s23SN5v@s424N5v@s548O5v@s64fO5v@s74@13O5v@s84@16O5v@s94aO5v@sA5QO5v@sB5OO5v@sD24O5v@sE48P5v@sF4bP5v@sG4WP5v@sH5SP5v@sI5QP5v@sK24P5v@sLMFC5v@sMHbC5v@sNHLC5v@sOIYC5v@sPILC5v@sQOlC5v@sRO@1CC5v@sSO@1iC5v@sTOCC5v@sUPlC5v@sVP@19C5v@sWP@1cC5v@sXPCC5v@sYRCC5v@sZRoC5v@saRnC5v@sbSCC5v@scSqC5v@sdSpC5v@sfVFC5v@sgarC5v@shaCC5v@sidlC5v@sjd@19C5v@skd@1cC5v@sldCC5v@smgGC5v@sngEC5v@sohbC5v@sphZC5v@sqieC5v@sricC5v@sskGC5v@stkEC5v@sulgC5v@svleC5v@swmjC5v@sxmhC5v@syVFC5v@szpFC5v@t0rVC5v@t1rTC5v@t2ssC5v@t3s@1GC5v@t4s@1jC5v@t5sJC5v@t6sCC5v@t7vFC5v@t8v@19C5v@t9v@15C5v@tAwgC5v@tBxGC5v@tCyGC5v@tDyMC5v@tEyRC5v@tFyYC5v@tGygC5v@tHyjC5v@tIymC5v@tJypC5v@tKwJC5v@tLwCC5v@tM@11FC5v@tN@11@1LC5v@tO@11@1HC5v@tP@12GC5v@tQ@12UC5v@tR@12SC5v@tS@12GC5v@tT@12XC5v@tU@17CC5v@tV@1DGC5v@tW@1DQC5v@tX@1DNC5v@tY@1DGC5v@tZ@1EkC5v@ta@1FKC5v@tb@1GVC5v@tc@1GdC5v@td@1GKC5v@te@1HKC5v@tf@1HTC5v@tg@1HhC5v@th@1HfC5v@ti@1HRC5v@tj@1IVC5v@tk@1IcC5v@tl@1IaC5v@tm@1IKC5v@tn@1JKC5v@to@1KKC5v@tp@1KNC5v@tq@1KQC5v@tr@1KTC5v@ts@1ENC5v@tt@1EGC5v@tu@1NGC5v@tv@1NQC5v@tw@1NNC5v@tx@1NGC5v@ty@1OkC5v@tz@1PKC5v@u0@1QKC5v@u1@1QTC5v@u2@1QhC5v@u3@1QfC5v@u4@1QRC5v@u5@1RVC5v@u6@1RdC5v@u7@1RKC5v@u8@1SKC5v@u9@1TVC5v@uA@1TcC5v@uB@1TaC5v@uC@1TKC5v@uD@1UKC5v@uE@1UNC5v@uF@1UQC5v@uG@1UTC5v@uH@1ONC5v@uI@1OGC5v@uJ@1hGC5v@uK@1hUC5v@uL@1hSC5v@uM@1hWC5v@uN@1haC5v@uO@1hZC5v@uP@1hGC5v@uQ@1ikC5v@uR@1jKC5v@uS@1kKC5v@uT@1kSC5v@uU@1kaC5v@uV@1kgC5v@uW@1kmC5v@uX@1kzC5v@uY@1k@12C5v@uZ@1k@15C5v@ua@1k@18C5v@ub@1iNC5v@uc@1iGC5v@ud@1nZC5v@ue@1oGC5v@uf@1pGC5v@ug@1pOC5v@uh@1pWC5v@ui@1pcC5v@uj@1piC5v@uk@1pvC5v@ul@1pyC5v@um@1p@11C5v@un@1p@14C5v@uo@1p@17C5v@up@1p@1AC5v@uq@1p@1DC5v@ur@1nCC5v@us@1slC5v@ut@1sJC5v@uu@1sCC5v@uv@1vFC5v@uw@1v@1BC5v@ux@1v@17C5v@uy@1wgC5v@uz@1xGC5v@v0@1yGC5v@v1@1yMC5v@v2@1yRC5v@v3@1yYC5v@v4@1ygC5v@v5@1yjC5v@v6@1ymC5v@v7@1ypC5v@v8@1wJC5v@v9@1wCC5v@vA@21FC5v@vB@21@18C5v@vC@21@14C5v@vD@22gC5v@vE@23GC5v@vF@24GC5v@vG@24KC5v@vH@24OC5v@vI@24SC5v@vJ@24WC5v@vK@24aC5v@vL@24eC5v@vM@24hC5v@vN@24kC5v@vO@24nC5v@vP@22JC5v@vQ@22CC5v@vR@27FC5v@vS@27@1CC5v@vT@27@18C5v@vU@2AgC5v@vV@2BGC5v@vW@2CGC5v@vX@2CKC5v@vY@2COC5v@vZ@2CSC5v@va@2CWC5v@vb@2CaC5v@vc@2CeC5v@vd@2CiC5v@ve@2CmC5v@vf@2CpC5v@vg@2CsC5v@vh@2CvC5v@vi@2AJC5v@vj@2ACC5v@vk@2FFC5v@vl@2GGC5v@vm@2GEC5v@vn@2HlC5v@vo@2H@19C5v@vp@2H@1cC5v@vq@2HCC5v@vr@1wgC5v@vs@1xGC5v@vt@2IjC5v@vu@2ImC5v@vv@2IpC5v@vw@2IqC5v@vx@2IvC5v@vy@2IwC5v@vz@2I@11C5v@w0@2I@14C5v@w1@2I@17C5v@w2@1v@1BC5v@w3@2IiC5v@w4@2ICC5v@w7FBC5v@w9KoQ5v@wAKrQ5v@wBKnQ5v@wCKLQ5v@wELFQ5v@wFMYQ5v@wGMlQ5v@wHMWQ5v@wINCQ5v@wJNkQ5v@wKOKQ5v@wLOXQ5v@wMOIQ5v@wNPLQ5v@wOPYQ5v@wPPJQ5v@wQRGQ5v@wRRGQ5v@wSTMQ5v@wTTfQ5v@wUTKQ5v@wVUYQ5v@wWU@19Q5v@wXU@18Q5v@wYUWQ5v@wZVKQ5v@waVdQ5v@wbVaQ5v@wcVKQ5v@wdWgQ5v@weWaQ5v@wfXzQ5v@wgX@1IQ5v@whXyQ5v@wiXTQ5v@wjY@10Q5v@wkY@1JQ5v@wlYzQ5v@wmYUQ5v@wnZKQ5v@woZiQ5v@wpZgQ5v@wqaKQ5v@wrajQ5v@wsahQ5v@wtbzQ5v@wub@1cQ5v@wvb@1mQ5v@wwb@1bQ5v@wxbUQ5v@wybOQ5v@wzc@1BQ5v@x0c@1UQ5v@x1c@1cQ5v@x2c@1vQ5v@x3c@24Q5v@x4ciQ5v@x5ccQ5v@x6dKQ5v@x7duQ5v@x8dsQ5v@x9eKQ5v@xAeSQ5v@xBfKQ5v@xCfTQ5v@xDfmQ5v@xEfSQ5v@xFgKQ5v@xGgUQ5v@xHh@11Q5v@xIh@1IQ5v@xJh@1OQ5v@xKhKQ5v@xLiKQ5v@xMirQ5v@xNiyQ5v@xOiwQ5v@xPkKQ5v@xQkXQ5v@xRkIQ5v@xSlKQ5v@xTlXQ5v@xUlIQ5v@xVmMQ5v@xWmbQ5v@xXmkQ5v@xYmiQ5v@xZmKQ5v@xanMQ5v@xbnbQ5v@xcnlQ5v@xdnjQ5v@xenKQ5v@xfoXQ5v@xgobQ5v@xhoZQ5v@xiogQ5v@xjokQ5v@xkoiQ5v@xloqQ5v@xmouQ5v@xnosQ5v@xoo@13Q5v@xpo@11Q5v@xqo@19Q5v@xro@1DQ5v@xso@1BQ5v@xto@1NQ5v@xuo@1LQ5v@xvoWQ5v@xwoUQ5v@xyrvQ5v@xzr@1YQ5v@y0r@1fQ5v@y1r@1XQ5v@y2rQQ5v@y3rKQ5v@y4sGQ5v@y5sOQ5v@y6tGQ5v@y7tPQ5v@y8tfQ5v@y9tsQ5v@yAteQ5v@yBtyQ5v@yCt@1BQ5v@yDtxQ5v@yEtOQ5v@yFuGQ5v@yGuQQ5v@yHvcQ5v@yIvWQ5v@yJwGQ5v@yKweQ5v@yLwcQ5v@yMxGQ5v@yNxfQ5v@yOxdQ5v@yPyxQ5v@yQy@1EQ5v@yRy@1KQ5v@ySyGQ5v@yTzXQ5v@yUzcQ5v@yVzhQ5v@yWzmQ5v@yXzWQ5v@yYzUQ5v@yZ@11gQ5v@ya@11xQ5v@yb@11@14Q5v@yc@11QQ5v@yd@11KQ5v@ye@12lQ5v@yf@12uQ5v@yg@12@1BQ5v@yh@12@1QQ5v@yi@12@1XQ5v@yj@12CQ5v@yk@13JQ5v@yl@13CQ5v@ym@16FQ5v@yn@17HQ5v@yo@17OQ5v@yp@17UQ5v@yq@17SQ5v@yr@17LQ5v@ys@17bQ5v@yt@17YQ5v@yu@17HQ5v@yv@17lQ5v@yw@17eQ5v@yx@18QQ5v@yy@18WQ5v@yz@18UQ5v@z0@18OQ5v@z1@18ZQ5v@z2@18iQ5v@z3@18gQ5v@z4@18ZQ5v@z5@19GQ5v@z6@19NQ5v@z7@19KQ5v@z8@19GQ5v@z9@18lQ5v@zA@18vQ5v@zB@18sQ5v@zC@18lQ5v@zE@1BJQ5v@zF@1BPQ5v@zG@1BNQ5v@zH@1BCQ5v@zI@1q8Q5v@zJ@1sGQ5v@zK@1seQ5v@zL@1tGQ5v@zM@1wGQ5v@zN@1wJQ5v@zO@1xGQ5v@zP@1rJQ5v@zQ@1rJQ5v@zR@1yLQ5v@zTLT25v@zU@1ycQ5v@zVLj25v@zW@1ybQ5v@zX@1rCQ5v@zY@218Q5v@zZ@23GQ5v@za@23eQ5v@zb@24GQ5v@zc@27GQ5v@zd@27JQ5v@ze@28GQ5v@zf@29GQ5v@zg@22JQ5v@zh@22JQ5v@zi@29PQ5v@zkLT25v@zl@29gQ5v@zmLj25v@zn@29fQ5v@zo@22CQ5v@zp@2C8Q5v@zq@2DGQ5v@zr@2DPQ5v@zs@2DMQ5v@zt@2DRQ5v@zu@2DUQ5v@zv@2DeQ5v@zw@2DbQ5v@zx@2DGQ5v@zy@2DhQ5v@zz@2FGQ5v#100@2FeQ5v#101@2GGQ5v#102@2HGQ5v#103@2HKQ5v#104@2HOQ5v#105@2HVQ5v#106@2IGQ5v#107@2JGQ5v#108@2JJQ5v#109@2KGQ5v#10A@2EJQ5v#10B@2EJQ5v#10C@2LLQ5v#10ELT25v#10F@2LcQ5v#10GLj25v#10H@2LbQ5v#10I@2ECQ5v#10J@2O8Q5v#10K@2PGQ5v#10L@2PPQ5v#10M@2PMQ5v#10N@2PRQ5v#10O@2PUQ5v#10P@2PeQ5v#10Q@2PbQ5v#10R@2PGQ5v#10S@2PhQ5v#10T@2RGQ5v#10U@2ReQ5v#10V@2SGQ5v#10W@2UGQ5v#10X@2UNQ5v#10Y@2VGQ5v#10Z@2VJQ5v#10a@2WGQ5v#10b@2QJQ5v#10c@2QJQ5v#10d@2XLQ5v#10fLT25v#10g@2XcQ5v#10hLj25v#10i@2XbQ5v#10j@2QCQ5v#10k@2a8Q5v#10l@2bGQ5v#10m@2bMQ5v#10n@2bJQ5v#10o@2bOQ5v#10p@2bRQ5v#10q@2bXQ5v#10r@2bUQ5v#10s@2bZQ5v#10t@2bcQ5v#10u@2biQ5v#10v@2bfQ5v#10w@2bkQ5v#10x@2bnQ5v#10y@2btQ5v#10z@2bqQ5v#110@2bGQ5v#111@2bwQ5v#112@2dGQ5v#113@2deQ5v#114@2eGQ5v#115@2fGQ5v#116@2fKQ5v#117@2fOQ5v#118@2fSQ5v#119@2gGQ5v#11A@2gKQ5v#11B@2hGQ5v#11C@2hKQ5v#11D@2iGQ5v#11E@2cJQ5v#11F@2cJQ5v#11G@2jLQ5v#11ILT25v#11J@2jcQ5v#11KLj25v#11L@2jbQ5v#11M@2cCQ5v#11N@2m8Q5v#11O@2oGQ5v#11P@2oeQ5v#11Q@2pGQ5v#11R@2qGQ5v#11S@2qKQ5v#11T@2qOQ5v#11U@2qSQ5v#11V@2rGQ5v#11W@2rKQ5v#11X@2sGQ5v#11Y@2sKQ5v#11Z@2tGQ5v#11a@2nJQ5v#11b@2nJQ5v#11c@2uLQ5v#11eLT25v#11f@2ucQ5v#11gLj25v#11h@2ubQ5v#11i@2nCQ5v#11j@2x8Q5v#11k@2zGQ5v#11l@2zeQ5v#11m@30GQ5v#11n@33GQ5v#11o@33JQ5v#11p@34GQ5v#11q@35GQ5v#11r@2yJQ5v#11s@2yJQ5v#11t@35LQ5v#11vLT25v#11w@35cQ5v#11xLj25v#11y@35bQ5v#11z@2yCQ5v#120@388Q5v#121@3AGQ5v#122@3AeQ5v#123@3BGQ5v#124@3EGQ5v#125@3EJQ5v#126@3FGQ5v#127@3GGQ5v#128@39JQ5v#129@39JQ5v#12A@3GPQ5v#12CLT25v#12D@3GgQ5v#12ELj25v#12F@3GfQ5v#12G@39CQ5v#12H@3J8Q5v#12I@3LGQ5v#12J@3LeQ5v#12K@3MGQ5v#12L@3NGQ5v#12M@3NKQ5v#12N@3NOQ5v#12O@3NSQ5v#12P@3OGQ5v#12Q@3OKQ5v#12R@3PGQ5v#12S@3PKQ5v#12T@3QGQ5v#12U@3RGQ5v#12V@3KJQ5v#12W@3KJQ5v#12X@3RPQ5v#12ZLT25v#12a@3RgQ5v#12bLj25v#12c@3RfQ5v#12d@3KCQ5v#12e@3W8Q5v#12f@3XMQ5v#12g@3XRQ5v#12h@3XLQ5v#12i@3XJQ5v#12j@3YHQ5v#12k@3YGQ5v#12l@3YGQ5v#12m@3aTQ5v#12n@3aNQ5v#12o@3bGQ5v#12p@3bVQ5v#12q@3bYQ5v#12r@3bTQ5v#12s@3cGQ5v#12t@3cWQ5v#12u@3cZQ5v#12v@3cUQ5v#12w@3dxQ5v#12x@3d@15Q5v#12y@3d@1CQ5v#12z@3dGQ5v#130@3eGQ5v#131@3eNQ5v#132@3eSQ5v#133@3eQQ5v#134@3gJQ5v#135@3gCQ5v#136@3j8Q5v#137@3kIQ5v#138@3kKQ5v#139@3kNQ5v#13A@3kGQ5v#13B@3kGQ5v#13C@3kYQ5v#13D@3kRQ5v#13E@3lcQ5v#13F@3lbQ5v#13G@3lGQ5v#13H@3mfQ5v#13I@3mjQ5v#13J@3miQ5v#13K@3mnQ5v#13L@3mzQ5v#13M@3mPQ5v#13N@3mJQ5v#13O@3nfQ5v#13P@3nlQ5v#13Q@3ntQ5v#13R@3nwQ5v#13S@3nzQ5v#13T@3n@13Q5v#13U@3n@12Q5v#13V@3n@17Q5v#13W@3n@1BQ5v#13X@3n@1AQ5v#13Y@3nJQ5v#13Z@3nCQ5v#13a@3u8Q5v#13b@3wWQ5v#13c@3wIQ5v#13d@3wsQ5v#13e@3xYQ5v#13f@3xKQ5v#13g@3wGQ5v#13h@3xvQ5v#13i@3yGQ5v#13j@3yLQ5v#13k@3yIQ5v#13l@3yNQ5v#13m@3zGQ5v#13n@3zLQ5v#13o@3zIQ5v#13p@3wGQ5v#13qLT25v#13r@40QQ5v#13sLj25v#13t@40PQ5v#13u@42IQ5v#13v@42MQ5v#13w@42KQ5v#13x@42GQ5v#13y@43IQ5v#13z@43MQ5v#140@43KQ5v#141@43GQ5v#142@44GQ5v#143@44KQ5v#144@44NQ5v#145@44GQ5v#146@45WQ5v#147@45bQ5v#148@45VQ5v#149@45KQ5v#14A@46VQ5v#14B@46KQ5v#14C@46IQ5v#14D@47VQ5v#14E@47KQ5v#14F@47IQ5v#14H@49MQ5v#14I@49KQ5v#14J@4BGQ5v#14K@4BLQ5v#14L@4BIQ5v#14M@4BWQ5v#14N@4BZQ5v#14O@4BeQ5v#14P@4BbQ5v#14Q@4BGQ5v#14R@4ByQ5v#14S@4BrQ5v#14T@4CcQ5v#14U@4CbQ5v#14V@4CGQ5v#14W@4DfQ5v#14X@4DjQ5v#14Y@4DiQ5v#14Z@4DnQ5v#14a@4DqQ5v#14b@4DPQ5v#14c@4DJQ5v#14d@4EZQ5v#14e@4EeQ5v#14f@4EmQ5v#14g@4EpQ5v#14h@4EsQ5v#14i@4EwQ5v#14j@4EvQ5v#14k@4E@10Q5v#14l@4E@14Q5v#14m@4E@13Q5v#14n@4ECQ5v#14o@4FJQ5v#14p@4FCQ5v#14q@1F8Q5v#14r@1GiQ5v#14s@1GgQ5v#14t@1HPQ5v#14u@1HNQ5v#14v@1IQQ5v#14w@1IOQ5v#14y44Q5v#1503WZ5v#1513LZ5v#153L8Z5v#15514Z5v#15638i5v#1573Vi5v#1583Yi5v#1593Pi5v#15B24i5v#15DLbj5v#15ELLj5v#15GV8j5v#15HXNj5v#15IXLj5v#15JYPj5v#15KYNj5v#15LZOj5v#15MZMj5v#15NaRj5v#15OaPj5v#15PbWj5v#15QbUj5v#15RcJj5v#15ScCj5v#15Tf8j5v#15UhOj5v#15VhMj5v#15WiRj5v#15XiPj5v#15YjWj5v#15ZjUj5v#15akJj5v#15bkCj5v#15cn8j5v#15dpPj5v#15epNj5v#15fqRj5v#15gqPj5v#15hrWj5v#15irUj5v#15jsJj5v#15ksCj5v#15lv8j5v#15mwGj5v#15nwWj5v#15owTj5v#15pwGj5v#15qyKj5v#15ryTj5v#15syhj5v#15tyqj5v#15uzKj5v#15vzVj5v#15wzhj5v#15xzrj5v#15yz@13j5v#15zxjj5v#160xTj5v#161@16Oj5v#162@16Xj5v#163@16lj5v#164@16uj5v#165@17Oj5v#166@18Oj5v#167@19Oj5v#168@19Yj5v#169@19kj5v#16A@15Kj5v#16B@1ARj5v#16C@1AQj5v#16D@14Yj5v#16E@1CKj5v#16F@1CKj5v#16G@1Dsj5v#16H@1D@11j5v#16I@1D@1Fj5v#16J@1D@1Oj5v#16K@1D@1Yj5v#16L@1D@1jj5v#16M@1D@1vj5v#16N@1Drj5v#16O@1Dbj5v#16P@1HPj5v#16Q@1Hjj5v#16R@1Hhj5v#16S@1Hqj5v#16T@1Hoj5v#16U@1HNj5v#16V@1IMj5v#16W@1Irj5v#16X@1Iqj5v#16Y@1IKj5v#16Z@1JGj5v#16a@1JRj5v#16b@1JOj5v#16c@1JGj5v#16d@1Kgj5v#16e@1Kmj5v#16f@1Ktj5v#16g@1Krj5v#16h@1KUj5v#16i@1KOj5v#16j@1LGj5v#16k@1Lhj5v#16l@1Lvj5v#16m@1Ltj5v#16n@1OJj5v#16o@1OCj5v#16pQ8j5v#16qRIj5v#16rRNj5v#16sRGj5v#16tRGj5v#16uR@1Tj5v#16vR@14j5v#16wRuj5v#16xSOj5v#16ySMj5v#17054j5v#172GUk5v#173GLk5v#175C8k5v#176Dak5v#177DNk5v#178DCk5v#179IFk5v#17AJJk5v#17BJWk5v#17CJUk5v#17DJCk5v#17EMFk5v#17FNIk5v#17GNVk5v#17HNTk5v#17INGk5v#17JOJk5v#17KOhk5v#17LOgk5v#17MOHk5v#17NPGk5v#17OPOk5v#17PPLk5v#17QPGk5v#17RQek5v#17SQqk5v#17TQRk5v#17UQLk5v#17VRGk5v#17WRak5v#17XRhk5v#17YRfk5v#17ZTJk5v#17aTCk5v#17bWFk5v#17cXwk5v#17dXHk5v#17eXGk5v#17fXGk5v#17gYmk5v#17hY@1Hk5v#17iY@1Fk5v#17jY@1Ok5v#17kY@1Mk5v#17lYQk5v#17mYGk5v#17nabk5v#17oa@10k5v#17paak5v#17qaCk5v#17rdFk5v#17seMk5v#17teCk5v#17udFk5v#17vhFk5v#17wiok5v#17xink5v#17yiGk5v#17ziGk5v#180jmk5v#181j@1Ck5v#182j@1Ak5v#183j@1Jk5v#184j@1Hk5v#185jQk5v#186jGk5v#187lbk5v#188lyk5v#189lak5v#18AlCk5v#18BoFk5v#18Cpyk5v#18DpJk5v#18EpCk5v#18FtFk5v#18Gubk5v#18Huak5v#18IuCk5v#18JyFk5v#18Kzbk5v#18Lzak5v#18MzCk5v#18N@13Fk5v#18O@14bk5v#18P@14ak5v#18Q@14Ck5v#18R78k5v#18S8Vk5v#18T8Tk5v#18U9Rk5v#18V9Pk5v#18X24k5v#18ZTZl5v#18aTLl5v#18bUal5v#18cULl5v#18eWFl5v#18fXJl5v#18gXVl5v#18hXfl5v#18iXll5v#18jXIl5v#18kXxl5v#18lXwl5v#18mXGl5v#18nYNl5v#18oYol5v#18pYnl5v#18qYLl5v#18rZGl5v#18sZSl5v#18tZPl5v#18uZGl5v#18vagl5v#18wasl5v#18xaVl5v#18yaPl5v#18zbGl5v#190bdl5v#191bkl5v#192bil5v#193dJl5v#194dCl5v#195o8l5v#196pKl5v#197pIl5v#198qLl5v#199qJl5v#19ArNl5v#19BrLl5v#19CsMl5v#19DsKl5v#19EtHl5v#19FtFl5v#19GuHl5v#19HuFl5v#19IvNl5v#19JvLl5v#19MwLl5v#19NwLl5v#19OwCl5v#19PxYl5v#19QxXl5v#19RxNl5v#19SyKl5v#19TyPl5v#19UyMl5v#19VyKl5v#19WzKl5v#19XzTl5v#19YzQl5v#19ZzKl5v#19b@10Rl5v#19c@10Wl5v#19d@10Tl5v#19e@10bl5v#19f@10el5v#19g@10jl5v#19h@10gl5v#19i@10Rl5v#19j@11Ul5v#19k@11Kl5v#19m@13Kl5v#19n@13Wl5v#19o@13Vl5v#19p@14Rl5v#19q@14nl5v#19r@14ml5v#19s@14Pl5v#19t@15Ol5v#19u@15Wl5v#19v@15Tl5v#19w@15Ol5v#19x@16Wl5v#19y@16Ul5v#19z@17gl5v#1A0@17ml5v#1A1@17Zl5v#1A2@17Tl5v#1A3@18Sl5v#1A4@18el5v#1A5@18bl5v#1A6@18Sl5v#1A7@18vl5v#1A8@18tl5v#1A9@19Ol5v#1AA@19bl5v#1AB@19al5v#1AC@1BVl5v#1AD@1BTl5v#1AE@1CKl5v#1AF@1CRl5v#1AG@1CZl5v#1AH@1Cdl5v#1AI@1CXl5v#1AJ@1CQl5v#1AK@1DKl5v#1AL@1DRl5v#1AM@1DQl5v#1AN@1EKl5v#1AO@1EXl5v#1AP@1EWl5v#1AQ@1Fcl5v#1AR@1Fkl5v#1AS@1Fol5v#1AT@1Fbl5v#1AU@1FRl5v#1AV@1GKl5v#1AW@1GTl5v#1AX@1GXl5v#1AY@1GQl5v#1AZ@1GKl5v#1Ae@1JCl5v#1Af@1JMl5v#1Ag@1JUl5v#1Ah@1Jdl5v#1Ai@1Jll5v#1Aj@1Jbl5v#1Ak@1J@13l5v#1Al@1J@17l5v#1Am@1J@11l5v#1An@1J@1Ml5v#1Ao@1J@1Kl5v#1Ap@1J@1Ql5v#1Aq@1J@1Ol5v#1Ar@1JIl5v#1As@1JCl5v#1At@1LGl5v#1Au@1LSl5v#1Av@1LPl5v#1Aw@1LGl5v#1Ax@1Opl5v#1Ay@1Ool5v#1Az@1ONl5v#1B2@1PTl5v#1B3@1PTl5v#1B4@1PGl5v#1B5@1QKl5v#1B6@1Qal5v#1B7@1QZl5v#1BA@1RWl5v#1BB@1Rbl5v#1BC@1RWl5v#1BD@1RKl5v#1BE@1SOl5v#1BF@1Shl5v#1BG@1Sll5v#1BH@1Swl5v#1BI@1Sul5v#1BJ@1TOl5v#1BK@1Tgl5v#1BL@1Tkl5v#1BM@1Tvl5v#1BN@1Ttl5v#1BW@1Yvl5v#1BX@1Y@1Ml5v#1BY@1Y@1Pl5v#1BZ@1YCl5v#1Ba@1Zvl5v#1Bb@1Z@1Ml5v#1Bc@1Z@1Pl5v#1Bd@1ZCl5v#1Be@1avl5v#1Bf@1a@1Ml5v#1Bg@1a@1Pl5v#1Bh@1aCl5v#1Bi@1bXl5v#1Bj@1byl5v#1Bk@1b@11l5v#1Bl@1b@18l5v#1Bm@1bCl5v#1Bn@1dCl5v#1Bo@1dKl5v#1Bp@1dPl5v#1Bq@1dNl5v#1Br@1eCl5v#1Bs@1eKl5v#1Bt@1ePl5v#1Bu@1eNl5v#1Bvo8l5v#1Bw@1n8l5v#1Bx@1oMl5v#1By@1oCl5v#1Bz@1n8l5v#1C0h8l5v#1C1iUl5v#1C2iSl5v#1C3jUl5v#1C4jbl5v#1C5jZl5v#1C6jfl5v#1C7jdl5v#1C8jSl5v#1C9kZl5v#1CAkfl5v#1CBkCl5v#1CClXl5v#1CDldl5v#1CElgl5v#1CFlCl5v#1CHE4l5v#1CIbFm5v#1CJgLm5v#1CKgJm5v#1CLhQm5v#1CMhVm5v#1CNhOm5v#1COiOm5v#1CPiMm5v#1CQjGm5v#1CRjLm5v#1CSjVm5v#1CTjTm5v#1CUjGm5v#1CVkPm5v#1CWkVm5v#1CXkUm5v#1CYkXm5v#1CZkNm5v#1CalRm5v#1CblYm5v#1CclWm5v#1CdlPm5v#1CemGm5v#1CfmRm5v#1CgmQm5v#1ChnNm5v#1CinLm5v#1CjoNm5v#1CkoRm5v#1Clobm5v#1CmoZm5v#1Cnokm5v#1Coonm5v#1Cpozm5v#1Cqoxm5v#1CroNm5v#1CspQm5v#1CtpOm5v#1CuqKm5v#1CvqTm5v#1CwqSm5v#1CxrSm5v#1CyrQm5v#1CztRm5v#1D0tdm5v#1D1tbm5v#1D2tpm5v#1D3tsm5v#1D4t@10m5v#1D5t@16m5v#1D6t@15m5v#1D7t@1Gm5v#1D8tym5v#1D9t@1Pm5v#1DAt@1Nm5v#1DBtRm5v#1DCuVm5v#1DDubm5v#1DEukm5v#1DFukm5v#1DGukm5v#1DHubm5v#1DIuam5v#1DJuTm5v#1DKvOm5v#1DLvWm5v#1DMvVm5v#1DNwOm5v#1DOwXm5v#1DPwbm5v#1DQwUm5v#1DRwOm5v#1DTzRm5v#1DUzdm5v#1DVzbm5v#1DWzpm5v#1DXzsm5v#1DYz@10m5v#1DZz@16m5v#1Daz@1Km5v#1Dbz@1Im5v#1Dcz@15m5v#1Ddz@1Mm5v#1Dezym5v#1Dfz@1Vm5v#1Dgz@1Tm5v#1DhzRm5v#1Di@10Vm5v#1Dj@10dm5v#1Dk@10bm5v#1Dl@10bm5v#1Dm@10bm5v#1Dn@10dm5v#1Do@10am5v#1Dp@10Tm5v#1Dq@11Om5v#1Dr@11Wm5v#1Ds@11Vm5v#1Dt@12Om5v#1Du@12Xm5v#1Dv@12bm5v#1Dw@12Um5v#1Dx@12Om5v#1E0@15Gm5v#1E1@15km5v#1E2@15Vm5v#1E3@15Qm5v#1E4@17Jm5v#1E5@17Cm5v#1E6@1AFm5v#1E7@1BJm5v#1E8@1BNm5v#1E9@1BCm5v#1EA98m5v#1EBAGm5v#1ECAEm5v#1EDBLm5v#1EEBQm5v#1EFBPm5v#1EGBTm5v#1EHBSm5v#1EIBVm5v#1EJBJm5v#1EKCHm5v#1ELCFm5v#1EMDHm5v#1ENDFm5v#1EOEKm5v#1EPEIm5v#1ESFNm5v#1ETFNm5v#1EUFCm5v#1EVGGm5v#1EWGYm5v#1EXGXm5v#1EYHKm5v#1EZHIm5v#1EcISm5v#1EdISm5v#1EeIGm5v#1EfJKm5v#1EgJdm5v#1EhJhm5v#1EiJsm5v#1EjJqm5v#1EkKKm5v#1ElKYm5v#1EmKWm5v#1EnLKm5v#1EoLYm5v#1EpLWm5v#1EqMKm5v#1ErMXm5v#1EsMVm5v#1EtNKm5v#1EuNim5v#1EvNgm5v#1EwOKm5v#1ExORm5v#1EyOQm5v#1EzPKm5v#1F0PRm5v#1F1PQm5v#1F2QKm5v#1F3QUm5v#1F4QTm5v#1F5RKm5v#1F6RPm5v#1F7RTm5v#1F8RMm5v#1F9RKm5v#1FETGm5v#1FFTLm5v#1FGTIm5v#1FHTGm5v#1FMYwm5v#1FNY@10m5v#1FOY@14m5v#1FPY@1Bm5v#1FQYCm5v#1FS54m5v#1FTY8n5v#1FUZQn5v#1FVZOn5v#1FWaSn5v#1FXaQn5v#1FYbZn5v#1FZbfn5v#1FabCn5v#1FbcKn5v#1FccNn5v#1FdcQn5v#1FecTn5v#1FfcJn5v#1FgcHn5v#1Fhdtn5v#1Fid@11n5v#1Fjd@1En5v#1Fkd@1Kn5v#1Fld@1Sn5v#1FmdHn5v#1FndGn5v#1FodGn5v#1Fpepn5v#1Fqe@1Mn5v#1Fre@1Kn5v#1Fse@1Vn5v#1Fte@1Tn5v#1FueQn5v#1FveGn5v#1FwgPn5v#1FxgUn5v#1FygTn5v#1FzgNn5v#1G0hQn5v#1G1hVn5v#1G2hUn5v#1G3hOn5v#1G4iUn5v#1G5iZn5v#1G6iYn5v#1G7iSn5v#1G8jYn5v#1G9jdn5v#1GAjcn5v#1GBjWn5v#1GDL4n5v#1GFLio5v#1GGLLo5v#1GIoFo5v#1GJpgo5v#1GKpmo5v#1GLpqo5v#1GMpwo5v#1GNpzo5v#1GOp@12o5v#1GPp@15o5v#1GQpfo5v#1GRpGo5v#1GSqPo5v#1GTqzo5v#1GUqyo5v#1GVqNo5v#1GWrGo5v#1GXrUo5v#1GYrRo5v#1GZrGo5v#1Gasio5v#1Gbsoo5v#1Gcsso5v#1Gdsyo5v#1Ges@15o5v#1Gfs@18o5v#1Ggs@1Bo5v#1GhsXo5v#1GisRo5v#1GjtGo5v#1Gktmo5v#1Gltto5v#1Gmtro5v#1GnvJo5v#1GovCo5v#1GpyFo5v#1GqzLo5v#1GrzJo5v#1Gs@12Go5v#1Gt@12No5v#1Gu@12Lo5v#1Gv@12Ro5v#1Gw@12Wo5v#1Gx@12Uo5v#1Gy@12ao5v#1Gz@12ho5v#1H0@12fo5v#1H1@12lo5v#1H2@12po5v#1H3@12no5v#1H4@12to5v#1H5@12xo5v#1H6@12vo5v#1H7@12@11o5v#1H8@12@15o5v#1H9@12@13o5v#1HA@12@19o5v#1HB@12@1Ho5v#1HC@12@1Fo5v#1HD@13Go5v#1HE@10Co5v#1HF@14Jo5v#1HG@14Vo5v#1HH@14Uo5v#1HI@14Co5v#1HJO8o5v#1HKTlo5v#1HLTro5v#1HMTvo5v#1HNT@11o5v#1HOT@14o5v#1HPT@17o5v#1HQT@1Ao5v#1HRTko5v#1HSTLo5v#1HTVZo5v#1HUVfo5v#1HVVCo5v#1HWWMo5v#1HXWLo5v#1HYWJo5v#1HZYxo5v#1HaY@13o5v#1HbY@19o5v#1HcY@1Do5v#1HdY@1Jo5v#1HeY@1Mo5v#1HfY@1Po5v#1HgY@1So5v#1HhYLo5v#1HiYJo5v#1HjZGo5v#1HkZao5v#1HlZdo5v#1HmZlo5v#1HnZio5v#1HoZGo5v#1HpaKo5v#1HqaIo5v#1HrbOo5v#1HsbNo5v#1HtbNo5v#1HucQo5v#1HvcOo5v#1HwcOo5v#1HxcOo5v#1HycQo5v#1HzcUo5v#1I0cSo5v#1I1cOo5v#1I2c@17o5v#1I3clo5v#1I4cbo5v#1I5dVo5v#1I6dUo5v#1I8gKo5v#1I9gCo5v#1IAhOo5v#1IBiuo5v#1ICi@1Ko5v#1IDi@1Io5v#1IEi@1Po5v#1IFi@1No5v#1IGiYo5v#1IHiOo5v#1IIjuo5v#1IJj@1Po5v#1IKj@1No5v#1ILj@1Uo5v#1IMj@1So5v#1INjYo5v#1IOjOo5v#1IPkZo5v#1IQkPo5v#1ISH4o5v#1IT@128p5v#1IU@13Mp5v#1IV@13Cp5v#1IW@128p5v#1IX@168p5v#1IY@17cp5v#1IZ@17fp5v#1Ia@17ip5v#1Ib@17bp5v#1Ic@17Cp5v#1Id@1A8p5v#1Ie@1BGp5v#1If@1BGp5v#1Ig@1C@12p5v#1Ih@1C@18p5v#1Ii@1C@1Kp5v#1Ij@1C@1ip5v#1Ik@1C@1lp5v#1Il@1C@1op5v#1Im@1CNp5v#1In@1CGp5v#1Ip@1wgC5v#1Iq@1xGC5v#1Ir@1Egp5v#1Is@1Ejp5v#1It@1Emp5v#1Iu@1Eqp5v#1Iv@1Eup5v#1Iw@1Ezp5v#1Ix@1E@12p5v#1Iy@1v@1BC5v#1Iz@1Efp5v#1J0@1Ftp5v#1J1@1Fzp5v#1J2@1F@1Np5v#1J3@1F@1Qp5v#1J4@1F@1Tp5v#1J5@1FNp5v#1J6@1FGp5v#1J7@1A8p5v#1J8H8p5v#1J9IOp5v#1JAIMp5v#1JBZNp5v#1JCZQp5v#1JDZMp5v#1JEZKp5v#1JFaGp5v#1JGaGp5v#1JHbTp5v#1JIbRp5v#1JJcdp5v#1JKcjp5v#1JLcGp5v#1JMdZp5v#1JNdlp5v#1JOdXp5v#1JPeGp5v#1JQeip5v#1JReop5v#1JSexp5v#1JTe@13p5v#1JUehp5v#1JVfbp5v#1JWfhp5v#1JXfkp5v#1JYfwp5v#1JZfGp5v#1Jagbp5v#1Jbghp5v#1Jcgkp5v#1Jdgwp5v#1JegGp5v#1Jfhbp5v#1Jghhp5v#1Jhhkp5v#1Jihwp5v#1JjhGp5v#1JkiTp5v#1JliRp5v#1Jnkdp5v#1Jokjp5v#1JpkGp5v#1JqmKp5v#1JrnKp5v#1JsoKp5v#1JtoWp5v#1JupKp5v#1JvpWp5v#1Jwpbp5v#1JxqKp5v#1JyqWp5v#1Jzqbp5v#1K0rKp5v#1K1rWp5v#1K2sKp5v#1K3sWp5v#1K4tKp5v#1K5tWp5v#1K6uKp5v#1K7uWp5v#1K8vKp5v#1K9vWp5v#1KAwKp5v#1KBlGp5v#1KCyPp5v#1KDyXp5v#1KEyWp5v#1KFyNp5v#1KGzQp5v#1KHzYp5v#1KIzXp5v#1KJzOp5v#1KL94p5v#1KMV8S5v#1KNWqS5v#1KOW@14S5v#1KPWpS5v#1KQWGS5v#1KRXKS5v#1KSXfS5v#1KTXjS5v#1KUXiS5v#1KVXeS5v#1KWXIS5v#1KXYGS5v#1KYYPS5v#1KZYMS5v#1KaYGS5v#1Kba@12S5v#1Kca@1pS5v#1KdaQS5v#1KeaGS5v#1KfdJS5v#1KgdYS5v#1KhdXS5v#1KidCS5v#1Kjg8S5v#1KkhGS5v#1KlhGS5v#1KmhdS5v#1KnhWS5v#1KqjPS5v#1KrjPS5v#1KsjCS5v#1KtkLS5v#1KukXS5v#1KvkKS5v#1KwkKS5v#1KxlRS5v#1KylKS5v#1L3pTS5v#1L4pRS5v#1L5qJS5v#1L6qCS5v#1L7t8S5v#1L8uGS5v#1L9uGS5v#1LAudS5v#1LBuWS5v#1LCwNS5v#1LDwLS5v#1LGxPS5v#1LHxPS5v#1LIxCS5v#1LJyGS5v#1LKySS5v#1LLyjS5v#1LMyoS5v#1LNytS5v#1LOymS5v#1LPyPS5v#1LQyGS5v#1LV@11JS5v#1LW@11US5v#1LX@11SS5v#1LY@11CS5v#1LZ@148S5v#1La@15LS5v#1Lb@15JS5v#1Le@16PS5v#1Lf@16PS5v#1Lg@16CS5v#1Lh@17GS5v#1Li@17US5v#1Lj@17iS5v#1Lk@17TS5v#1Lp@19CS5v#1Lq@19NS5v#1Lr@1AJS5v#1Ls@1ACS5v#1LtH8S5v#1LuIYS5v#1LvIkS5v#1LwIWS5v#1LxJGS5v#1LyJMS5v#1LzJXS5v#1M0JUS5v#1M1JGS5v#1M2KXS5v#1M3KVS5v#1M7MTS5v#1M8MTS5v#1M9MGS5v#1MANPS5v#1MBNUS5v#1MCNNS5v#1MDOKS5v#1MEObS5v#1MFOhS5v#1MGOfS5v#1MHPKS5v#1MIPYS5v#1MJPXS5v#1MKQKS5v#1MLQaS5v#1MMQfS5v#1MNQXS5v#1MOQXS5v#1MU84S5v#1MV68T5v#1MW6hT5v#1MX6yT5v#1MY6@15T5v#1MZ6xT5v#1Ma6cT5v#1Mb7OT5v#1Mc7MT5v#1Me14T5v#1MfG8T5v#1MgGfT5v#1MhGwT5v#1MiG@13T5v#1MjGvT5v#1MkGaT5v#1MlHMT5v#1MmHKT5v#1MoB4T5v#1MpM8T5v#1MqMWT5v#1MrMRT5v#1MtL4T5v#1MvzjU5v#1MwziU5v#1MxzLU5v#1Mzn8U5v#1N0oGU5v#1N1oWU5v#1N2oTU5v#1N3oGU5v#1N4ojU5v#1N5ocU5v#1N6pHU5v#1N7pGU5v#1N8pGU5v#1N9p@1AU5v#1NApfU5v#1NBpVU5v#1NCqGU5v#1NDqbU5v#1NEqYU5v#1NFqGU5v#1NGrvU5v#1NHrQU5v#1NIrGU5v#1NJtaU5v#1NKtrU5v#1NLtzU5v#1NMt@1GU5v#1NNt@1PU5v#1NOtMU5v#1NPtGU5v#1NQuCU5v#1NRuYU5v#1NSuWU5v#1NTvRU5v#1NUvPU5v#1NVwJU5v#1NWwCU5v#1NX@108U5v#1NY@11GU5v#1NZ@11GU5v#1Na@12NU5v#1Nb@12GU5v#1Nc@19pU5v#1Nd@19vU5v#1Ne@19@1EU5v#1Nf@19CU5v#1Ng@1BLU5v#1Nh@1BsU5v#1Ni@1BrU5v#1Nj@1BJU5v#1Nk@1CGU5v#1Nl@1CPU5v#1Nm@1CNU5v#1Nn@1CGU5v#1No@1DVU5v#1Np@1DTU5v#1Nq@1EJU5v#1Nr@1ETU5v#1Ns@1EQU5v#1Nt@1EJU5v#1Nu@1E@1FU5v#1Nv@1EgU5v#1Nw@1EWU5v#1Nx@1FNU5v#1Ny@1FGU5v#1Nz@1IGU5v#1O0@1IGU5v#1O1@1MrU5v#1O2@1MIU5v#1O3@1NKU5v#1O4@1NPU5v#1O5@1NMU5v#1O6@1NKU5v#1O7@1OqU5v#1O8@1OoU5v#1O9@1PqU5v#1OA@1PoU5v#1OC@1RKU5v#1OD@1RnU5v#1OE@1RnU5v#1OF@1RnU5v#1OG@1WKU5v#1OH@1WqU5v#1OI@1WoU5v#1OJ@1WKU5v#1OK@1XVU5v#1OL@1XUU5v#1OM@1bJU5v#1ON@1bCU5v#1OO@1eFU5v#1OP@1ffU5v#1OQ@1fpU5v#1OR@1feU5v#1OS@1fCU5v#1OT@1iFU5v#1OU@1jfU5v#1OV@1jpU5v#1OW@1jeU5v#1OX@1jCU5v#1OY@1mFU5v#1OZ@1nHU5v#1Oa@1nGU5v#1Ob@1nGU5v#1Oc@1okU5v#1Od@1ojU5v#1Oe@1oLU5v#1Of@1pRU5v#1Og@1pWU5v#1Oh@1pVU5v#1Oi@1pPU5v#1Oj@1qOU5v#1Ok@1qTU5v#1Ol@1qSU5v#1Om@1qMU5v#1On@1rPU5v#1Oo@1rUU5v#1Op@1rTU5v#1Oq@1rNU5v#1Or@1tkU5v#1Os@1tUU5v#1Ot@1tOU5v#1Ou@1uCU5v#1Ov@1uWU5v#1Ow@1uUU5v#1Ox@1vCU5v#1Oy@1vXU5v#1Oz@1vVU5v#1P0@1xGU5v#1P1@1xGU5v#1P2@1yTU5v#1P3@1yNU5v#1P4@1zGU5v#1P5@1zcU5v#1P6@1zaU5v#1P7@21KU5v#1P8@22KU5v#1P9@23KU5v#1PA@20GU5v#1PB@24NU5v#1PC@24GU5v#1PD@27PU5v#1PE@27WU5v#1PF@27OU5v#1PG@27MU5v#1PH@28GU5v#1PI@28GU5v#1PJ@29TU5v#1PK@29NU5v#1PL@2AGU5v#1PM@2AcU5v#1PN@2AaU5v#1PO@2CKU5v#1PP@2DKU5v#1PQ@2EKU5v#1PR@2BGU5v#1PS@2GRU5v#1PT@2GQU5v#1PU@2HOU5v#1PV@2HMU5v#1PW@2IOU5v#1PX@2IbU5v#1PY@2INU5v#1PZ@2INU5v#1Pa@2JVU5v#1Pb@2JUU5v#1Pc@2KKU5v#1Pd@2KTU5v#1Pe@2KQU5v#1Pf@2KKU5v#1Pg@2LOU5v#1Ph@2LWU5v#1Pi@2LUU5v#1Pj@2LOU5v#1Pk@2LhU5v#1Pl@2LfU5v#1Pn@2NGU5v#1Po@2NXU5v#1Pq@2QKU5v#1Pr@2RKU5v#1Ps@2SKU5v#1Pt@2PGU5v#1Pu@2WHU5v#1Pv@2WRU5v#1Pw@2WQU5v#1Px@2WGU5v#1Py@2WGU5v#1Pz@2W@1EU5v#1Q0@2WfU5v#1Q1@2WVU5v#1Q2@2YrU5v#1Q3@2YyU5v#1Q4@2Y@16U5v#1Q5@2YOU5v#1Q6@2YIU5v#1Q7@2ZCU5v#1Q8@2ZaU5v#1Q9@2ZYU5v#1QA@2aJU5v#1QB@2aCU5v#1QC@2dFU5v#1QD@2erU5v#1QE@2eqU5v#1QF@2eHU5v#1QG@2fGU5v#1QH@2fOU5v#1QI@2fLU5v#1QJ@2fGU5v#1QK@2f@1GU5v#1QL@2f@1pU5v#1QM@2feU5v#1QN@2fUU5v#1QO@2gGU5v#1QP@2gLU5v#1QQ@2gKU5v#1QR@2gRU5v#1QS@2gOU5v#1QT@2gGU5v#1QU@2g@1XU5v#1QV@2g@1dU5v#1QW@2g@1bU5v#1QX@2g@1oU5v#1QY@2g@1mU5v#1QZ@2gyU5v#1Qa@2goU5v#1Qb@2hJU5v#1Qc@2hCU5v#1QdS8U5v#1Qf84U5v#1QgL8V5v#1QhLbV5v#1QiLUV5v#1QjM8V5v#1QkMcV5v#1QlMVV5v#1QmC8V5v#1QnCgV5v#1QoCZV5v#1QpDQV5v#1QqDOV5v#1QrERV5v#1QsEPV5v#1QtFGV5v#1QuFGV5v#1QvGxV5v#1QwG@1aV5v#1QxG@1hV5v#1QyG@1ZV5v#1QzGhV5v#1R0GbV5v#1R214V5v#1R4EbW5v#1R5ELW5v#1R6FcW5v#1R7FLW5v#1R9HFW5v#1RAHwW5v#1RBHkW5v#1RCIpW5v#1RDJLW5v#1REJyW5v#1RFJxW5v#1RGJJW5v#1RHKGW5v#1RIKQW5v#1RJKNW5v#1RKKGW5v#1RLLNW5v#1RMLaW5v#1RNLlW5v#1ROLkW5v#1RPLLW5v#1RQMPW5v#1RRM@12W5v#1RSM@11W5v#1RTMNW5v#1RUNKW5v#1RVNUW5v#1RWNRW5v#1RXNKW5v#1RYOKW5v#1RZOtW5v#1RaO@15W5v#1RbO@13W5v#1RcSGW5v#1RdSQW5v#1ReSNW5v#1RfSGW5v#1RgT@12W5v#1RhT@1aW5v#1RiTQW5v#1RjTGW5v#1RkWGW5v#1RlWQW5v#1RmWTW5v#1RnWaW5v#1RoWZW5v#1RpWgW5v#1RqWdW5v#1RrWGW5v#1RsX@12W5v#1RtX@28W5v#1RuXQW5v#1RvXGW5v#1RwaJW5v#1RxaCW5v#1RydFW5v#1RzepW5v#1S0fSW5v#1S1fRW5v#1S2fbW5v#1S3fYW5v#1S4fGW5v#1S5f@1XW5v#1S6f@13W5v#1S7ftW5v#1S8gHW5v#1S9gvW5v#1SAguW5v#1SBgFW5v#1SChGW5v#1SDhMW5v#1SEhJW5v#1SFhGW5v#1SGh@1EW5v#1SHh@1vW5v#1SIhcW5v#1SJhSW5v#1SKiJW5v#1SLipW5v#1SMioW5v#1SNiCW5v#1SOlFW5v#1SPmGW5v#1SQmsW5v#1SRmpW5v#1SSmGW5v#1STmyW5v#1SUnRW5v#1SVnPW5v#1SWoOW5v#1SXoMW5v#1SYpnW5v#1SZplW5v#1SaqkW5v#1SbqiW5v#1ScsNW5v#1SdsLW5v#1SetSW5v#1SftQW5v#1SguSW5v#1ShuQW5v#1SkvOW5v#1SlvdW5v#1SmvcW5v#1SnvOW5v#1SovCW5v#1SpwOW5v#1SqwZW5v#1SrwYW5v#1SswMW5v#1StxOW5v#1SuxUW5v#1SvxTW5v#1SwxbW5v#1SxxGW5v#1Sy@10cW5v#1Sz@10iW5v#1T0@10hW5v#1T1@10aW5v#1T2@11gW5v#1T3@11mW5v#1T4@11lW5v#1T5@11fW5v#1T6@11QW5v#1T7@12gW5v#1T8@12mW5v#1T9@12lW5v#1TA@12fW5v#1TB@12QW5v#1TC@13ZW5v#1TD@13fW5v#1TE@13eW5v#1TF@13oW5v#1TG@13nW5v#1TH@13xW5v#1TI@13XW5v#1TJ@14OW5v#1TK@14bW5v#1TL@14oW5v#1TM@14@1GW5v#1TN@14@1TW5v#1TO@14@1WW5v#1TP@14nW5v#1TQ@14lW5v#1TR@15OW5v#1TS@18eW5v#1TT@18kW5v#1TU@18jW5v#1TV@18cW5v#1TW@19VW5v#1TX@19bW5v#1TY@19aW5v#1TZ@19kW5v#1Ta@19jW5v#1Tb@19tW5v#1Tc@19TW5v#1Td@1AOW5v#1Te@1AYW5v#1Tf@1BSW5v#1Tg@1BaW5v#1Th@1CSW5v#1Ti@1CYW5v#1Tj@1DSW5v#1Tk@1DcW5v#1Tl@1ApW5v#1Tm@1AnW5v#1Tn@1FOW5v#1To@1FyW5v#1Tp@1F@16W5v#1Tq@1F@14W5v#1Tr@1GOW5v#1Ts@1JQW5v#1Tt@1JOW5v#1Tu@1JOW5v#1Tv@1JQW5v#1Tw@1KkW5v#1Tx@1KqW5v#1Ty@1KpW5v#1Tz@1KjW5v#1U0@1KUW5v#1U1@1LlW5v#1U2@1LrW5v#1U3@1LqW5v#1U4@1LkW5v#1U5@1LVW5v#1U6@1MSW5v#1U7@1MbW5v#1U8@1MYW5v#1U9@1MdW5v#1UA@1MgW5v#1UB@1MqW5v#1UC@1MnW5v#1UD@1MSW5v#1UE@1NaW5v#1UF@1NYW5v#1UG@1ObW5v#1UH@1OZW5v#1UI@1QOW5v#1UJ@1QYW5v#1UK@1QXW5v#1UL@1QnW5v#1UM@1QmW5v#1UN@1QxW5v#1UO@1RSW5v#1UP@1RbW5v#1UQ@1SSW5v#1UR@1ScW5v#1US@1TSW5v#1UT@1TbW5v#1UU@1Q@1EW5v#1UV@1Q@1CW5v#1UW@1VOW5v#1UX@1YcW5v#1UY@1YiW5v#1UZ@1YhW5v#1Ua@1YaW5v#1Ub@1ZgW5v#1Uc@1ZmW5v#1Ud@1ZlW5v#1Ue@1ZfW5v#1Uf@1ZQW5v#1Ug@1agW5v#1Uh@1amW5v#1Ui@1alW5v#1Uj@1afW5v#1Uk@1aQW5v#1Ul@1bkW5v#1Um@1bqW5v#1Un@1bpW5v#1Uo@1bjW5v#1Up@1bUW5v#1Uq@1clW5v#1Ur@1crW5v#1Us@1cqW5v#1Ut@1ckW5v#1Uu@1cVW5v#1Uv@1dkW5v#1Uw@1dqW5v#1Ux@1dpW5v#1Uy@1djW5v#1Uz@1dUW5v#1V0@1eOW5v#1V1@1eYW5v#1V2@1eXW5v#1V3@1enW5v#1V4@1emW5v#1V5@1exW5v#1V6@1ewW5v#1V7@1e@1CW5v#1V8@1e@1BW5v#1V9@1fTW5v#1VA@1fgW5v#1VB@1fjW5v#1VC@1fmW5v#1VD@1ftW5v#1VE@1f@11W5v#1VF@1fSW5v#1VG@1e@1OW5v#1VH@1gOW5v#1VI@1igW5v#1VJ@1imW5v#1VK@1ilW5v#1VL@1ifW5v#1VM@1iQW5v#1VN@1jgW5v#1VO@1jmW5v#1VP@1jlW5v#1VQ@1jfW5v#1VR@1jQW5v#1VS@1kkW5v#1VT@1kqW5v#1VU@1kpW5v#1VV@1kjW5v#1VW@1kUW5v#1VX@1llW5v#1VY@1lrW5v#1VZ@1lqW5v#1Va@1lkW5v#1Vb@1lVW5v#1Vc@1mZW5v#1Vd@1mfW5v#1Ve@1meW5v#1Vf@1moW5v#1Vg@1mnW5v#1Vh@1mxW5v#1Vi@1mXW5v#1Vj@1nOW5v#1Vk@1nbW5v#1Vl@1noW5v#1Vm@1n@1BW5v#1Vn@1n@1QW5v#1Vo@1n@1fW5v#1Vp@1n@1iW5v#1Vq@1n@1lW5v#1Vr@1n@1sW5v#1Vs@1nnW5v#1Vt@1nlW5v#1Vu@1oWW5v#1Vv@1o@1BW5v#1Vw@1o@1AW5v#1Vx@1oWW5v#1Vy@1o@1TW5v#1Vz@1oUW5v#1W0@1pOW5v#1W1@1pzW5v#1W2@1p@1GW5v#1W3@1p@1EW5v#1W4@1qOW5v#1W5@1qYW5v#1W6@1qXW5v#1W7@1rOW5v#1W8@1ucW5v#1W9@1uiW5v#1WA@1uhW5v#1WB@1uaW5v#1WC@1vkW5v#1WD@1vqW5v#1WE@1vpW5v#1WF@1vjW5v#1WG@1vUW5v#1WH@1wlW5v#1WI@1wrW5v#1WJ@1wqW5v#1WK@1wkW5v#1WL@1wVW5v#1WM@1xkW5v#1WN@1xqW5v#1WO@1xpW5v#1WP@1xjW5v#1WQ@1xUW5v#1WR@1yZW5v#1WS@1yfW5v#1WT@1yeW5v#1WU@1yoW5v#1WV@1ynW5v#1WW@1yxW5v#1WX@1yXW5v#1WY@20QW5v#1WZ@20OW5v#1Wa@20OW5v#1Wb@20QW5v#1Wc@21OW5v#1Wd@21YW5v#1We@21XW5v#1Wf@21nW5v#1Wg@21mW5v#1Wh@21xW5v#1Wi@22SW5v#1Wj@22bW5v#1Wk@23SW5v#1Wl@23cW5v#1Wm@24SW5v#1Wn@25XW5v#1Wo@25kW5v#1Wp@25nW5v#1Wq@25qW5v#1Wr@25xW5v#1Ws@25@15W5v#1Wt@25WW5v#1Wu@24bW5v#1Wv@21@1EW5v#1Ww@21@1CW5v#1Wx@28WW5v#1Wy@28@1BW5v#1Wz@28@1AW5v#1X0@28WW5v#1X1@28@1TW5v#1X2@28UW5v#1X3@29OW5v#1X4@29zW5v#1X5@29@1GW5v#1X6@29@1EW5v#1X7@2AOW5v#1X8@2AYW5v#1X9@2AXW5v#1XA@2BOW5v#1XB@2BbW5v#1XC@2BoW5v#1XD@2B@1BW5v#1XE@2B@1QW5v#1XF@2B@1fW5v#1XG@2B@1iW5v#1XH@2B@1lW5v#1XI@2B@1sW5v#1XJ@2BnW5v#1XK@2BlW5v#1XL@2COW5v#1XM@2ISW5v#1XN@2JSW5v#1XO@2JYW5v#1XP@2JXW5v#1XQ@2JfW5v#1XR@2JhW5v#1XS@2HiW5v#1XT@2HYW5v#1XU@2HOW5v#1Xb@2OPW5v#1Xc@2O@16W5v#1Xd@2OPW5v#1Xe@2OCW5v#1Xf@2PGW5v#1Xg@2PQW5v#1XllFW5v#1XoA4W5v#1Xq@1chX5v#1Xr@1cnX5v#1Xs@1cgX5v#1Xt@1cLX5v#1XvoFX5v#1XwpeX5v#1XxpkX5v#1XypdX5v#1XzpCX5v#1Y0sFX5v#1Y1teX5v#1Y2tkX5v#1Y3tdX5v#1Y4tCX5v#1Y5wFX5v#1Y6@10GX5v#1Y7@10RX5v#1Y8@10gX5v#1Y9@10fX5v#1YA@10pX5v#1YB@10mX5v#1YC@10GX5v#1YD@11PX5v#1YE@11NX5v#1YH@12PX5v#1YI@12PX5v#1YJ@12GX5v#1YK@13KX5v#1YL@13qX5v#1YM@13tX5v#1YN@13@12X5v#1YO@13pX5v#1YP@13UX5v#1YU@15mX5v#1YV@15RX5v#1YW@15GX5v#1YX@19sX5v#1YY@19rX5v#1YZ@19HX5v#1Ya@1BYX5v#1Yb@1BeX5v#1Yc@1BNX5v#1Yd@1BCX5v#1Ye@1E8X5v#1Yf@1FHX5v#1Yg@1FGX5v#1Yh@1FGX5v#1Yi@1F@1GX5v#1Yj@1FhX5v#1Yk@1FXX5v#1Yl@1JGX5v#1Ym@1JWX5v#1Yn@1JTX5v#1Yo@1JGX5v#1Yp@1KfX5v#1Yq@1KrX5v#1Yr@1KeX5v#1Ys@1LVX5v#1Yt@1LTX5v#1Yu@1OqX5v#1Yv@1O@14X5v#1Yw@1OpX5v#1Yx@1OGX5v#1Yy@1PGX5v#1Yz@1PKX5v#1Z0@1PJX5v#1Z1@1PQX5v#1Z2@1PNX5v#1Z3@1PGX5v#1Z4@1Q@12X5v#1Z5@1Q@1KX5v#1Z6@1Q@1IX5v#1Z7@1Q@1XX5v#1Z8@1Q@1VX5v#1Z9@1Q@29X5v#1ZA@1QQX5v#1ZB@1QGX5v#1ZC@1TIX5v#1ZD@1TVX5v#1ZE@1TZX5v#1ZF@1TYX5v#1ZG@1TUX5v#1ZH@1TGX5v#1ZI@1VsX5v#1ZJ@1VwX5v#1ZK@1VvX5v#1ZL@1V@10X5v#1ZM@1V@14X5v#1ZN@1V@13X5v#1ZO@1V@18X5v#1ZP@1VPX5v#1ZQ@1VJX5v#1ZR@1WCX5v#1ZS@1WbX5v#1ZT@1WeX5v#1ZU@1WZX5v#1ZV@1XCX5v#1ZW@1XOX5v#1ZX@1XSX5v#1ZY@1XRX5v#1ZZ@1XMX5v#1Za@1YCX5v#1Zb@1YOX5v#1Zc@1YSX5v#1Zd@1YRX5v#1Ze@1YMX5v#1Zf@1ZJX5v#1Zg@1ZCX5v#1Zh@1d8X5v#1Zi@1eGX5v#1Zj@1eGX5v#1Zk@1edX5v#1Zl@1eWX5v#1Zm@1fCX5v#1Zn@1fZX5v#1Zo@1fYX5v#1Zp@1gGX5v#1Zq@1gkX5v#1Zr@1gjX5v#1Zs@1gGX5v#1Zt@1hXX5v#1Zu@1hVX5v#1Zv@1jJX5v#1Zw@1jCX5v#1Zx@1m8X5v#1Zy@1nGX5v#1Zz@1nGX5v#1a0@1ndX5v#1a1@1nWX5v#1a2@1oCX5v#1a3@1oZX5v#1a4@1oYX5v#1a5@1pGX5v#1a6@1pkX5v#1a7@1pjX5v#1a8@1pGX5v#1a9@1qXX5v#1aA@1qVX5v#1aB@1rNX5v#1aC@1rGX5v#1aD@1tJX5v#1aE@1tnX5v#1aF@1tmX5v#1aG@1tCX5v#1aH@1w8X5v#1aI@1xSX5v#1aJ@1xdX5v#1aK@1xcX5v#1aL@1xQX5v#1aM@1yLX5v#1aN@1yJX5v#1aQ@1zRX5v#1aR@1zjX5v#1aS@1zRX5v#1aT@1zCX5v#1aU@20OX5v#1aV@20cX5v#1aW@20bX5v#1aX@20MX5v#1aY@21tX5v#1aZ@21zX5v#1aa@21yX5v#1ab@21@19X5v#1ac@21@1FX5v#1ad@21@1EX5v#1ae@21QX5v#1af@21KX5v#1ag@22MX5v#1ah@22PX5v#1ai@22KX5v#1aj@23GX5v#1ak@23OX5v#1an@24SX5v#1ao@24YX5v#1ap@24XX5v#1aq@24SX5v#1ar@24GX5v#1as@25RX5v#1at@25WX5v#1au@25VX5v#1av@25PX5v#1aw@26OX5v#1ax@26TX5v#1ay@26SX5v#1az@26MX5v#1b0@27OX5v#1b1@27TX5v#1b2@27SX5v#1b3@27MX5v#1b4@28KX5v#1b5@28TX5v#1b6@28fX5v#1b7@28eX5v#1b8@28mX5v#1b9@28pX5v#1bA@28SX5v#1bF@2AGX5v#1bG@2AQX5v#1bH@2BNX5v#1bI@2BTX5v#1bJ@2BeX5v#1bK@2BbX5v#1bL@2BNX5v#1bM@2BpX5v#1bN@2B@10X5v#1bO@2BzX5v#1bQ@2CGX5v#1bR@2CNX5v#1bS@2CYX5v#1bT@2CWX5v#1bY@2ERX5v#1bZ@2EPX5v#1ba@2FTX5v#1bb@2FRX5v#1bc@2GPX5v#1bd@2GNX5v#1be@1w8X5v#1bf@2J8X5v#1bg@2KJX5v#1bh@2KuX5v#1bi@2KtX5v#1bj@2K@19X5v#1bk@2KCX5v#1blJ8X5v#1bmKPX5v#1bnKNX5v#1boLPX5v#1bpLUX5v#1bqLTX5v#1brLNX5v#1bsMNX5v#1btMSX5v#1buMRX5v#1bvMLX5v#1bwOLX5v#1bxOQX5v#1byOPX5v#1bzOJX5v#1c0PKX5v#1c1PIX5v#1c4QPX5v#1c5QcX5v#1c6QPX5v#1c7QCX5v#1c8RGX5v#1c9RTX5v#1cARZX5v#1cBRYX5v#1cCRSX5v#1cHURX5v#1cIUWX5v#1cJUPX5v#1cKWGX5v#1cLWGX5v#1cMX@1AX5v#1cNXZX5v#1cOX@1LX5v#1cPXTX5v#1cRZPX5v#1cSZNX5v#1cVaSX5v#1cWaSX5v#1cXaGX5v#1cYbUX5v#1cZbZX5v#1cabYX5v#1cbbSX5v#1cccSX5v#1cdcXX5v#1cecWX5v#1cfcQX5v#1cgdTX5v#1chdYX5v#1cidXX5v#1cjdRX5v#1ckeKX5v#1cleRX5v#1cmfOX5v#1cngOX5v#1coiOX5v#1cpiVX5v#1cqexX5v#1creaX5v#1cwkfX5v#1cxkeX5v#1cz14X5v#1d0@2X8X5v#1d3@2YOX5v#1d4@2YOX5v#1d5@2YCX5v#1d6@2ZQX5v#1d7@2ZVX5v#1d8@2ZUX5v#1d9@2ZOX5v#1dA@2aOX5v#1dB@2aTX5v#1dC@2aSX5v#1dD@2aMX5v#1dE@2bPX5v#1dF@2bUX5v#1dG@2bTX5v#1dH@2bNX5v#1dI@2cGX5v#1dJ@2cWX5v#1dK@2dKX5v#1dL@2eKX5v#1dM@2gKX5v#1dN@2gRX5v#1dO@2c@12X5v#1dP@2cfX5v#1dU@2iJX5v#1dV@2iCX5v#1dW@2l8X5v#1dX@2mGX5v#1dY@2mVX5v#1dZ@2mfX5v#1da@2mdX5v#1db@2mGX5v#1de@2nRX5v#1df@2nlX5v#1dg@2nRX5v#1dh@2nGX5v#1di@2oOX5v#1dj@2oeX5v#1dk@2odX5v#1dl@2opX5v#1dm@2oOX5v#1dn@2pOX5v#1do@2pdX5v#1dp@2pkX5v#1dq@2p@10X5v#1dr@2pzX5v#1ds@2p@1DX5v#1dt@2piX5v#1du@2qOX5v#1dv@2qlX5v#1dw@2qkX5v#1e1@2vGX5v#1e2@2vVX5v#1e3@2vgX5v#1e4@2vdX5v#1e5@2vGX5v#1e6@2wGX5v#1e7@2wKX5v#1e8@2wPX5v#1e9@2wNX5v#1eA@2xGX5v#1eB@2xKX5v#1eC@2xPX5v#1eD@2xNX5v#1eF@2zGX5v#1eG@2zKX5v#1eH@2zPX5v#1eI@2zNX5v#1eJ@30GX5v#1eK@30KX5v#1eL@30PX5v#1eM@30VX5v#1eN@30jX5v#1eO@30TX5v#1eP@30tX5v#1eQ@30@13X5v#1eR@30rX5v#1eS@30NX5v#1eT@2l8X5v#1eU@2T8X5v#1eV@2UPX5v#1eW@2UNX5v#1eY@2O4X5v#1ea8XY5v#1eb8LY5v#1edp8Y5v#1eeqdY5v#1efqvY5v#1egqtY5v#1ehq@11Y5v#1eiqzY5v#1ejqbY5v#1ekp8Y5v#1elt8Y5v#1emuRY5v#1enuPY5v#1eovCY5v#1epvRY5v#1eqvRY5v#1ervRY5v#1eswgY5v#1ett8Y5v#1euz8Y5v#1ev@10pY5v#1ew@10CY5v#1ex@11RY5v#1ey@11PY5v#1ezz8Y5v#1f0@148Y5v#1f1@15KY5v#1f2@15PY5v#1f3@15IY5v#1f4@16CY5v#1f5@16WY5v#1f6@17TY5v#1f7@19PY5v#1f8@19NY5v#1f9@1AOY5v#1fA@1AMY5v#1fB@1BQY5v#1fC@1BUY5v#1fD@1BZY5v#1fE@1BSY5v#1fF@1BOY5v#1fG@1CRY5v#1fH@1CVY5v#1fI@1CaY5v#1fJ@1CTY5v#1fK@1CPY5v#1fL@1DPY5v#1fM@1DNY5v#1fN@1EOY5v#1fO@1EMY5v#1fP@1FQY5v#1fQ@1FVY5v#1fR@1FOY5v#1fS@1GRY5v#1fT@1GWY5v#1fU@1GPY5v#1fV@1HGY5v#1fW@1HUY5v#1fX@1HSY5v#1fY@1HWY5v#1fZ@1IGY5v#1fa@1IVY5v#1fb@1ITY5v#1fc@1IXY5v#1fd@1JGY5v#1fe@1JTY5v#1ff@1JQY5v#1fg@1JfY5v#1fh@1KGY5v#1fi@1KUY5v#1fj@1KRY5v#1fk@1HGY5v#1fl@1KgY5v#1fm@1MGY5v#1fn@1MVY5v#1fo@1MSY5v#1fp@1MGY5v#1fq@1NNY5v#1fr@1NbY5v#1fs@1NZY5v#1ft@1NLY5v#1fu@1OGY5v#1fv@1OVY5v#1fw@1OSY5v#1fx@1OGY5v#1fy@1PGY5v#1fz@1PVY5v#1g0@1PSY5v#1g1@1PGY5v#1g2@1RGY5v#1g3@1RWY5v#1g4@1RTY5v#1g5@1RGY5v#1g6@1SNY5v#1g7@1ScY5v#1g8@1SaY5v#1g9@1SLY5v#1gA@1TGY5v#1gB@1TWY5v#1gC@1TTY5v#1gD@1TGY5v#1gE@1UGY5v#1gF@1UWY5v#1gG@1UTY5v#1gH@1UGY5v#1gI@1WGY5v#1gJ@1WTY5v#1gK@1WRY5v#1gL@1WGY5v#1gM@1XOY5v#1gN@1XNY5v#1gO@1XLY5v#1gP@1YTY5v#1gQ@1YRY5v#1gR@1ZGY5v#1gS@1ZUY5v#1gT@1ZRY5v#1gU@1ZGY5v#1gV@1bGY5v#1gW@1bSY5v#1gX@1bQY5v#1gY@1bGY5v#1gZ@1cOY5v#1ga@1cNY5v#1gb@1cLY5v#1gc@1dSY5v#1gd@1dQY5v#1ge@1eGY5v#1gf@1eTY5v#1gg@1eQY5v#1gh@1eGY5v#1gi@1gGY5v#1gj@1gUY5v#1gk@1gSY5v#1gl@1gEY5v#1gm@1hGY5v#1gn@1hVY5v#1go@1hTY5v#1gp@1hEY5v#1gq@1iGY5v#1gr@1iLY5v#1gs@1iIY5v#1gt@1iNY5v#1gu@1iQY5v#1gv@1iVY5v#1gw@1iSY5v#1gx@1iGY5v#1gy@1iYY5v#1gz@1lcY5v#1h0@1liY5v#1h1@1lpY5v#1h2@1l@11Y5v#1h3@1l@1CY5v#1h4@1l@1OY5v#1h5@1l@1ZY5v#1h6@1l@1cY5v#1h7@1lCY5v#1h8@148Y5v#1h9@1o8Y5v#1hA@1pGY5v#1hB@1pGY5v#1hC@1p@19Y5v#1hD@1peY5v#1hE@1pUY5v#1hF@1o8Y5v#1hG@1s8Y5v#1hH@1tHY5v#1hI@1tGY5v#1hJ@1tGY5v#1hK@1t@1AY5v#1hL@1tfY5v#1hM@1tVY5v#1hN@1s8Y5v#1hOM8Y5v#1hPIRY5v#1hQIqY5v#1hRIqY5v#1hSIqY5v#1hTIRY5v#1hUI8Y5v#1hVOKY5v#1hWOCY5v#1hXQXY5v#1hYQcY5v#1hZQbY5v#1haQVY5v#1hbRYY5v#1hcRdY5v#1hdRcY5v#1heRWY5v#1hfSKY5v#1hgUSY5v#1hhUXY5v#1hiUWY5v#1hjUQY5v#1hkVXY5v#1hlVcY5v#1hmVVY5v#1hnWYY5v#1hoWdY5v#1hpWWY5v#1hqXKY5v#1hrZKY5v#1hscGY5v#1htcVY5v#1hucSY5v#1hvcGY5v#1hwdvY5v#1hxd@11Y5v#1hyd@1DY5v#1hzdGY5v#1i0eKY5v#1i1eZY5v#1i2eWY5v#1i3eKY5v#1i4fKY5v#1i5fZY5v#1i6fZY5v#1i7fZY5v#1i8gTY5v#1i9hUY5v#1iAhbY5v#1iBhTY5v#1iCiVY5v#1iDmgY5v#1iF64Y&J0source/Agent.cry~0A// Interface for an agent, which controls a character.~0D~0Aclass Agent {~0D~0A~09// Exerts control over the given character.~0D~0A~09function control(character) {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A~0D~0A~09// Whether this agent is controlled by a player.~0D~0A~09function isPlayerControlled() {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A}~0D~0A%&J1[Core]~0A%&J2[Core:core.cry]~0Anamespace Core {~0A @3const CRAYON_VERSION = ~0Y0.2.0~0Y;~0A@1 @3enum Type {~0A @7NULL = 0,~0A @7BOOLEAN = 1,~0A @7INTEGER = 2,~0A @7FLOAT = 3,~0A @7STRING = 4,~0A @7LIST = 5,~0A @7DICTIONARY = 6,~0A @7OBJECT = 7,~0A @7FUNCTION = 8,~0A @7CLASS = 9,~0A @3}~0A@1 @3function assert(condition, message = null) {~0A @7return $@2(~0dassert~0d, condition, message, true);~0A @3}~0A@1 @3function fail(message) {~0A @7return $@2(~0dassert~0d, false, message, false);~0A @3}~0A@1 @3function chr(value) {~0A @7return $@2(~0dchr~0d, value);~0A @3}~0A@1 @3function currentTime() {~0A @7return $@2(~0dcurrentTime~0d);~0A @3}~0A@1 @3function ord(value) {~0A @7return $@2(~0dord~0d, value);~0A @3}~0A@1 @3function parseFloat(value) {~0A @7return $@2(~0dparseFloat~0d, value);~0A @3}~0A@1 @3function parseInt(value) {~0A @7return $@2(~0dparseInt~0d, value);~0A @3}~0A@1 @3function print(value) {~0A @7return $@2(~0dprint~0d, value);~0A @3}~0A@1 @3function sleep(seconds) {~0A @7Core.assert(~0A @B$@2(~0dtypeis~0d, seconds, Core.Type.INTEGER, Core.Type.FLOAT) &&~0A @Bseconds >= 0, ~0YInvalid argument.~0Y);~0A @7return $@2(~0dsleep~0d, seconds);~0A @3}~0A@1 @3function typeof(value) {~0A @7return $@2(~0dtypeof~0d,value);~0A @3}~0A@1 @3function isString(value) {~0A @7return $@2(~0dtypeis~0d, value, Core.Type.STRING);~0A @3}~0A@1 @3function isNumber(value) {~0A @7return $@2(~0dtypeis~0d, value, Core.Type.INTEGER, Core.Type.FLOAT);~0A @3}~0A@1 @3function _LIB_CORE_list_sort_by_key(fp, list) {~0A @7if (list.length > 1) {~0A @B$@2(~0dsortList~0d, list, _LIB_CORE_list_map(fp, list));~0A @7}~0A @3}~0A@1 @3function _LIB_CORE_list_map(fp, list) {~0A @7output = [];~0A @7for (t : list) {~0A @Boutput.add(fp(t));~0A @7}~0A @7return output;~0A @3}~0A@1 @3function _LIB_CORE_list_filter(fp, list) {~0A @7output = [];~0A @7for (t : list) {~0A @Bb = fp(t);~0A @Bif (!$@2(~0dtypeis~0d, b, Core.Type.BOOLEAN)) {~0A @FCore.fail(~0YFilter function returned a non-boolean value.~0Y);~0A @B}~0A @Bif (b) {~0A @Foutput.add(t);~0A @B}~0A @7}~0A @7return output;~0A @3}~0A@1 @3function getCurrentExecutionToken() {~0A @7return $@2(~0dexecId~0d);~0A @3}~0A@1 @3function getExecutionIterationCounter() {~0A @7return $@2(~0dexecCounter~0d);~0A @3}~0A@1 @3function getProjectId() {~0A @7return $@2(~0dprojectId~0d);~0A @3}~0A@1 @3// Interanlly called by fp.invoke(args)~0A @3function _LIB_CORE_invoke(fp, args) {~0A @7// MAGIC ALERT: There is a special compiler hack that checks specifically for this line (based on parent~0A @7// function name) and compiles this function invocation with a special flag to treat the args list as~0A @7// individually passed arguments.~0A @7return fp(args);~0A @3}~0A@1 @3// A simple dummy object.~0A @3// The VM supports attaching native data to any object instance, and so this generally serves as~0A @3// the canonical object to use for that purpose.~0A @3class Object { }~0A}~0A%&J3[Core:exceptions.cry]~0Anamespace Core {~0A @3enum _LIB_CORE_ExType {~0A @7// These must be kept in sync with CoreExceptionTypes in Constants.cry in the interpreter.~0A @7FATAL = 0,~0A @7GENERIC_EXCEPTION = 1,~0A @7ASSERTION_FAILED = 2,~0A @7DIVISION_BY_ZERO = 3,~0A @7INDEX_OUT_OF_RANGE = 4,~0A @7INVALID_ARGUMENT = 5,~0A @7INVALID_ASSIGNMENT = 6,~0A @7INVALID_INVOCATION = 7,~0A @7INVALID_KEY = 8,~0A @7KEY_NOT_FOUND = 9,~0A @7NULL_REFERENCE = 10,~0A @7UNASSIGNED_VARIABLE = 11,~0A @7UNKNOWN_FIELD = 12,~0A @7UNSUPPORTED_OPERATION = 13,~0A @3}~0A@1 @3/*~0A @7When there are VM-generated exceptions (as opposed to exceptions thrown directly from code with the~0A @7throw keyword) the easiest way to go about this is to simply treat it as a function invocation to this~0A @7particular function which itself just uses the throw keyword.~0A @3*/~0A @3function _LIB_CORE_generateException(type, message) {~0A @7switch (type) {~0A @Bcase _LIB_CORE_ExType.FATAL: throw new FatalException(message);~0A @Bcase _LIB_CORE_ExType.ASSERTION_FAILED: throw new AssertionFailedException(message);~0A @Bcase _LIB_CORE_ExType.DIVISION_BY_ZERO: throw new DivisionByZeroException(message);~0A @Bcase _LIB_CORE_ExType.INDEX_OUT_OF_RANGE: throw new IndexOutOfRangeException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_ARGUMENT: throw new InvalidArgumentException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_ASSIGNMENT: throw new InvalidAssignmentException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_INVOCATION: throw new InvalidInvocationException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_KEY: throw new InvalidKeyException(message);~0A @Bcase _LIB_CORE_ExType.KEY_NOT_FOUND: throw new KeyNotFoundException(message);~0A @Bcase _LIB_CORE_ExType.NULL_REFERENCE: throw new NullReferenceException(message);~0A @Bcase _LIB_CORE_ExType.UNASSIGNED_VARIABLE: throw new UnassignedVariableException(message);~0A @Bcase _LIB_CORE_ExType.UNKNOWN_FIELD: throw new UnknownFieldException(message);~0A @Bcase _LIB_CORE_ExType.UNSUPPORTED_OPERATION: throw new UnsupportedOperationException(message);~0A @Bdefault: throw new Exception(message);~0A @7}~0A @3}~0A@1 @3class Exception {~0A @7/*~0A @BnativeData[0] -> (boolean) is fatal exception?~0A @BnativeData[1] -> (List<int>) list of PC~0ds this exception bubbles through~0A @FPC trace is only set when throw is invoked.~0A @7*/~0A@1 @7// Do not re-order these.~0A @7// .message field position within the class is assumed at compile time.~0A @7field cause;~0A @7field message;~0A@1 @7constructor(message = null, cause = null) {~0A @B$@2(~0dallocNativeData~0d, this, 2);~0A @B$@2(~0dsetNativeData~0d, this, 0, false); // is fatal?~0A @Bthis.message = message;~0A @Bthis.cause = cause;~0A @7}~0A@1 @7function getTrace() {~0A @Breturn $@2(~0dgetExceptionTrace~0d, this);~0A @7}~0A @3}~0A@1 @3class FatalException : Exception {~0A @7constructor(m = null, c = null) : base(m, c) {~0A @B$@2(~0dsetNativeData~0d, this, 0, true); // is fatal?~0A @7}~0A @3}~0A@1 @3class AssertionFailedException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class DivisionByZeroException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class IndexOutOfRangeException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidArgumentException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidAssignmentException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidInvocationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidKeyException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidOperationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class KeyNotFoundException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class NotImplementedException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class NullReferenceException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnassignedVariableException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnknownFieldException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnsupportedOperationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A}~0A%&J4[Core:reflection.cry]~0Anamespace Core {~0A@1 @3namespace Reflection {~0A@1 @7function getClassFromInstance(instance) {~0A @B// TODO: document what happens when instance is not an instance.~0A @Breturn $@2(~0dreflectGetClass~0d, instance);~0A @7}~0A@1 @7function getClasses(commonBaseClass = null) {~0A @Boutput = $@2(~0dreflectAllClasses~0d);~0A @Bif (commonBaseClass != null) {~0A @Ffiltered = [];~0A @Ffor (c : output) {~0A @Jif (c.isA(commonBaseClass)) {~0A @Nfiltered.add(c);~0A @J}~0A @F}~0A @Freturn filtered;~0A @B}~0A @Breturn output;~0A @7}~0A@1 @7function getMethods(instanceOrClass) {~0A @Bswitch (Core.typeof(instanceOrClass)) {~0A @F// TODO: verify that static methods are returned only from class inputs.~0A @Fcase Core.Type.OBJECT:~0A @Fcase Core.Type.CLASS:~0A @Jreturn $@2(~0dreflectGetMethods~0d, instanceOrClass);~0A @Fdefault:~0A @Jthrow new Core.InvalidArgumentException(~0YCan only get methods from an instance or class reference.~0Y);~0A @B}~0A @7}~0A @3}~0A}~0A%&J5source/AI.cry~0Aimport Math;~0D~0Aimport Random;~0D~0A~0D~0Aconst AI_TURN_CHANCE = 0.02;~0D~0Aconst AI_TOGGLE_MOVE_CHANCE = 0.02;~0D~0Aconst AI_SHOOT_CHANCE = 0.02;~0D~0A~0D~0A// A computer-controlled agent.~0D~0Aclass AI : Agent {~0D~0A~09field direction = Util.randomAngle();~0D~0A~09field speed = CHARACTER_SPEED;~0D~0A~0D~0A~09constructor() : base() {}~0D~0A~0D~0A~09function control(character) {~0D~0A~09@1// If there are other characters, acquire a new target.~0D~0A~09@1if (character.env.characters.length > 1) {~0D~0A~09@2target = this.getTarget(character);~0D~0A~09@2character.heading = target.minus(character.pos).normalize();~0D~0A~09@1}~0D~0A~0D~0A~09@1if (Random.randomFloat() < AI_TURN_CHANCE) {~0D~0A~09@2this.direction = Util.randomAngle();~0D~0A~09@1}~0D~0A~09@1if (Random.randomFloat() < AI_TOGGLE_MOVE_CHANCE) {~0D~0A~09@2this.speed = this.speed > 0.0 ? 0.0 : CHARACTER_SPEED;~0D~0A~09@1}~0D~0A~09@1if (Random.randomFloat() < AI_SHOOT_CHANCE) {~0D~0A~09@2// If there are no other characters, acquire a new random target only while shooting.~0D~0A~09@2if (character.env.characters.length == 1) {~0D~0A~09@3target = this.getTarget(character);~0D~0A~09@3character.heading = target.minus(character.pos).normalize();~0D~0A~09@2}~0D~0A~0D~0A~09@2bulletPos = character.pos.plus(character.heading.times(BULLET_SPAWN_DISTANCE));~0D~0A~09@2// The AI cheats and has infinite ammo.~0D~0A~09@2if (character.weapon != null) {~0D~0A~09@3character.weapon.use(bulletPos, target, true);~0D~0A~09@2}~0D~0A~09@1}~0D~0A~0D~0A~09@1character.vel = new Vec2(Math.cos(this.direction), Math.sin(this.direction)).times(this.speed);~0D~0A~0D~0A~09@1if (!character.vel.isZero()) {~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09function isPlayerControlled() { return false; }~0D~0A~0D~0A~09function getTarget(character) {~0D~0A~09@1foundPlayer = false;~0D~0A~09@1target = null;~0D~0A~09@1for (i = 0; i < character.env.characters.length; ++i) {~0D~0A~09@2// Prioritize players.~0D~0A~09@2if (character.env.characters[i].agent.isPlayerControlled()) {~0D~0A~09@3return character.env.characters[i].pos.clone();~0D~0A~09@2}~0D~0A~09@2// Fall back to other characters.~0D~0A~09@2if (character.env.characters[i] != character && target == null) {~0D~0A~09@3target = character.env.characters[i].pos;~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09@1// If no other characters are found, choose a random target position.~0D~0A~09@1return target == null~0D~0A~09@2? new Vec2(Random.randomInt(0, X_RES), Random.randomInt(0, Y_RES))~0D~0A~09@2: target.clone()~0D~0A~09@2;~0D~0A~09}~0D~0A}~0D~0A%&J6[Math]~0Anamespace Math {~0A@1 @3const PI = 3.141592653589793238462;~0A @3const E = 2.718281828459045235360;~0A@1 @3function arccos(ratio) {~0A @7// range is checked in translated code.~0A @7return $@2(~0darcCos~0d, ratio);~0A @3}~0A@1 @3function arcsin(ratio) {~0A @7// range is checked in translated code.~0A @7return $@2(~0darcSin~0d, ratio);~0A @3}~0A@1 @3function arctan(ratio_or_y, x = 1) {~0A @7return $@2(~0darcTan~0d, ratio_or_y, x);~0A @3}~0A@1 @3function cos(theta) {~0A @7return $@2(~0dcos~0d, theta);~0A @3}~0A@1 @3function floor(value) {~0A @7return $@2(~0dfloor~0d, value);~0A @3}~0A@1 @3function sin(theta) {~0A @7return $@2(~0dsin~0d, theta);~0A @3}~0A@1 @3function tan(theta) {~0A @7return $@2(~0dtan~0d, theta);~0A @3}~0A@1 @3// All logarithms are just implemented with natural log and divided by a constant value to change base.~0A @3// An attempt is made to prevent floating point arithmetic from giving bogus values like log10(10@5) -> 5.9@5.@2~0A @3// (see fixFuzzyFloatPrecision in ValueUtil.cry)~0A @3function log10(value) {~0A @7return $@2(~0dln~0d, value, 1 / 2.302585092994046);~0A @3}~0A @3function ln(value) {~0A @7return $@2(~0dln~0d, value, 1.0);~0A @3}~0A @3function log2(value) {~0A @7return $@2(~0dln~0d, value, 1 / 0.6931471805599453);~0A @3}~0A@1 @3// Despite the fact that the following functions are relatively simple and could be implemented in~0A @3// non-translated code, they are relatively common and the native code should be inlined if possible.~0A @3function abs(value) {~0A @7return $@2(~0dabs~0d, value);~0A @3}~0A@1 @3function max(a, b) {~0A @7return $@2(~0dmax~0d, a, b);~0A @3}~0A@1 @3function min(a, b) {~0A @7return $@2(~0dmin~0d, a, b);~0A @3}~0A@1 @3function ensureRange(value, minBound, maxBound) {~0A @7return $@2(~0densureRange~0d, value, minBound, maxBound);~0A @3}~0A@1 @3function sign(num) {~0A @7return $@2(~0dsign~0d, num);~0A @3}~0A}~0A%&J7[Random]~0A%&J8[Random:Random.cry]~0Aimport Math;~0A@1namespace Random {~0A @3function randomFloat() {~0A @7return $$lib_random_random_float();~0A @3}~0A@1 @3// When one argument is provided, it is the max exclusive upper bound and the min is 0.~0A @3function randomInt(minIncl, maxExcl = null) {~0A @7return (maxExcl == null)~0A @B? ($$lib_random_random_int(0, minIncl)~0A @F?? Random._randomIntErrorHelper(~0YFirst argument must be a positive integer.~0Y))~0A @B: ($$lib_random_random_int(minIncl, maxExcl)~0A @F?? Random._randomIntErrorHelper(~0YrandomInt requires two integers, where the latter is larger.~0Y));~0A @3}~0A@1 @3function _randomIntErrorHelper(msg) {~0A @7throw new Core.InvalidArgumentException(msg);~0A @3}~0A@1 @3function randomBool() {~0A @7// could write this as $$lib_random_random_float() < .5, but this way it can get inlined.~0A @7// performance of this function may potentially be important to the user.~0A @7return $$lib_random_random_bool();~0A @3}~0A@1 @3/*~0A @7Returns a boolean that~0ds weighted~0A @72 args: n in d chance that true is returned~0A @71 arg: a float from 0 to 1 that indicates the ratio of trues.~0A @3*/~0A @3function randomChance(n, d = 1) {~0A @7return $$lib_random_random_float() * d < n;~0A @3}~0A}~0A%&J9source/Body.cry~0A// Represents a circular body that can interact with other bodies.~0D~0Aclass Body {~0D~0A~09field pos;~0D~0A~09field vel;~0D~0A~09field radius;~0D~0A~0D~0A~09constructor(pos, vel, radius) {~0D~0A~09@1this.pos = pos;~0D~0A~09@1this.vel = vel;~0D~0A~09@1this.radius = radius;~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1this.pos = this.pos.plus(this.vel.times(timeStep));~0D~0A~09}~0D~0A~0D~0A~09// Tests for collision between this and that over the given time step.~0D~0A~09// that: Another Body object.~0D~0A~09// timeStep: The upper bound of the time interval to check. (Lower bound is 0.0.)~0D~0A~09function collidesWith(that, timeStep) {~0D~0A~09@1// Use relative velocity to simplify the math.~0D~0A~09@1v = that.vel.minus(this.vel);~0D~0A~09@1if (v.isZero()) {~0D~0A~09@2return false;~0D~0A~09@1}~0D~0A~0D~0A~09@1collisionRadiusSquared = (this.radius + that.radius) ** 2;~0D~0A~0D~0A~09@1// Quadratic coefficients to solve for the time when the distance between the bodies is equal to the collision radius.~0D~0A~09@1p1 = this.pos;~0D~0A~09@1p2 = that.pos;~0D~0A~09@1a = v.x ** 2 + v.y ** 2;~0D~0A~09@1b = 2 * (p1.x * v.x - v.x * p2.x + p1.y * v.y - v.y * p2.y);~0D~0A~09@1c = p1.x ** 2 + p2.x ** 2 - 2 * p1.x * p2.x + p1.y ** 2 + p2.y ** 2 - 2 * p1.y * p2.y - collisionRadiusSquared;~0D~0A~0D~0A~09@1// Valid collision if a root occurs within the time interval.~0D~0A~09@1roots = Util.getQuadraticRoots(a, b, c);~0D~0A~09@1if (roots.length == 0) {~0D~0A~09@2return false;~0D~0A~09@1} else if (roots.length == 1) {~0D~0A~09@2return 0.0 <= roots[0] && roots[0] <= timeStep;~0D~0A~09@1} else {~0D~0A~09@2return (0.0 <= roots[0] && roots[0] <= timeStep) || (0.0 <= roots[1] && roots[1] <= timeStep);~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Tests whether this body contains the given point.~0D~0A~09function contains(point) {~0D~0A~09@1return this.pos.minus(point).lengthSquared() < this.radius ** 2.0;~0D~0A~09}~0D~0A}~0D~0A%&JAsource/Bullet.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst BULLET_RADIUS = 3.0;~0D~0Aconst BULLET_DIAMETER = 2 * BULLET_RADIUS;~0D~0Aconst BULLET_SPEED = 15.0;~0D~0Aconst BULLET_TRAIL_FACTOR = 8.0;~0D~0Aconst BULLET_SPAWN_DISTANCE = CHARACTER_RADIUS + BULLET_RADIUS;~0D~0A~0D~0A// A deadly projectile.~0D~0Aclass Bullet : Body {~0D~0A~09field initialPos;~0D~0A~0D~0A~09constructor(pos, vel) : base(pos, vel, BULLET_RADIUS) {~0D~0A~09@1this.initialPos = pos.clone();~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1trail = this.pos.minus(this.vel.times(BULLET_TRAIL_FACTOR));~0D~0A~09@1if (this.pos.minus(this.initialPos).lengthSquared() < this.pos.minus(trail).lengthSquared()) {~0D~0A~09@2trail = this.initialPos;~0D~0A~09@1}~0D~0A~09@1Graphics2D.Draw.line~0D~0A~09@2( Math.floor(this.pos.x + 0.5)~0D~0A~09@2, Math.floor(this.pos.y + 0.5)~0D~0A~09@2, Math.floor(trail.x + 0.5)~0D~0A~09@2, Math.floor(trail.y + 0.5)~0D~0A~09@2, BULLET_DIAMETER~0D~0A~09@2, 255, 0, 0~0D~0A~09@2);~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 0, 0, 0~0D~0A~09@2);~0D~0A~09}~0D~0A}~0D~0A%&JB[Graphics2D]~0A@1%&JC[Graphics2D:Draw.cry]~0Aimport Game;~0A@1namespace Graphics2D {~0A@1 @3enum _DrawCommands {~0A @7RECTANGLE = 1,~0A @7ELLIPSE = 2,~0A @7LINE = 3,~0A @7TRIANGLE = 4,~0A @7QUAD = 5,~0A @7IMAGE = 6,~0A@1 @7TEXT = 7, // Not used directly in Graphics2D. Injected by GraphicsText~0A @3}~0A@1 @3static class Draw {~0A@1 @7static field _queueOld = new Core.Object();~0A @7static field _queue = new Core.Object();~0A @7static field _text_queueOld = null;~0A @7static field _text_queue = null;~0A@1 @7static constructor() {~0A @B// essentially no-ops, but runs the queue initializers.~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queueOld, Graphics2D.Draw._text_queueOld, 0);~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 0);~0A@1 @BGame.GameWindow._frameEndHandlers.add(Graphics2D.Draw._renderer);~0A @BGame.GameWindow._frameBeginHandlers.add(Graphics2D.Draw._rendererReset);~0A @7}~0A@1 @7static function _renderer() {~0A @B// Go through and cap the color arguments to a proper range.~0A @B// Doing this here is two-fold:~0A @B// - only one function call. User-facing draw calls are unencumbered with extra logic.~0A @B// - This is done in Pastel code. Platform-specific renders will get canonicalized data.~0A @B$$lib_graphics2d_renderQueueValidateArgs(Graphics2D.Draw._queue);~0A@1 @B// send the render queue to the platform renderer~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 1);~0A@1 @B// Swap the buffers. The old buffer stays in memory, in tact, while new events get drawn to [text]queue.~0A @Bt = Graphics2D.Draw._queue;~0A @BGraphics2D.Draw._queue = Graphics2D.Draw._queueOld;~0A @BGraphics2D.Draw._queueOld = t;~0A@1 @Bt = Graphics2D.Draw._text_queue;~0A @BGraphics2D.Draw._text_queue = Graphics2D.Draw._text_queueOld;~0A @BGraphics2D.Draw._text_queueOld = t;~0A @7}~0A@1 @7static function _rendererReset() {~0A @B// clear the render queue~0A @BDraw._text_queue = null;~0A @Breturn $$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 2);~0A @7}~0A@1 @7static function ellipse(left, top, width, height, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.ELLIPSE,~0A @Fleft, top, width, height, r, g, b, a);~0A @7}~0A@1 @7static function line(startX, startY, endX, endY, strokeWidth, r, g, b, a = 255) {~0A @Bif (strokeWidth < 1) return;~0A@1 @B// casts all locals that are floats into ints.~0A @B// This is needed because ints are needed for the next two if statements and~0A @B// intQueueWrite16 runs too late.~0A @B$@2(~0dconvertFloatArgsToInts~0d);~0A@1 @B// If the line is horizontal or vertical, use the rectangle drawing code instead.~0A @B// This guarantees clean crisp 1-pixel lines across platforms which is actually~0A @B// probably the most common use case.~0A@1 @Bif (startY == endY) { // horizontal~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.RECTANGLE,~0A @J$@2(~0dmin~0d, startX, endX), // left~0A @JstartY - strokeWidth / 2, // top~0A @J$@2(~0dabs~0d, endX - startX), // width~0A @JstrokeWidth, // height~0A @Jr, g, b, a);~0A @B}~0A@1 @Bif (startX == endX) { // vertical~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.RECTANGLE,~0A @JstartX - strokeWidth / 2, // left~0A @J$@2(~0dmin~0d, startY, endY), // top~0A @JstrokeWidth, // width~0A @J$@2(~0dabs~0d, endY - startY), // height~0A @Jr, g, b, a);~0A @B}~0A@1 @B/*~0A @FGL-based platforms use the quadrilateral method to draw lines.~0A @FFor other platforms, the capping behavior of lines tends to vary~0A @Fso only use the native line drawing method when the line is skinny~0A @Fand different caps aren~0dt noticeable. (1 or 2 pixels wide)~0A@1 @FFor everything else, calculate the coordinates of the quadrilateral~0A @Fthat represents this line and use the platform~0ds polygon drawing method~0A @Finstead.~0A @B*/~0A @Bif (strokeWidth < 3 && !$$lib_graphics2d_isOpenGlBased()) {~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.LINE,~0A @JstartX, startY, endX, endY, strokeWidth, r, g, b, a);~0A @B}~0A@1 @B$@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.QUAD,~0A @FstartX, startY, endX, endY, strokeWidth, 0, 0, 0, r, g, b, a);~0A @B// The above command is just a placeholder. Do the rest of the~0A @B// transformation in translated code.@2~0A @Breturn $$lib_graphics2d_lineToQuad(Graphics2D.Draw._queue);~0A @7}~0A@1 @7static function rectangle(left, top, width, height, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.RECTANGLE,~0A @Fleft, top, width, height, r, g, b, a);~0A @7}~0A@1 @7static function triangle(ax, ay, bx, by, cx, cy, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.TRIANGLE,~0A @Fax, ay, bx, by, cx, cy, r, g, b, a);~0A @7}~0A@1 @7static function quad(ax, ay, bx, by, cx, cy, dx, dy, r, g, b, a = 255) {~0A @B// TODO: if this makes a bowtime, and this is an OpenGL based platform,~0A @B// decompose this into two triangle draws.~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.QUAD,~0A @Fax, ay, bx, by, cx, cy, dx, dy, r, g, b, a);~0A @7}~0A@1 @7static function fill(r, g, b) {~0A @Bt = Game.GameWindow.instance;~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 2);~0A @Breturn Graphics2D.Draw.rectangle(0, 0, t._w, t._h, r, g, b);~0A @7}~0A @3}~0A}~0A%&JD[Game]~0A%&JE[Game:Event.cry]~0Anamespace Game {~0A@1 @3// TODO: mark as abstract.~0A @3// This can be extended in other libraries, such as Gamepad~0A @3class Event {~0A @7field type;~0A @7constructor(type) {~0A @Bthis.type = type;~0A @7}~0A @3}~0A}~0A%&JF[Game:EventButton.cry]~0Anamespace Game {~0A @3enum EventButton {~0A @7LEFT = 0,~0A @7// MIDDLE = 1, // TODO~0A @7RIGHT = 2,~0A @3}~0A}~0A%&JG[Game:EventQuitType.cry]~0Anamespace Game {~0A@1 @3enum EventQuitType {~0A @7ALT_F4 = 0,~0A @7CLOSE_BUTTON = 1,~0A @7BACK_BUTTON = 2,~0A @3}~0A}~0A%&JH[Game:EventType.cry]~0Anamespace Game {~0A@1 @3// WARNING: These magic numbers are used throughout the stack~0A @3// GameLibHelper.cry and platform specific code.~0A @3enum EventType {~0A @7QUIT = 0x1,~0A@1 @7KEY_DOWN = 0x10,~0A @7KEY_UP = 0x11,~0A@1 @7MOUSE_MOVE = 0x20,~0A @7MOUSE_LEFT_DOWN = 0x21,~0A @7MOUSE_LEFT_UP = 0x22,~0A @7MOUSE_RIGHT_DOWN = 0x23,~0A @7MOUSE_RIGHT_UP = 0x24,~0A @7MOUSE_SCROLL = 0x25,~0A@1 @7GAMEPAD_HARDWARE = 0x30,~0A @7GAMEPAD = 0x31,~0A@1 @3}~0A}~0A%&JI[Game:GameWindow.cry]~0Aimport Math;~0A@1namespace Game {~0A@1 @3class GameWindow {~0A@1 @7static field instance;~0A@1 @7field _w;~0A @7field _h;~0A@1 @7static field _reusable_list = [];~0A@1 @7// These are static and not associated with the actual GameWindow instance.~0A @7// That means static initializers (such as the GamePad event pump) can register events without the~0A @7// window being open yet. Also, becuase they are static, they can be guarded against unauthorized~0A @7// access from user code (TODO: make that last statement true by adding the library access annotation)~0A @7static field _eventPumpHandlers = [];~0A @7static field _frameBeginHandlers = [];~0A @7static field _frameEndHandlers = [];~0A@1 @7field fps;~0A@1 @7constructor(title, fps, width, height, screenWidth = null, screenHeight = null) {~0A @BCore.assert(Core.isString(title), ~0YTitle must be a string.~0Y);~0A @Bt = ~0Y must be a number.~0Y;~0A @Bw = ~0Ywidth~0Y;~0A @Bh = ~0Yheight~0Y;~0A @BCore.assert(Core.isNumber(fps), ~0YFPS~0Y + t);~0A @BCore.assert(Core.isNumber(width), ~0Ywidth~0Y + t);~0A @BCore.assert(Core.isNumber(height), ~0Yheight~0Y + t);~0A @BCore.assert(screenWidth == null || Core.isNumber(screenWidth), ~0Yscreen ~0Y + w + t);~0A @BCore.assert(screenHeight == null || Core.isNumber(screenHeight), ~0Yscreen ~0Y + h + t);~0A@1 @BCore.assert(GameWindow.instance == null, ~0YCannot create multiple GameWindows.~0Y);~0A @BGameWindow.instance = this;~0A@1 @Bthis.fps = fps;~0A@1 @BscreenWidth = screenWidth ?? width;~0A @BscreenHeight = screenHeight ?? height;~0A@1 @Bwidth = Math.floor(width);~0A @Bheight = Math.floor(height);~0A @BscreenWidth = Math.floor(screenWidth);~0A @BscreenHeight = Math.floor(screenHeight);~0A@1 @Bthis._w = width;~0A @Bthis._h = height;~0A@1 @Bt = ~0Y must be positive.~0Y;~0A @BCore.assert(width > 0, w + t);~0A @BCore.assert(height > 0, h + t);~0A @BCore.assert(screenWidth > 0, ~0Yscreen ~0Y + w + t);~0A @BCore.assert(screenHeight > 0, ~0Yscreen ~0Y + h + t);~0A @BCore.assert(fps > 0, ~0YFPS~0Y + t);~0A@1 @B$$lib_game_initialize(fps);~0A @B$$lib_game_initialize_screen(width, height, screenWidth, screenHeight);~0A @B$$lib_game_set_title(title);~0A @7}~0A@1 @7// returns a list [isAspectRatioForced, screenWidth, screenHeight]~0A @7// can be called before game is created~0A @7// may possibly return 0 x 0 for the screen size if the underlying API can~0dt tell~0A @7// will never return [true, 0, 0]~0A @7static function getScreenInfo() {~0A @Breturn $$lib_game_getScreenInfo([false, 0, 0]);~0A @7}~0A@1 @7function clockTick() {~0A @Bfor (t : Game.GameWindow._frameEndHandlers) {~0A @Ft();~0A @B}~0A@1 @B$$lib_game_clock_tick();~0A@1 @Bfor (t : Game.GameWindow._frameBeginHandlers) {~0A @Ft();~0A @B}~0A @7}~0A@1 @7function pumpEvents() {~0A @Boutput = [];~0A @Bt = $$lib_game_pump_events(GameWindow._reusable_list);~0A @Blen = t.length;~0A @Bi = 0;~0A @Bwhile (i < len) {~0A @Fswitch (t[i++]) {~0A @J// for all mouse events: t[1] -> x, t[2] -> y~0A @Jcase EventType.MOUSE_MOVE: e = new MouseMoveEvent(t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_LEFT_DOWN: e = new MouseClickEvent(t[i - 1], EventButton.LEFT, true, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_LEFT_UP: e = new MouseClickEvent(t[i - 1], EventButton.LEFT, false, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_RIGHT_DOWN: e = new MouseClickEvent(t[i - 1], EventButton.RIGHT, true, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_RIGHT_UP: e = new MouseClickEvent(t[i - 1], EventButton.RIGHT, false, t[i++], t[i++]); break;~0A@1 @J// for mouse scroll events: t[3] -> scroll amount~0A @Jcase EventType.MOUSE_SCROLL: e = new MouseScrollEvent(t[i++], t[i++], t[i++]); break;~0A@1 @J// for key events: t[1] -> key code (see enum)~0A @Jcase EventType.KEY_DOWN: e = new KeyEvent(t[i++], true); break;~0A @Jcase EventType.KEY_UP: e = new KeyEvent(t[i++], false); break;~0A@1 @J// for quit events: t[1] -> quit subtype~0A @Jcase EventType.QUIT: e = new QuitEvent(t[i++]); break;~0A@1 @Jdefault: assert(false); break;~0A @F}~0A@1 @Foutput.add(e);~0A @B}~0A@1 @B// Things like gamepad events are added here~0A @Bif (GameWindow._eventPumpHandlers.length > 0) {~0A @Ffor (t : GameWindow._eventPumpHandlers) {~0A @Jt(output);~0A @F}~0A @B}~0A@1 @Breturn output;~0A @7}~0A@1 @7function setTitle(title) {~0A @Btitle += ~0d@1;~0A @Bif (title.length == 0) throw new Core.InvalidArgumentException(~0YTitle cannot be empty.~0Y);~0A @Breturn $$lib_game_set_title(title);~0A @7}~0A @3}~0A}~0A%&JJ[Game:KeyboardKey.cry]~0A@1namespace Game {~0A@1 @3// These keycodes are consistent with the JavaScript key codes.~0A @3// Because why not.~0A @3enum KeyboardKey {~0A@1 @7BACKSPACE = 8,~0A @7TAB = 9,~0A @7ENTER = 13,~0A @7SHIFT = 16,~0A @7CTRL = 17,~0A @7ALT = 18,~0A @7PAUSE = 19,~0A @7CAPS_LOCK = 20,~0A @7ESCAPE = 27,~0A @7SPACE = 32,~0A @7PAGE_UP = 33,~0A @7PAGE_DOWN = 34,~0A @7END = 35,~0A @7HOME = 36,~0A @7LEFT = 37,~0A @7UP = 38,~0A @7RIGHT = 39,~0A @7DOWN = 40,~0A @7PRINT_SCREEN = 44,~0A @7INSERT = 45,~0A @7DELETE = 46,~0A@1 @7NUM_0 = 48 + 0,~0A @7NUM_1 = 48 + 1,~0A @7NUM_2 = 48 + 2,~0A @7NUM_3 = 48 + 3,~0A @7NUM_4 = 48 + 4,~0A @7NUM_5 = 48 + 5,~0A @7NUM_6 = 48 + 6,~0A @7NUM_7 = 48 + 7,~0A @7NUM_8 = 48 + 8,~0A @7NUM_9 = 48 + 9,~0A@1 @7A = 64 + 1,~0A @7B = 64 + 2,~0A @7C = 64 + 3,~0A @7D = 64 + 4,~0A @7E = 64 + 5,~0A @7F = 64 + 6,~0A @7G = 64 + 7,~0A @7H = 64 + 8,~0A @7I = 64 + 9,~0A @7J = 64 + 10,~0A @7K = 64 + 11,~0A @7L = 64 + 12,~0A @7M = 64 + 13,~0A @7N = 64 + 14,~0A @7O = 64 + 15,~0A @7P = 64 + 16,~0A @7Q = 64 + 17,~0A @7R = 64 + 18,~0A @7S = 64 + 19,~0A @7T = 64 + 20,~0A @7U = 64 + 21,~0A @7V = 64 + 22,~0A @7W = 64 + 23,~0A @7X = 64 + 24,~0A @7Y = 64 + 25,~0A @7Z = 64 + 26,~0A@1 @7// In the JS keycodes, left Window key is 91 and right Window key is 92.~0A @7// But Crayon doesn~0dt care which one you press.~0A @7OS_COMMAND = 91,~0A @7CONTEXT_MENU = 93,~0A@1 @7F1 = 1@2 + 1,~0A @7F2 = 1@2 + 2,~0A @7F3 = 1@2 + 3,~0A @7F4 = 1@2 + 4,~0A @7F5 = 1@2 + 5,~0A @7F6 = 1@2 + 6,~0A @7F7 = 1@2 + 7,~0A @7F8 = 1@2 + 8,~0A @7F9 = 1@2 + 9,~0A @7F10 = 1@2 + 10,~0A @7F11 = 1@2 + 11,~0A @7F12 = 1@2 + 12,~0A@1 @7NUM_LOCK = 144,~0A @7SCROLL_LOCK = 145,~0A@1 @7SEMICOLON = 186,~0A @7EQUALS = 187,~0A @7COMMA = 188,~0A @7HYPHEN = 189,~0A @7PERIOD = 190,~0A @7SLASH = 191,~0A @7BACKTICK = 192,~0A @7OPEN_BRAKET = 219,~0A @7BACKSLASH = 220,~0A @7CLOSE_BRACKET = 221,~0A @7APOSTROPHE = 2@2,~0A @3}~0A}~0A%&JK[Game:KeyEvent.cry]~0Anamespace Game {~0A@1 @3class KeyEvent : Event {~0A @7field key;~0A @7field down;~0A@1 @7constructor(key, down) : base(down ? EventType.KEY_DOWN : EventType.KEY_UP) {~0A @Bthis.key = key;~0A @Bthis.down = down;~0A @7}~0A @3}~0A}~0A%&JL[Game:MouseClickEvent.cry]~0Anamespace Game {~0A@1 @3class MouseClickEvent : MouseEvent {~0A @7field button;~0A @7field down;~0A @7constructor(type, button, down, x, y) : base(type, x, y) {~0A @Bthis.button = button;~0A @Bthis.down = down;~0A @7}~0A @3}~0A}~0A%&JM[Game:MouseEvent.cry]~0Anamespace Game {~0A@1 @3class MouseEvent : Event {~0A @7field x;~0A @7field y;~0A @7constructor(type, x, y) : base(type) {~0A @Bthis.x = x;~0A @Bthis.y = y;~0A @7}~0A @3}~0A}~0A%&JN[Game:MouseMoveEvent.cry]~0Anamespace Game {~0A@1 @3class MouseMoveEvent : MouseEvent {~0A @7constructor(x, y) : base(EventType.MOUSE_MOVE, x, y) { }~0A @3}~0A}~0A%&JO[Game:MouseScrollEvent.cry]~0Anamespace Game {~0A@1 @3class MouseScrollEvent : MouseEvent {~0A @7field amount;~0A @7constructor(x, y, amount) : base(EventType.MOUSE_SCROLL, x, y) {~0A @Bthis.amount = amount;~0A @7}~0A @3}~0A}~0A%&JP[Game:QuitEvent.cry]~0Anamespace Game {~0A@1 @3class QuitEvent : Event {~0A @7field quitType;~0A @7constructor(quitType) : base(EventType.QUIT) {~0A @Bthis.quitType = quitType;~0A @7}~0A @3}~0A}~0A%&JQ[Graphics2D:GraphicsTexture.cry]~0Aimport Math;~0Aimport ImageResources;~0A@1namespace Graphics2D {~0A @3class GraphicsTexture {~0A @7/*~0A @BnativeData[0] -> weak reference to GraphicsTextureResource~0ds nativeData~0A@1 @BnativeData[1] -> texture left~0A @BnativeData[2] -> texture top~0A @BnativeData[3] -> texture right~0A @BnativeData[4] -> texture button~0A @BnativeData[5] -> width~0A @BnativeData[6] -> height~0A @7*/~0A@1 @7field _graphicsTextureResource;~0A @7field width;~0A @7field height;~0A@1 @7static field REUSABLE_WIDTH_HEIGHT_OUT = [0, 0];~0A @7static function load(imageResource) {~0A @BatlasNativeResource = imageResource._nativeResource;~0A @BatlasNativeResource.verifyUnlocked();~0A @Bwidth = imageResource._width;~0A @Bheight = imageResource._height;~0A@1 @Bif ($$lib_graphics2d_isPlatformUsingTextureAtlas()) { // TODO: compile time constant functions~0A @F// only create a new texture resource if one doesn~0dt exist that already has the same atlas backing it~0A @Fkey = atlasNativeResource.resourceFingerprint;~0A @FtextureResource = GraphicsTextureResource.database.get(key);~0A @Fif (textureResource == null) {~0A @JtextureResource = new GraphicsTextureResource();~0A @JnewWidth = GraphicsTexture._nextPowerOf2(atlasNativeResource.width);~0A @JnewHeight = GraphicsTexture._nextPowerOf2(atlasNativeResource.height);~0A @JtextureResource.width = newWidth;~0A @JtextureResource.height = newHeight;~0A @Jimg = new ImageResources.NativeImageData(NativeImageDataConstructionType.SIZE, [newWidth, newHeight]);~0A @JatlasDummyWrapper = new ImageResources.ImageResource(atlasNativeResource.width, atlasNativeResource.height, false);~0A @JatlasDummyWrapper._nativeResource = atlasNativeResource;~0A @Jimg.lock();~0A @Jimg.blit(atlasDummyWrapper, 0, 0);~0A @Jimg.unlock();~0A @J$$lib_graphics2d_initializeTextureResource(textureResource, true, img);~0A @JGraphicsTextureResource.database[key] = textureResource;~0A @F}~0A @Fx = imageResource._x;~0A @Fy = imageResource._y;~0A @Ftfw = textureResource.width + 0.0;~0A @Ftfh = textureResource.height + 0.0;~0A @FtextureCoords = [x / tfw, y / tfh, (x + width) / tfw, (y + height) / tfh];~0A @B} else {~0A @F// create a new texture each time.~0A @Fimg = new ImageResources.NativeImageData(NativeImageDataConstructionType.SIZE, [width, height]);~0A @Fimg.lock();~0A @Fimg.blit(imageResource, -imageResource._x, -imageResource._y);~0A @Fimg.unlock();~0A @FtextureResource = new GraphicsTextureResource();~0A @FtextureResource.width = width;~0A @FtextureResource.height = height;~0A @F$$lib_graphics2d_initializeTextureResource(textureResource, true, img);~0A @FtextureCoords = [0.0, 0.0, 1.0, 1.0];~0A @B}~0A @Btexture = new GraphicsTexture(textureResource, width, height);~0A @B$$lib_graphics2d_initializeTexture(texture, textureResource, textureCoords, width, height);~0A @Breturn texture;~0A @7}~0A@1 @7static function _nextPowerOf2(num) {~0A @Bif ((num & (num - 1)) == 0) return num;~0A @Bfor (walker = num / 2; walker > 0; walker /= 2) {~0A @Fnum |= walker;~0A @B}~0A @Breturn num + 1;~0A @7}~0A@1 @7// TODO: make this private~0A @7constructor(ref, width, height) {~0A @Bthis._graphicsTextureResource = ref;~0A @Bthis.width = width;~0A @Bthis.height = height;~0A @7}~0A@1 @7/*~0A @B[0] -> Graphics2D._DrawCommands.IMAGE,~0A@1 @B[1] -> optionFlagsBitMask {~0A @F1 - slice,~0A @F2 - stretch,~0A @F4 - rotate,~0A @F8 - alpha~0A @B}~0A@1 @B// used if slice is enabled~0A @B[2] -> sourceX,~0A @B[3] -> sourceY,~0A @B[4] -> sourceWidth,~0A @B[5] -> sourceHeight,~0A@1 @B// used if stretch is enabled~0A @B[6] -> drawWidth,~0A @B[7] -> drawHeight~0A@1 @B// these are top left corner unless rotate flag is enabled~0A @B[8] -> targetX,~0A @B[9] -> targetY,~0A@1 @B// used if rotate is enabled~0A @B[10] -> theta * 1048576,~0A@1 @B// used if alpha is enabled~0A @B[11] -> alpha value~0A@1 @7*/~0A @7function draw(x, y) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F0,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawWithAlpha(x, y, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F8,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegion(x, y, sx, sy, width, height) {~0A @Bif (width == 0 || height == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1,~0A @Fsx, sy, width, height,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawStretched(x, y, width, height) {~0A @Bif (width == 0 || height == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F2,~0A @F0, 0, 0, 0,~0A @Fwidth, height,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegionStretched(tx, ty, tw, th, sx, sy, sw, sh) {~0A @Bif (tw == 0 || th == 0 || sw == 0 || sh == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegionStretchedWithAlpha(tx, ty, tw, th, sx, sy, sw, sh, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2 | 8,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRotated(x, y, theta) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F4,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @Ftheta,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRotatedWithAlpha(x, y, theta, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F4 | 8,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @Ftheta,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawWithOptions(tx, ty, tw, th, sx, sy, sw, sh, theta, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2 | 4 | 8,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @Ftheta,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7// TODO: 90 degree rotations would be nice and simple.~0A@1 @7function _createResCopy(res) {~0A @Boutput = [res, res];~0A @Bif (!$$lib_graphics2d_isPlatformUsingTextureAtlas()) {~0A @F// for non-atlas platforms, create a copy of the texture resource.~0A @FnewRes = new GraphicsTextureResource();~0A @FnewRes.width = res.width;~0A @FnewRes.height = res.height;~0A @F$$lib_graphics2d_initializeTextureResource(newRes, false, res);~0A @Foutput[1] = newRes;~0A @B}~0A @Breturn output;~0A @7}~0A@1 @7function flip(h, v) {~0A @Bif (!(h || v)) return this;~0A @Bres = this._createResCopy(this._graphicsTextureResource);~0A @Boutput = new GraphicsTexture(res[1], this.width, this.height);~0A @Breturn $$lib_graphics2d_flip(this, output, h, v, res[0], res[1]);~0A @7}~0A@1 @7/*~0A @Bw and h are the final size as integers, not the scale ratio.~0A @BNegative integers are allowed and flip will be automatically called.~0A @7*/~0A @7function scale(w, h) {~0A @Bif (~0A @F!($@2(~0dtypeis~0d, w, Core.Type.INTEGER) &&~0A @J$@2(~0dtypeis~0d, h, Core.Type.INTEGER)) ||~0A @Fw == 0 ||~0A @Fh == 0) {~0A @FCore.fail(~0YImage dimensions must be non-zero integers.~0Y);~0A @B}~0A @Bhor = w < 0;~0A @Bver = h < 0;~0A @Bif (hor || ver) {~0A @Fimg = this.flip(hor, ver);~0A @Fw = $@2(~0dabs~0d, w);~0A @Fh = $@2(~0dabs~0d, h);~0A @B} else {~0A @Fimg = this;~0A @B}~0A @Bif (w == this.width && h == this.height) return img;~0A @Bres = this._createResCopy(this._graphicsTextureResource);~0A @Boutput = new GraphicsTexture(res[1], w, h);~0A @B$$lib_graphics2d_scale(img, output, w, h, res[0], res[1]);~0A @Breturn output;~0A @7}~0A @3}~0A}~0A%&JR[ImageResources]~0A%&JS[ImageResources:AggregatedImageSheet.cry]~0Anamespace ImageResources {~0A @3/*~0A @7Aggregated image sheets are collections of image sheets and behave just like~0A @7one giant image sheet. This class is not exposed to users through documentation~0A @7as it implements the same interface as a normal ImageSheet. These are created by~0A @7the user by passing in a list of sheet names to the ImageSheet.loadFromResources~0A @7functions instead of a single name.~0A @3*/~0A @3class AggregatedImageSheet {~0A@1 @7field _sheetsById = {};~0A @7field _orderedSheets;~0A @7field _ids = [];~0A @7field _weight = 0;~0A@1 @7field _isLoaded = false;~0A@1 @7constructor(sheets) {~0A @Bthis._orderedSheets = sheets.clone();~0A @Bif (sheets.length == 0) {~0A @Fthis._isLoaded = true;~0A @B} else {~0A @Ffor (sheet : sheets) {~0A @Jid = sheet._id;~0A @Jthis._sheetsById[id] = sheet;~0A @Jthis._ids.add(id);~0A @Jthis._weight += sheet._weight;~0A @F}~0A @B}~0A @7}~0A@1 @7function getImage(resourcePath) {~0A @Bres = ImageResourceManifest.getFileInfo(resourcePath, true);~0A @Bsheet = this._sheetsById.get(res[1]);~0A @Bif (sheet == null) {~0A @F// TODO: show the ID~0ds of the loaded ones?~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d is not included in this sheet.~0Y, resourcePath);~0A @B}~0A@1 @Breturn sheet.getImage(resourcePath);~0A @7}~0A@1 @7function isDone() {~0A @Bif (this._isLoaded) return true;~0A@1 @Bfor (sheet : this._orderedSheets) {~0A @Fif (!sheet.isDone()) {~0A @Jreturn false;~0A @F}~0A @B}~0A@1 @Bthis._isLoaded = true;~0A @Breturn true;~0A @7}~0A@1 @7function getProgress() {~0A @Bif (this._isLoaded) return 1.0;~0A@1 @Bprogress = 0.0;~0A @Bfor (sheet : this._orderedSheets) {~0A @Fprogress += sheet.getProgress() * sheet._weight;~0A @B}~0A@1 @Breturn progress / this._weight;~0A @7}~0A@1 @7function getFiles() {~0A @Boutput = [];~0A @Bfor (sheet : this._orderedSheets) {~0A @Foutput.concat(sheet.getFiles());~0A @B}~0A @Boutput.sort();~0A @Breturn output;~0A @7}~0A @3}~0A}~0A%&JT[ImageResources:Exceptions.cry]~0Anamespace ImageResources {~0A @3class ImageNotFoundException : Core.Exception {~0A@1 @7field path;~0A@1 @7// TODO: actual string.format support. Till then.@2~0A @7constructor(template, path) : base(template.replace(~0d{0}~0d, path)) {~0A @Bthis.path = path;~0A @7}~0A @3}~0A@1 @3class SheetNotFoundException : Core.Exception {~0A@1 @7field id;~0A@1 @7// TODO: string.format here as well.@2~0A @7constructor(template, id) : base(template.replace(~0d{0}~0d, id)) {~0A @Bthis.id = id;~0A @7}~0A @3}~0A@1 @3class LoadFailedException : Core.Exception {~0A @7constructor(msg) : base(msg) { }~0A @3}~0A}~0A%&JU[ImageResources:ImageLoader.cry]~0Anamespace ImageResources {~0A@1 @3enum ImageLoaderType {~0A @7RESOURCE,~0A @7WEB,~0A @7FILE,~0A @3}~0A@1 @3class ImageLoader {~0A@1 @7/*~0A @BnativeData[0] -> asynchronous loader reference~0A @FC# loader -> pointer to background worker~0A @FPython loader -> pointer to daemon thread~0A @FJavaScript loader -> some sort of data structure whose reference was passed to the async loader.~0A @FJava -> also a background thread worker.~0A @FPHP -> load image synchronously always. isDone() will just say true.~0A@1 @BnativeData[1] -> actual image data~0A @BnativeData[2] -> status code~0A @F0 -> not done~0A @F1 -> done~0A @F2 -> load failed~0A@1 @BnativeData[3] -> mutex (if the platform needs one)~0A @7*/~0A@1 @7~12private~0A @7constructor() { }~0A@1 @7/*~0A @BIt~0ds possible the user may not yield execution and check for isDone() in a while loop.~0A @BThis is reasonable if the user is simply trying to take advantage of the multithreading~0A @Bof loading images. For example.@2~0A@1 @Bloader = ImageLoader.loadFromResourcesAsync(~0dfoo.png~0d); // load image in parallel with task below~0A @BsomeSortOfExpensiveTask();~0A @Bwhile (!loader.isDone()) { }~0A @Bimage = loader.getImage();~0A@1 @BIf they do, go ahead and yield the execution if they call isDone() enough times in one~0A @Biteration of the interpreter without waiting for a yield.~0A @7*/~0A @7field _executionIterationCount = 0; // current interpreter execution counter for this execution context ID~0A @7field _isDoneChecksOnThisFrame = 0; // number of times isDone() has been called during this execution counter.~0A @7field _isDone = false;~0A @7field _nativeImage;~0A @7field _output = null;~0A@1 @7function getImage() {~0A @Bif (this._output != null) return this._output;~0A @Bif (!this._isDone) throw new Core.InvalidOperationException(~0YLoading is not finished.~0Y);~0A @Bif (this._nativeImage == null) {~0A @Fthrow new Core.InvalidOperationException(~0YImage has already been constructed.~0Y);~0A @B}~0A @Bimg = new ImageResource(this._nativeImage.width, this._nativeImage.height, false);~0A @Bimg._nativeResource = this._nativeImage;~0A @Bthis._output = img;~0A @Breturn img;~0A @7}~0A@1 @7static field REUSABLE_IS_DONE_OUT = [null];~0A @7function isDone() {~0A @Bif (this._isDone) {~0A @Freturn true;~0A @B}~0A@1 @B// There are 2 possible places where the final result of the loading is copied to~0A @B// the NativeImageData instance~0ds nativeData:~0A @B// - at the end of the asynchronous loader, using the mutex in nativeData[3]~0A @B// - as a result of this next function. It will never be called twice on a successfully loaded image.~0A @B$$lib_imageresources_checkLoaderIsDone(this, this._nativeImage, ImageLoader.REUSABLE_IS_DONE_OUT);~0A@1 @Bstatus = ImageLoader.REUSABLE_IS_DONE_OUT[0];~0A @Bif (status > 0) {~0A @Fthis._isDone = true;~0A @Fif(status != 1) throw new ImageResources.LoadFailedException(~0YError encountered while loading image.~0Y);~0A @Freturn true;~0A @B}~0A@1 @Bif ($$lib_imageresources_yieldRequiredByPlatform()) {~0A @F// Keep track of how many times this has been called without a yield.~0A @F// If it~0ds more than a couple times, then it~0ds likely this person is checking~0A @F// inside a blocking loop and the handler hasn~0dt had a chance to fire.~0A @Fc = Core.getExecutionIterationCounter();~0A @Fif (c != this._executionIterationCount) {~0A @Jthis._isDoneChecksOnThisFrame = 1;~0A @Jthis._executionIterationCount = c;~0A @F} else {~0A @Jthis._isDoneChecksOnThisFrame++;~0A @F}~0A@1 @F// If they~0dve called this function 10 times without a yield, do a thread sleep~0A @F// to potentially let the image load handler run.~0A @Fif (this._isDoneChecksOnThisFrame > 10) {~0A @JCore.sleep(.01);~0A @F}~0A @B}~0A@1 @Breturn false;~0A @7}~0A@1 @7static function loadFromResourcesAsync(filename) {~0A @Breturn ImageLoader._loadImpl(filename, false, true, null, null);~0A @7}~0A@1 @7static function loadFromResources(filename) {~0A @Breturn ImageLoader._loadImpl(filename, false, false, null, null);~0A @7}~0A@1 @7static function _loadImpl(filename, isGen, isAsync, width, height) {~0A @Bif (!isGen) {~0A @Fdata = ImageLoader.getGenName(filename);~0A @Ffilename = data[1];~0A @Fwidth = data[2];~0A @Fheight = data[3];~0A @B}~0A @BnativeImage = new NativeImageData(NativeImageDataConstructionType.BLANK, null);~0A @BnativeImage.width = width;~0A @BnativeImage.height = height;~0A@1 @Bif (isAsync) {~0A @Floader = new ImageResources.ImageLoader();~0A @Floader._nativeImage = nativeImage;~0A @F$$lib_imageresources_loadAsynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @Jloader);~0A @Freturn loader;~0A @B}~0A@1 @BstatusOut = [false, true];~0A @Bif ($$lib_imageresources_yieldRequiredByPlatform()) {~0A @Floader = new ImageResources.ImageLoader();~0A @Floader._nativeImage = nativeImage;~0A @F$$lib_imageresources_loadAsynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @Jloader);~0A@1 @FCore.sleep(.005);~0A @Fdelay = .01;~0A @Fwhile (!loader.isDone()) {~0A @JCore.sleep(delay);~0A @Jdelay *= 1.2;~0A @Jif (delay > 1) delay = 1;~0A @F}~0A @FstatusOut.reverse();~0A @B} else {~0A @F$$lib_imageresources_loadSynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @JstatusOut);~0A @B}~0A@1 @B// TODO: include filename in LoadFailedException. filename in this function can potentially be a generated name which is not useful.~0A @Bif (!statusOut[0]) throw new ImageResources.LoadFailedException(~0YImage load failed~0Y);~0A@1 @Bimage = new ImageResources.ImageResource(width, height, false);~0A @Bimage._nativeResource = nativeImage;~0A @Breturn image;~0A @7}~0A@1 @7static function getGenName(filename) {~0A @Binfo = ImageResourceManifest.getFileInfo(filename);~0A @Bif (info == null) throw new ImageResources.ImageNotFoundException(~0YImage resource ~0d{0}~0d not found.~0Y, filename);~0A @Bif (info[0] == ImgResourceType.SHEET) throw new ImageResources.LoadFailedException(~0Y~0d~0Y + filename + ~0Y~0d must be loaded as an ImageSheet.~0Y);~0A @Breturn info;~0A @7}~0A @3}~0A}~0A%&JV[ImageResources:ImageResource.cry]~0Anamespace ImageResources {~0A @3class ImageResource {~0A@1 @7field _nativeResource;~0A @7field _width;~0A @7field _height;~0A@1 @7// top-left location within the _nativeResource~0A @7field _x = 0;~0A @7field _y = 0;~0A@1 @7// Do not document init. Only used internally.~0A @7constructor(width, height, init = true) {~0A @Bthis._width = width;~0A @Bthis._height = height;~0A @Bif (init) {~0A @Fthis._nativeResource = new NativeImageData(NativeImageDataConstructionType.SIZE, [width, height]);~0A @B}~0A @7}~0A@1 @7// TODO: support immutable fields. I~0dd much rather expose these as .width and .height.~0A @7function getWidth() { return this._width; }~0A @7function getHeight() { return this._height; }~0A @3}~0A}~0A%&JW[ImageResources:ImageResourceManifest.cry]~0A/*~0A @3See notes.txt~0A*/~0A@1namespace ImageResources {~0A @3enum ImgResourceType {~0A @7STANDALONE,~0A @7SHEET,~0A @3}~0A@1 @3class ImageResourceManifest {~0A@1 @7static field resourceInfo = null;~0A @7static field sheetInfo = null;~0A @7static field sheetIdByName = {};~0A @7static field filesBySheetId = {};~0A@1 @7static function getFileInfo(filename, sheetOnly = false) {~0A @BImageResourceManifest.ensureInitialized();~0A @Boutput = ImageResourceManifest.resourceInfo.get(filename);~0A @Bif (output == null) {~0A @Fnkey = filename.trim().replace(~0d~1U@1~0d, ~0d/~0d);~0A @Foutput = ImageResourceManifest.resourceInfo.get(nkey);~0A @Fif (output != null) {~0A @JImageResourceManifest.resourceInfo[filename] = output;~0A @F}~0A @B}~0A@1 @Bif (output == null) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d does not exist.~0Y, filename);~0A @B}~0A@1 @Bif (sheetOnly && output[0] != ImgResourceType.SHEET) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d is standalone and not included in an image sheet.~0Y, filename);~0A @B}~0A@1 @Breturn output;~0A @7}~0A@1 @7static function getSheetInfo(name) {~0A @BImageResourceManifest.ensureInitialized();~0A @Bif (Core.typeof(name) != Core.Type.STRING) throw new Core.InvalidArgumentException(~0YImage sheet ID must be a string~0Y);~0A @Bid = ImageResourceManifest.sheetIdByName.get(name);~0A @Bif (id == null) throw new ImageResources.SheetNotFoundException(~0YImage sheet with ID of ~0d{0}~0d not found.~0Y, name);~0A @Breturn ImageResourceManifest.sheetInfo[id];~0A @7}~0A@1 @7static function ensureInitialized() {~0A @Bif (ImageResourceManifest.resourceInfo != null) return;~0A @BresourceInfo = {};~0A @BsheetInfo = {};~0A @BImageResourceManifest.resourceInfo = resourceInfo;~0A @BImageResourceManifest.sheetInfo = sheetInfo;~0A@1 @Bmanifest = $$lib_imageresources_getManifestString();~0A @BactiveSheetId = null;~0A @BactiveChunkId = 0;~0A @Bfor (line : manifest.split(~0d~1Un~0d)) {~0A @Fparts = line.split(~0d,~0d);~0A @Fswitch (parts[0].trim()) {~0A@1 @Jcase ~0dA~0d: // A standalone file~0A @NgenFilename = parts[1];~0A @Nw = Core.parseInt(parts[2]);~0A @Nh = Core.parseInt(parts[3]);~0A @Nfilename = parts[4:].join(~0d,~0d).trim();~0A @NresourceInfo[filename] = [ImgResourceType.STANDALONE, genFilename, w, h];~0A @Nbreak;~0A@1 @Jcase ~0dS~0d: // declare a new sheet~0A @NactiveSheetId = parts[1];~0A @Nname = parts[2:].join(~0d,~0d).trim();~0A @NsheetInfo[activeSheetId] = {~0A @R~0dname~0d: name,~0A @R~0did~0d: activeSheetId,~0A @R~0dchunks~0d: {},~0A @N};~0A @NImageResourceManifest.sheetIdByName[name] = activeSheetId;~0A @Nbreak;~0A@1 @Jcase ~0dC~0d: // declare a new chunk~0A @N++activeChunkId;~0A @Nwidth = Core.parseInt(parts[1]);~0A @Nheight = Core.parseInt(parts[2]);~0A @Nif (width == 0 && height == 0) {~0A @Rwidth = 1024;~0A @Rheight = 1024;~0A @N}~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId] = {~0A @R~0dwidth~0d: width,~0A @R~0dheight~0d: height,~0A @R~0dtiles~0d: [],~0A @N};~0A @Nbreak;~0A@1 @Jcase ~0dT~0d: // tile in the active chunk~0A @NgenFilename = parts[1];~0A @Nx = Core.parseInt(parts[2]);~0A @Ny = Core.parseInt(parts[3]);~0A @Nwidth = Core.parseInt(parts[4]);~0A @Nheight = Core.parseInt(parts[5]);~0A @Nbytes = Core.parseInt(parts[6]);~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId][~0dtiles~0d].add(~0A @R[genFilename, x, y, width, height, bytes]);~0A @Nbreak;~0A @Jcase ~0dI~0d: // image in the active sheet/chunk~0A @Nx = Core.parseInt(parts[1]);~0A @Ny = Core.parseInt(parts[2]);~0A @Nwidth = Core.parseInt(parts[3]);~0A @Nheight = Core.parseInt(parts[4]);~0A @Nfilename = parts[5:].join(~0d,~0d).trim();~0A @NresourceInfo[filename] = [ImgResourceType.SHEET, activeSheetId, activeChunkId, x, y, width, height];~0A @Nfiles = ImageResourceManifest.filesBySheetId.get(activeSheetId) ?? [];~0A @NImageResourceManifest.filesBySheetId[activeSheetId] = files;~0A @Nfiles.add(filename);~0A @Nbreak;~0A@1 @Jcase ~0dJ~0d: // A JPEG that is a member of a sheet logically but is its own chunk~0A @NgenFilename = parts[1];~0A @Nwidth = Core.parseInt(parts[2]);~0A @Nheight = Core.parseInt(parts[3]);~0A @Nbytes = Core.parseInt(parts[4]);~0A @Nfilename = parts[5:].join(~0d,~0d).trim();~0A@1 @N++activeChunkId;~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId] = {~0A @R~0dwidth~0d: width,~0A @R~0dheight~0d: height,~0A @R~0dtiles~0d: [~0A @V[genFilename, 0, 0, width, height, bytes],~0A @R],~0A @N};~0A @Nfiles = ImageResourceManifest.filesBySheetId.get(activeSheetId) ?? [];~0A @NImageResourceManifest.filesBySheetId[activeSheetId] = files;~0A @Nfiles.add(filename);~0A @NresourceInfo[filename] = [ImgResourceType.SHEET, activeSheetId, activeChunkId, 0, 0, width, height];~0A @Nbreak;~0A@1 @Jdefault:~0A @N// This should not happen.~0A @N// If it does, there~0ds a good chance that it~0ds the BOM in the file.~0A @Nthrow new Exception([~0A @Rparts,~0A @Rparts[0].trim().length // this value should be 1~0A @N]);~0A @F}~0A @B}~0A@1 @Bfor (files : ImageResourceManifest.filesBySheetId.values()) {~0A @Ffiles.sort();~0A @B}~0A @7}~0A @3}~0A}~0A%&JX[ImageResources:ImageSheet.cry]~0Anamespace ImageResources {~0A @3class ImageSheet {~0A@1 @7field _isLoaded = false;~0A @7field _info;~0A @7field _loader;~0A @7field _name;~0A @7field _id;~0A@1 @7// List where the chunk ID is the index and the value is an ImageResource instance.~0A @7field _chunks;~0A@1 @7// essentially this amounts to the tile count (as of now)~0A @7// For aggregated image sheets, this represents a relative weight of how much ~0Ystuff~0Y~0A @7// this sheet loads so that the overall percentage can be shown as a function of all~0A @7// sheets more accurately.~0A @7field _weight;~0A@1 @7~12private~0A @7constructor(info, isAsync) {~0A @Bthis._info = info;~0A @Bthis._name = info[~0dname~0d];~0A @Bthis._id = info[~0did~0d];~0A@1 @Bchunks = info[~0dchunks~0d];~0A @Btiles = [];~0A @Bfor (chunk : chunks.values()) {~0A @Ftiles.concat(chunk[~0dtiles~0d]);~0A @B}~0A@1 @Bthis._weight = tiles.length;~0A@1 @Bif (isAsync) {~0A @Fthis._loader = new ImageResources.ImageSheetLoaderAsync(tiles).load();~0A @B} else {~0A @Flookup = {};~0A @Ffor (tile : tiles) {~0A @JgenName = tile[0];~0A @Jwidth = tile[3];~0A @Jheight = tile[4];~0A @Jlookup[genName] = ImageLoader._loadImpl(~0A @NgenName,~0A @Ntrue, // is generated name~0A @Nfalse, // is asynchronous~0A @Nwidth, height);~0A @F}~0A @Fthis._turnTilesIntoSheet(lookup);~0A @B}~0A @7}~0A@1 @7static function loadFromResources(name) {~0A @Breturn ImageSheet._initImpl(name, false, true);~0A @7}~0A@1 @7static function loadFromResourcesAsync(name) {~0A @Breturn ImageSheet._initImpl(name, true, true);~0A @7}~0A@1 @7static function _initImpl(name, isAsync, allowLists) {~0A@1 @B// If name is actually a LIST of names, then the user actually wants an~0A @B// aggregated image sheet.~0A @Bif (allowLists && Core.typeof(name) == Core.Type.LIST) {~0A @Fsheets = [];~0A @Ffor (t : name) {~0A @Jsheets.add(ImageSheet._initImpl(t, isAsync, false));~0A @F}~0A @Freturn new AggregatedImageSheet(sheets);~0A @B}~0A@1 @B// asserts on not found, so info is always non-null/valid~0A @Binfo = ImageResourceManifest.getSheetInfo(name);~0A@1 @Breturn new ImageSheet(info, isAsync);~0A @7}~0A@1 @7function getImage(resourcePath) {~0A @Bif (!this._isLoaded) throw new ImageResources.LoadFailedException(~0YCannot load image from sheet that is not finished loading.~0Y);~0A@1 @B// Convert the _loader object into a finalized sheet and GC the loader~0A @B// if present.~0A @Bif (this._loader != null) {~0A @Fthis._turnTilesIntoSheet(this._loader.completed);~0A @Fthis._loader = null;~0A @B}~0A@1 @Bres = ImageResourceManifest.getFileInfo(resourcePath, true);~0A @Bif (res[1] != this._id) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YImage sheet ~0d~0Y + this._name + ~0Y~0d does not contain resource: ~0d{0}~0d~0Y, resourcePath);~0A @B}~0A@1 @Bimg = this._chunks[res[2]];~0A@1 @Boutput = new ImageResources.ImageResource(res[5], res[6], false);~0A @Boutput._nativeResource = img._nativeResource;~0A @Boutput._x = res[3];~0A @Boutput._y = res[4];~0A @Breturn output;~0A @7}~0A@1 @7static field _reusableStatusOut = [null, null];~0A @7function isDone() {~0A @Bif (this._isLoaded) return true;~0A @Bthis._loader.getStatus(ImageSheet._reusableStatusOut);~0A @Bif (ImageSheet._reusableStatusOut[0]) {~0A @Fthis._isLoaded = true;~0A @B}~0A @Breturn this._isLoaded;~0A @7}~0A@1 @7function getProgress() {~0A @Bif (this._isLoaded) return 1.0;~0A @Bthis._loader.getStatus(ImageSheet._reusableStatusOut);~0A @Bif (ImageSheet._reusableStatusOut[0]) {~0A @Fthis._isLoaded = true;~0A @Freturn 1.0;~0A @B}~0A @Breturn ImageSheet._reusableStatusOut[1];~0A @7}~0A@1 @7function _turnTilesIntoSheet(tilesByName) {~0A @BchunkMetadata = this._info[~0dchunks~0d];~0A @Bchunks = [];~0A @Bfor (chunkId : chunkMetadata.keys()) {~0A @Fchunk = chunkMetadata[chunkId];~0A @Fimg = new ImageResources.ImageResource(chunk[~0dwidth~0d], chunk[~0dheight~0d]);~0A @Fres = img._nativeResource;~0A @Fres.lock();~0A @Ffor (tile : chunk[~0dtiles~0d]) {~0A @Jname = tile[0];~0A @Jx = tile[1];~0A @Jy = tile[2];~0A @Jres.blit(tilesByName[name], x, y);~0A @F}~0A @Fres.unlock();~0A @Fwhile (chunks.length <= chunkId) { chunks.add(null); }~0A @Fchunks[chunkId] = img;~0A @B}~0A @Bthis._chunks = chunks;~0A @Bthis._isLoaded = true;~0A @Bthis._info = null; // no longer needed. feed to the GC.~0A @7}~0A@1 @7function getFiles() {~0A @Breturn ImageResourceManifest.filesBySheetId[this._id].clone();~0A @7}~0A @3}~0A@1 @3class ImageSheetLoaderAsync {~0A @7field tiles;~0A @7field completed = {};~0A @7field inProgress = {};~0A@1 @7constructor(tiles) {~0A @Bthis.tiles = tiles;~0A @7}~0A@1 @7function load() {~0A @Bfor (tile : this.tiles) {~0A @FgenName = tile[0];~0A @Fwidth = tile[3];~0A @Fheight = tile[4];~0A @Fthis.inProgress[genName] = ImageLoader._loadImpl(~0A @JgenName,~0A @Jtrue, // is generated filename~0A @Jtrue, // is asynchronous~0A @Jwidth, height);~0A @B}~0A @Breturn this;~0A @7}~0A@1 @7function getStatus(out) {~0A @Bif (this.inProgress.length > 0) {~0A @Ffor (key : this.inProgress.keys()) {~0A @Jif (this.inProgress[key].isDone()) {~0A @Nthis.completed[key] = this.inProgress[key].getImage();~0A @Nthis.inProgress.remove(key);~0A @J}~0A @F}~0A @B}~0A@1 @Bif (this.inProgress.length == 0) {~0A @Fout[0] = true;~0A @Fout[1] = 1.0;~0A @B} else {~0A @Fout[0] = false;~0A @Fout[1] = 1.0 * this.completed.length / this.tiles.length;~0A @B}~0A @7}~0A @3}~0A}~0A%&JY[ImageResources:NativeImageData.cry]~0Anamespace ImageResources {~0A @3enum NativeImageDataConstructionType {~0A @7SIZE,~0A @7BLANK,~0A @7CLONE,~0A @3}~0A @3class NativeImageData {~0A@1 @7static field GLOBAL_ID = 0;~0A@1 @7// nativeData[0] -> native bitmap resource~0A @7// nativeData[1] -> bitmap width~0A @7// nativeData[2] -> bitmap height~0A @7// nativeData[3] -> pixel edit session~0A@1 @7field width;~0A @7field height;~0A @7field revisionId = 0;~0A @7field resourceId = NativeImageData.GLOBAL_ID++;~0A @7field resourceFingerprint;~0A @7field _locked = false;~0A@1 @7constructor(instruction, args) {~0A@1 @Bswitch (instruction) {~0A @Fcase NativeImageDataConstructionType.SIZE:~0A @Jthis.width = args[0];~0A @Jthis.height = args[1];~0A @Jbreak;~0A @Fcase NativeImageDataConstructionType.CLONE:~0A @Jother = args[0];~0A @Jthis.width = other.width;~0A @Jthis.height = other.height;~0A @Jbreak;~0A @Fcase NativeImageDataConstructionType.BLANK:~0A @Jbreak;~0A @B}~0A@1 @Bif (instruction != NativeImageDataConstructionType.BLANK) {~0A @F$$lib_imageresources_nativeImageDataInit(this, this.width, this.height);~0A @Fif (instruction == NativeImageDataConstructionType.CLONE) {~0A @Jthis.revisionId--; // since this is the constructor prevent the first revision ID from being 1.~0A @Jthis.lock();~0A @Jthis.blit(other, 0, 0);~0A @Jthis.unlock();~0A @F}~0A @B}~0A@1 @Bthis.updateResourceFingerprint();~0A @7}~0A@1 @7function updateResourceFingerprint() {~0A @Bthis.resourceFingerprint = this.resourceId + ~0d,~0d + this.revisionId;~0A @7}~0A@1 @7function lock() {~0A @Bthis._locked = true;~0A @Bthis.revisionId++;~0A @Bthis.updateResourceFingerprint();~0A @7}~0A@1 @7function unlock() {~0A @B$$lib_imageresources_flushImageChanges(this);~0A @Bthis._locked = false;~0A @7}~0A@1 @7function blit(image, x, y) {~0A @Bother = image._nativeResource;~0A @Bother.verifyUnlocked();~0A @Bthis.verifyLocked();~0A@1 @BtargetLeft = x;~0A @BtargetTop = y;~0A @BtargetRight = x + other.width;~0A @BtargetBottom = y + other.height;~0A @BsourceLeft = 0;~0A @BsourceTop = 0;~0A @BsourceRight = other.width;~0A @BsourceBottom = other.height;~0A @Bif (targetRight < 0 ||~0A @FtargetBottom < 0 ||~0A @FtargetTop >= this.height ||~0A @FtargetLeft >= this.width) return;~0A@1 @Bif (targetRight >= this.width) {~0A @Fdiff = targetRight - this.width;~0A @FtargetRight -= diff;~0A @FsourceRight -= diff;~0A @B}~0A @Bif (targetBottom >= this.height) {~0A @Fdiff = targetBottom - this.height;~0A @FtargetBottom -= diff;~0A @FsourceBottom -= diff;~0A @B}~0A @Bif (targetLeft < 0) {~0A @Fdiff = -targetLeft;~0A @FtargetLeft = 0;~0A @FsourceLeft += diff;~0A @B}~0A @Bif (targetTop < 0) {~0A @Fdiff = -targetTop;~0A @FtargetTop = 0;~0A @FsourceTop += diff;~0A @B}~0A @Bw = sourceRight - sourceLeft;~0A @Bh = sourceBottom - sourceTop;~0A @Bif (w == 0 || h == 0) return;~0A@1 @B// initializes the pixel edit session in nativeData[3] if not present~0A @B$$lib_imageresources_blit(this, other, targetLeft, targetTop, sourceLeft, sourceTop, w, h);~0A @7}~0A@1 @7function verifyUnlocked() {~0A @Bif (this._locked) throw new Core.InvalidOperationException(~0YImage resource is locked and cannot be used.~0Y);~0A @7}~0A@1 @7function verifyLocked() {~0A @Bif (!this._locked) throw new Core.InvalidOperationException(~0YImage resource must be locked.~0Y);~0A @7}~0A @3}~0A}~0A%&JZ[Graphics2D:GraphicsTextureResource.cry]~0Anamespace Graphics2D {~0A @3class GraphicsTextureResource {~0A@1 @7static field database = {}; // mapping of ImageResource version keys to GraphicsTextureResource instances.~0A@1 @7/*~0A @BnativeData[0] -> boolean if this is GL-based~0A @BnativeData[1] -> boolean if this texture is loaded.~0A @BnativeData[2] -> texture ID for OpenGL-based platforms~0A @BnativeData[3] -> a _COPY_ of the actual native image resource~0A @Ffor OpenGL platforms this is a power-of-2 sized image~0A @Ffor non-GL platforms this is a simple image of just the image desired, which could be a single~0A @Jmember of an image sheet.~0A @BnativeData[4] -> width~0A @BnativeData[5] -> height~0A @7*/~0A@1 @7// set externally~0A @7field width;~0A @7field height;~0A@1 @7constructor() { }~0A @3}~0A}~0A%&Jasource/Character.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst CHARACTER_RADIUS = 15.0;~0D~0Aconst CHARACTER_SPEED = 5.0;~0D~0A~0D~0A// A computer- or human-controlled game character.~0D~0Aclass Character : Body {~0D~0A~09field env;~0D~0A~09field agent;~0D~0A~09field heading = new Vec2(1.0, 0.0);~0D~0A~09field health = 3;~0D~0A~09field weapon;~0D~0A~0D~0A~09constructor(env, agent, pos) : base(pos, Vec2.zero(), CHARACTER_RADIUS) {~0D~0A~09@1this.env = env;~0D~0A~09@1this.agent = agent;~0D~0A~09@1this.weapon = new Pistol(this);~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1base.update(timeStep);~0D~0A~0D~0A~09@1// Clamp character to boundaries.~0D~0A~09@1if (this.pos.x < this.radius) {~0D~0A~09@2this.pos.x = this.radius;~0D~0A~09@1} else if (this.pos.x > X_RES - this.radius) {~0D~0A~09@2this.pos.x = X_RES - this.radius;~0D~0A~09@1}~0D~0A~09@1if (this.pos.y < this.radius) {~0D~0A~09@2this.pos.y = this.radius;~0D~0A~09@1} else if (this.pos.y > Y_RES - this.radius) {~0D~0A~09@2this.pos.y = Y_RES - this.radius;~0D~0A~09@1}~0D~0A~0D~0A~09@1if (this.weapon != null) {~0D~0A~09@2this.weapon.update(timeStep);~0D~0A~09@1}~0D~0A~0D~0A~09@1this.agent.control(this);~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1color = this.agent.isPlayerControlled() ? Color.black() : Color.red();~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, color.r, color.g, color.b~0D~0A~09@2);~0D~0A~0D~0A~09@1if (this.weapon != null) {~0D~0A~09@2this.weapon.draw();~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Causes the character to throw its weapon if it has one.~0D~0A~09function throwWeapon() {~0D~0A~09@1// Throw weapon.~0D~0A~09@1if (this.weapon != null) {~0D~0A~09@2weaponPos = this.pos.plus(this.heading.times(THROWN_WEAPON_SPAWN_DISTANCE));~0D~0A~09@2weaponVel = this.heading.times(THROWN_WEAPON_INITIAL_SPEED);~0D~0A~09@2thrownWeapon = new ThrownWeapon(this.weapon, weaponPos, weaponVel);~0D~0A~09@2this.weapon = null;~0D~0A~09@2this.env.thrownWeapons.add(thrownWeapon);~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Causes the character to drop its weapon if it has one.~0D~0A~09function dropWeapon() {~0D~0A~09@1if (this.weapon != null) {~0D~0A~09@2direction = Util.randomUnitVector();~0D~0A~09@2weaponPos = this.pos.plus(direction.times(DROPPED_WEAPON_SPAWN_DISTANCE));~0D~0A~09@2weaponVel = direction.times(DROPPED_WEAPON_INITIAL_SPEED);~0D~0A~09@2droppedWeapon = new DroppedWeapon(this.weapon, weaponPos, weaponVel);~0D~0A~09@2this.weapon = null;~0D~0A~09@2this.env.droppedWeapons.add(droppedWeapon);~0D~0A~09@1}~0D~0A~09}~0D~0A}~0D~0A%&Jbsource/Color.cry~0A// Represents an RGBA color.~0D~0Aclass Color {~0D~0A~09field r; // red~0D~0A~09field g; // green~0D~0A~09field b; // blue~0D~0A~09field a; // alpha~0D~0A~0D~0A~09constructor(r, g, b, a = 255) {~0D~0A~09@1this.r = r;~0D~0A~09@1this.g = g;~0D~0A~09@1this.b = b;~0D~0A~09@1this.a = a;~0D~0A~09}~0D~0A~0D~0A~09static function black(a = 255) { return new Color(0, 0, 0, a); }~0D~0A~09static function gray(a = 255) { return new Color(128, 128, 128, a); }~0D~0A~09static function silver(a = 255) { return new Color(192, 192, 192, a); }~0D~0A~09static function white(a = 255) { return new Color(255, 255, 255, a); }~0D~0A~09static function red(a = 255) { return new Color(255, 0, 0, a); }~0D~0A}~0D~0A%&Jcsource/Drawing.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0A// Helper class for slightly more advanced/flexible image drawing.~0D~0Aclass Drawing {~0D~0A~09field x = 0;~0D~0A~09field y = 0;~0D~0A~09field hAlign = 0.0;~0D~0A~09field vAlign = 0.0;~0D~0A~09field bgColor = null;~0D~0A~09field image = null;~0D~0A~0D~0A~09function setPos(x, y) {~0D~0A~09@1this.x = x;~0D~0A~09@1this.y = y;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function alignLeft() {~0D~0A~09@1this.hAlign = 0.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignCenter() {~0D~0A~09@1this.hAlign = 0.5;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignRight() {~0D~0A~09@1this.hAlign = 1.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function alignTop() {~0D~0A~09@1this.vAlign = 0.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignMiddle() {~0D~0A~09@1this.vAlign = 0.5;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignBottom() {~0D~0A~09@1this.vAlign = 1.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function setBgColor(color) {~0D~0A~09@1this.bgColor = color;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function setImage(image) {~0D~0A~09@1this.image = image;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1left = this.x - Math.floor(this.image.width * this.hAlign);~0D~0A~09@1top = this.y - Math.floor(this.image.height * this.vAlign);~0D~0A~09@1if (this.bgColor != null) {~0D~0A~09@2Graphics2D.Draw.rectangle~0D~0A~09@3( left~0D~0A~09@3, top~0D~0A~09@3, this.image.width~0D~0A~09@3, this.image.height~0D~0A~09@3, this.bgColor.r, this.bgColor.g, this.bgColor.b, this.bgColor.a~0D~0A~09@3);~0D~0A~09@1}~0D~0A~09@1if (this.image != null) {~0D~0A~09@2this.image.draw(left, top);~0D~0A~09@1}~0D~0A~09}~0D~0A}~0D~0A%&Jdsource/DroppedWeapon.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst DROPPED_WEAPON_INITIAL_SPEED = 10.0;~0D~0Aconst DROPPED_WEAPON_DECELERATION = 1.0;~0D~0Aconst DROPPED_WEAPON_RADIUS = 10.0;~0D~0Aconst DROPPED_WEAPON_SPAWN_DISTANCE = CHARACTER_RADIUS + DROPPED_WEAPON_RADIUS;~0D~0A~0D~0A// A dropped weapon, which a character can pick up.~0D~0Aclass DroppedWeapon : Body {~0D~0A~09field weapon;~0D~0A~0D~0A~09constructor(weapon, pos, vel) : base(pos, vel, DROPPED_WEAPON_RADIUS) {~0D~0A~09@1this.weapon = weapon;~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1base.update(timeStep);~0D~0A~0D~0A~09@1deceleration = DROPPED_WEAPON_DECELERATION * timeStep;~0D~0A~09@1if (this.vel.lengthSquared() > deceleration ** 2.0) {~0D~0A~09@2this.vel = this.vel.minus(this.vel.normalized().times(deceleration));~0D~0A~09@1} else {~0D~0A~09@2this.vel = Vec2.zero();~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1color = Color.black();~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, color.r, color.g, color.b~0D~0A~09@2);~0D~0A~09}~0D~0A}~0D~0A%&Jesource/Environment.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst MIN_TIME_STEP = 0.05;~0D~0Aconst MAX_TIME_STEP = 1.0;~0D~0Aconst MOVEMENT_TIME_STEP_PER_FRAME = 0.05;~0D~0Aconst MAX_BULLET_TIME_STEP = 1.0;~0D~0Aconst BULLET_TIME_STEP_DECAY = 0.1;~0D~0A~0D~0A// Represents a set of objects in a common environment.~0D~0Aclass Environment {~0D~0A~09field characters = [];~0D~0A~09field bullets = [];~0D~0A~09field droppedWeapons = [];~0D~0A~09field thrownWeapons = [];~0D~0A~09field timeStep = MIN_TIME_STEP;~0D~0A~09field movementTimeStep = 0.0;~0D~0A~09field bulletTimeStep = 0.0;~0D~0A~09field totalTime = 0.0;~0D~0A~0D~0A~09constructor() {}~0D~0A~0D~0A~09// Updates all the objects in this environment.~0D~0A~09function update() {~0D~0A~09@1// Update characters.~0D~0A~09@1for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@2this.characters[i].update(this.timeStep);~0D~0A~09@1}~0D~0A~0D~0A~09@1// Update bullets.~0D~0A~09@1for (i = 0; i < this.bullets.length; ++i) {~0D~0A~09@2this.bullets[i].update(this.timeStep);~0D~0A~0D~0A~09@2// Remove out-of-bounds bullets.~0D~0A~09@2if (this.outOfBounds(this.bullets[i])) {~0D~0A~09@3this.bullets.remove(i);~0D~0A~09@3--i;~0D~0A~09@2} else {~0D~0A~09@3// Bullet-character collisions.~0D~0A~09@3for (j = 0; j < this.characters.length; ++j) {~0D~0A~09@4if (this.bullets[i].collidesWith(this.characters[j], this.timeStep)) {~0D~0A~09@5// Destroy the bullet.~0D~0A~09@5this.bullets.remove(i);~0D~0A~09@5--i;~0D~0A~09@5// Hurt the character.~0D~0A~09@5--this.characters[j].health;~0D~0A~09@5if (this.characters[j].health <= 0) {~0D~0A~09@6this.characters.remove(j);~0D~0A~09@5}~0D~0A~09@5break;~0D~0A~09@4}~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1}~0D~0A~0D~0A~09@1// Update thrown weapons.~0D~0A~09@1for (i = 0; i < this.thrownWeapons.length; ++i) {~0D~0A~09@2this.thrownWeapons[i].update(this.timeStep);~0D~0A~09@2// Destroy thrown weapons after they ~0Yland~0Y.~0D~0A~09@2if (this.thrownWeapons[i].vel.isZero()) {~0D~0A~09@3this.thrownWeapons.remove(i);~0D~0A~09@3--i;~0D~0A~09@3continue;~0D~0A~09@2}~0D~0A~09@2// Thrown-weapon-character collisions.~0D~0A~09@2for (j = 0; j < this.characters.length; ++j) {~0D~0A~09@3if (this.thrownWeapons[i].collidesWith(this.characters[j], this.timeStep)) {~0D~0A~09@4// Destroy the thrown weapon.~0D~0A~09@4this.thrownWeapons.remove(i);~0D~0A~09@4--i;~0D~0A~09@4// Cause the character to drop its weapon.~0D~0A~09@4this.characters[j].dropWeapon();~0D~0A~09@4break;~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1}~0D~0A~0D~0A~09@1// Update dropped weapons.~0D~0A~09@1for (i = 0; i < this.droppedWeapons.length; ++i) {~0D~0A~09@2this.droppedWeapons[i].update(this.timeStep);~0D~0A~09@2// Dropped-weapon-character collisions.~0D~0A~09@2for (j = 0; j < this.characters.length; ++j) {~0D~0A~09@3if (this.droppedWeapons[i].collidesWith(this.characters[j], this.timeStep) && this.characters[j].weapon == null) {~0D~0A~09@4// Transfer weapon.~0D~0A~09@4this.characters[j].weapon = this.droppedWeapons[i].weapon;~0D~0A~09@4this.characters[j].weapon.bearer = this.characters[j];~0D~0A~09@4this.characters[j].weapon.activeCooldown = 0.0;~0D~0A~09@4this.droppedWeapons.remove(i);~0D~0A~09@4--i;~0D~0A~09@4break;~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1}~0D~0A~0D~0A~09@1// Speed up time the longer a player has been moving.~0D~0A~09@1playerAlive = false;~0D~0A~09@1playerAcceleratedTime = false;~0D~0A~09@1for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@2if (this.characters[i].agent.isPlayerControlled()) {~0D~0A~09@3playerAlive = true;~0D~0A~09@3if (!this.characters[i].vel.isZero()) {~0D~0A~09@4playerAcceleratedTime = true;~0D~0A~09@4this.movementTimeStep += MOVEMENT_TIME_STEP_PER_FRAME;~0D~0A~09@4break;~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09@1if (!playerAlive) {~0D~0A~09@2// If there are no characters, keep time step at max.~0D~0A~09@2this.movementTimeStep = MAX_TIME_STEP;~0D~0A~09@1} else if (!playerAcceleratedTime) {~0D~0A~09@2// If a player is present but did not accelerate time, immediately revert time step due to movement to zero.~0D~0A~09@2this.movementTimeStep = 0.0;~0D~0A~09@1}~0D~0A~09@1// Reduce bullet time step.~0D~0A~09@1this.bulletTimeStep = Math.max(0.0, this.bulletTimeStep - BULLET_TIME_STEP_DECAY);~0D~0A~09@1// Current time step is the sum of the minimum time step, movement time step, and bullet time step, up to the max.~0D~0A~09@1this.timeStep = Math.min(MIN_TIME_STEP + this.movementTimeStep + this.bulletTimeStep, MAX_TIME_STEP);~0D~0A~09@1// Add current time step to the total time.~0D~0A~09@1this.totalTime += Math.min(this.timeStep, MAX_TIME_STEP);~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1Graphics2D.Draw.fill(255, 255, 255);~0D~0A~0D~0A~09@1// Update dropped weapons.~0D~0A~09@1for (i = 0; i < this.droppedWeapons.length; ++i) {~0D~0A~09@2this.droppedWeapons[i].draw();~0D~0A~09@1}~0D~0A~0D~0A~09@1// Update thrown weapons.~0D~0A~09@1for (i = 0; i < this.thrownWeapons.length; ++i) {~0D~0A~09@2this.thrownWeapons[i].draw();~0D~0A~09@1}~0D~0A~0D~0A~09@1// Draw bullets.~0D~0A~09@1for (i = 0; i < this.bullets.length; ++i) {~0D~0A~09@2this.bullets[i].draw();~0D~0A~09@1}~0D~0A~0D~0A~09@1// Draw characters.~0D~0A~09@1for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@2this.characters[i].draw();~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Whether the given body is out of the environment bounds.~0D~0A~09function outOfBounds(body) {~0D~0A~09@1return body.pos.x < -2.0 * body.radius~0D~0A~09@2|| body.pos.x > X_RES + 2.0 * body.radius~0D~0A~09@2|| body.pos.y < -2.0 * body.radius~0D~0A~09@2|| body.pos.y > Y_RES + 2.0 * body.radius;~0D~0A~09}~0D~0A~0D~0A~09// Shoots a bullet from ~0Yfrom~0Y to ~0Yto~0Y.~0D~0A~09function shoot(from, to) {~0D~0A~09@1bulletPos = from.clone();~0D~0A~09@1bulletVel = to.minus(from).normalize().times(BULLET_SPEED);~0D~0A~09@1this.bullets.add(new Bullet(bulletPos, bulletVel));~0D~0A~09}~0D~0A}~0D~0A%&Jfsource/Font.cry~0Aimport Graphics2DText;~0D~0A~0D~0A// Shared font resources.~0D~0Aclass Font {~0D~0A~09static field title = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 0, 0).setSize(48);~0D~0A~09static field white = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 255, 255).setSize(16);~0D~0A~09static field black = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 0, 0).setSize(16);~0D~0A~09static field red = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 0, 0).setSize(16);~0D~0A~09static field lime = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 255, 0).setSize(16);~0D~0A~09static field yellow = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 255, 0).setSize(16);~0D~0A~09static field green = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 128, 0).setSize(16);~0D~0A}~0D~0A%&Jg[Graphics2DText]~0A%&Jh[Graphics2DText:enums.cry]~0A/*~0A @3On some level, some sort of font resource needs to be cached.~0A @3What is defined as a font resource varies from platform to platform~0A@1 @3For Python, it~0ds the font face, size, style~0A@1 @3For Java, it~0ds just the font~0A@1 @3For JavaScript, there~0ds nothing. You pass the font name as a string to the draw context for each use~0A @3- although, for JS, the process for checking if a font is a little weird.~0A@1 @3For OpenGL a collection of texture atlases are created.~0A @3- first each character is rendered at size 36 in individual images~0A @3- these characters are stored in a several layer cache~0A @3- each time a character is used it~0ds moved to the top cache~0A @3- every minute or so each cache layer is demoted~0A @3- every once in a while a series of textures are created~0A @3- if there are less than 200 characters rendered by the font, no cache churning occurs~0A @3- each cache/texture system is keyed off font face, size, and style~0A @3- coloring is handled by the fragment shader~0A @3- note that rendering rapidly changing characters (of something like chinese) at size 72 could kill performance, but that~0ds an edge case~0A@1*/~0Anamespace Graphics2DText {~0A@1 @3enum FontSourceType {~0A @7DEFAULT = 0,~0A @7RESOURCE = 1,~0A @7FILE = 2,~0A @7SYSTEM = 3,~0A @3}~0A@1 @3enum FontClass {~0A @7SERIF = 1,~0A @7SANS_SERIF = 2,~0A @7MONOSPACE = 3,~0A @3}~0A@1 @3enum FontStyle {~0A @7NORMAL = 0,~0A @7BOLD = 1,~0A @7ITALIC = 2,~0A @7BOLD_ITALIC = 3, // bit mask of BOLD | ITALIC~0A @3}~0A}~0A%&Ji[Graphics2DText:FontNotFoundException.cry]~0Anamespace Graphics2DText {~0A@1 @3class FontNotFoundException : Core.Exception {~0A @7constructor(m) : base (m, null) { }~0A @3}~0A}~0A%&Jj[Graphics2DText:FontRenderer.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7Renders a specific font face, style, size, and color.~0A @3*/~0A @3class FontRenderer {~0A@1 @7field font; // a FontResource instance~0A@1 @7field size = 12;~0A @7field style = FontStyle.NORMAL;~0A @7field red = 255;~0A @7field green = 255;~0A @7field blue = 255;~0A@1 @7// These are cleared every time an attribute is updated.~0A @7// These are repopulated when you call render(text).~0A @7field _native = null; // NativeFont~0A @7field _settingsKey = null; // A string key that uniquely identifies text appearance encompasing all attributes. Used as part of the texture cache~0A @7field _glRenderer = null;~0A@1 @7static field _textureCache = {}; // A cache of previously rendered images so that drawing the same text in multiple frames is done quickly~0A@1 @7// TODO: make the texture cache a layered dictionary where the first key is the the settings key and the secondary key is the text itself~0A @7// That will reduce memory churn of concatenating these two strings every time it~0ds rendered.~0A@1 @7constructor(font) {~0A @Bif (!(font is Graphics2DText.FontResource)) throw new InvalidArgumentException(~0YExpected a FontResource instance~0Y);~0A @Bthis.font = font;~0A @7}~0A@1 @7function setColor(red, green, blue) {~0A @B// TODO: verify args~0A @Bthis.red = red;~0A @Bthis.green = green;~0A @Bthis.blue = blue;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function setSize(size) {~0A @B// TODO: verify args~0A @Bthis.size = size;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function setStyle(style) {~0A @B// TODO: verify args~0A @Bthis.style = style;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function render(text) {~0A @Bif (this._native == null) {~0A @Fthis._native = NativeFont.get(~0A @Jthis.font._sourceType, this.font._source,~0A @Jthis.size, this.style, this.red, this.green, this.blue);~0A@1 @F// don~0dt recycle the native font key for this since the native key will~0A @F// drop attributes that aren~0dt part of an allocated font face instance.~0A @F// We need all attributes in this key.~0A @Fthis._settingsKey =~0A @J[~0A @Nthis.font._sourceType, this.font._source,~0A @Nthis.size,~0A @Nthis.style,~0A @Nthis.red, this.green, this.blue~0A @J].join(~0d:~0d);~0A@1 @Fif ($$lib_graphics2dtext_isGlRenderer()) {~0A @Jthis._glRenderer = GLRenderer.get(this.font._sourceType, this.font._source, this.size, this.style, this._native);~0A @F}~0A @B}~0A@1 @BtextureKey = this._settingsKey + ~0d~1Un~0d + text;~0A @Btexture = FontRenderer._textureCache.get(textureKey);~0A @Bif (texture == null) {~0A @Ftexture = new TextSurface(this, text + ~0d@1);~0A @FFontRenderer._textureCache[textureKey] = texture;~0A @B}~0A@1 @Breturn texture;~0A @7}~0A @3}~0A}~0A%&Jk[Graphics2DText:FontResource.cry]~0Anamespace Graphics2DText {~0A@1 @3class FontResource {~0A @7field _sourceType;~0A @7field _source;~0A@1 @7~12private~0A @7constructor(sourceType, source) {~0A @Bthis._sourceType = sourceType;~0A @Bthis._source = source;~0A @7}~0A@1 @7function getRenderer() {~0A @Breturn new FontRenderer(this);~0A @7}~0A@1 @7static field _cache = {};~0A@1 @7static function _getKey(sourceType, source) {~0A @Breturn sourceType + source;~0A @7}~0A@1 @7static function _get(sourceType, source) {~0A @Bkey = sourceType + source;~0A @Bfont = FontResource._cache.get(key);~0A @Bif (font == null) {~0A @Ffont = new FontResource(sourceType, source);~0A @FFontResource._cache[key] = font;~0A @B}~0A @Breturn font;~0A @7}~0A@1 @7static function fromResource(path) {~0A @Bif (!$$lib_graphics2dtext_isResourceAvailable(path)) {~0A @Fthrow new FontNotFoundException(~0YFont resource not found: ~0d~0Y + path + ~0Y~0d~0Y);~0A @B}~0A @Breturn FontResource._get(FontSourceType.RESOURCE, path);~0A @7}~0A@1 @7static function fromDisk(path) {~0A @Bthrow new NotImplementedException();~0A @7}~0A@1 @7static function fromSystem(name) {~0A @Bif (!FontResource.isSystemFontPresent(name)) {~0A @Fthrow new FontNotFoundException(~0YFont not installed: ~0d~0Y + name + ~0Y~0d~0Y);~0A @B}~0A @Breturn FontResource._get(FontSourceType.SYSTEM, name);~0A @7}~0A@1 @7static function isSystemFontPresent(name) {~0A @Breturn $$lib_graphics2dtext_isSystemFontPresent(name);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultSerifFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.SERIF);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultSansSerifFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.SANS_SERIF);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultMonospaceFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.MONOSPACE);~0A @7}~0A @3}~0A}~0A%&Jl[Graphics2DText:GLRenderer.cry]~0Aimport Math;~0A@1namespace Graphics2DText {~0A@1 @3/*~0A @7A GL renderer juggles around some textures~0A@1 @7A GL instance always stays alive.~0A @7They are only created on a unique (font, style, size) basis~0A @7They will unload their textures if unused and will essentially take up no space, so having a~0A @7lifetime tied to the life of the app is okay.~0A@1 @7nativeData[0] -> some native object that takes in a character code and generates a bitmap.~0A @3*/~0A @3class GLRenderer {~0A @7/*~0A @BnativeData[0] -> some sort of native font resource the system can use to generate~0A @Fbitmaps that can be loaded as textures.~0A @FIf the nativeRenderer happens to only include face, style, and size, then this may possibly be the same instance.~0A @BnativeData[1] -> a nullable int-to-int dictionary that maps char code ID~0ds to texture ID~0ds~0A @Fset to null to invalidate and reconstruct~0A @7*/~0A@1 @7field sheets = [];~0A @7field sheetByCharId = {};~0A @7field tileByCharId = {};~0A @7field spaceWidth = null;~0A @7field nativeFont = null;~0A@1 @7static field glRenderers = {};~0A @7static field unknownChars = [];~0A@1 @7static function get(sourceType, sourceId, size, style, nativeFont) {~0A @Bkey = [sourceType, sourceId, size, style].join(~0d:~0d);~0A @Brenderer = GLRenderer.glRenderers.get(key);~0A @Bif (renderer == null) {~0A @Frenderer = new GLRenderer(nativeFont, size);~0A @FGLRenderer.glRenderers[key] = renderer;~0A @B}~0A @Breturn renderer;~0A @7}~0A@1 @7~12private~0A @7constructor(nativeFont, size) {~0A @Bthis.nativeFont = nativeFont;~0A @Bthis.spaceWidth = size * 3 / 10;~0A @B$@2(~0dallocNativeData~0d, this, 1);~0A @B$@2(~0dsetNativeData~0d, this, 0, null);~0A @7}~0A@1 @7function renderText(text, sizeOut, textSurfaceWithNativeData, tileList) {~0A @Bwidth = 0;~0A @Bheight = 0;~0A @BnewTiles = null;~0A @BcharIds = [];~0A @Bxs = [];~0A @Bys = [];~0A @BlastTile = null;~0A @Bfor (c : text) {~0A @FcharId = Core.ord(c);~0A @Fif (c == ~0d ~0d) {~0A @Jwidth += this.spaceWidth;~0A @F} else if (c == ~0d~1Ur~0d || c == ~0d~1Un~0d) {~0A @Jthrow new Core.NotImplementedException();~0A @F} else {~0A @JcharIds.add(charId);~0A @Jtile = this.tileByCharId.get(charId);~0A @Jif (tile == null) {~0A @Nretry = true;~0A @Ntile = new GLTile(this, charId);~0A @Nif (newTiles == null) newTiles = [];~0A @NnewTiles.add(tile);~0A @J}~0A @JlastTile = tile;~0A @Jxs.add(width - tile.leftMargin);~0A @Jys.add(0);~0A @JtileList.add(tile);~0A @Jheight = Math.max(height, tile.height);~0A @Jwidth += tile.effectiveWidth;~0A @F}~0A @B}~0A @Bwidth += (lastTile.width - lastTile.effectiveWidth - tile.leftMargin) * 6 / 10;~0A@1 @Bif (newTiles != null) {~0A @F// Just dump all of them into new sheets.~0A @F// The consolidator will get triggered at the end of the frame and make the packing better.~0A @Fsheets = GLTextureSheet.makeSheets(newTiles);~0A @Ffor (sheet : sheets) {~0A @Jthis.sheets.add(sheet);~0A @Jfor (tile : sheet.tiles) {~0A @Nthis.sheetByCharId[tile.charId] = sheet;~0A @Nthis.tileByCharId[tile.charId] = tile;~0A @J}~0A @F}~0A @B}~0A@1 @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 1, xs);~0A @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 2, ys);~0A @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 3, charIds);~0A @B$@2(~0dsetNativeData~0d, textSurfaceWithNativeData, 4, charIds.length);~0A@1 @BsizeOut[0] = width;~0A @BsizeOut[1] = height;~0A @7}~0A@1 @7/*~0A @BIf there are two or more textures that are less than or equal to 512 x 512, then trigger a reconsolidation~0A @BThis is called once per frame.~0A@1 @BTODO: add this to a Game frame end callback~0A @7*/~0A @7function consolidate() {~0A @Bthrow new NotImplementedException();~0A @7}~0A @3}~0A}~0A%&Jm[Graphics2DText:GLTextureSheet.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7nativeData[0] -> bitmap instance (lifetime is very short, discarded once loaded)~0A @3*/~0A @3class GLTextureSheet {~0A @7field tiles = [];~0A @7field tilesByCharId = {};~0A@1 @7constructor(rows) {~0A @By = 0;~0A @Bheight = rows[0][0].height;~0A @Bxs = [];~0A @Bys = [];~0A @Btiles = [];~0A @Bfor (row : rows) {~0A @Fthis.tiles.concat(row);~0A @Fx = 0;~0A @Ffor (tile : row) {~0A @Jthis.tilesByCharId[tile.charId] = tile;~0A @Jtile.sheetX = x;~0A @Jtile.sheetY = y;~0A @Jtile.sheet = this;~0A @Jtile.currentTextureId = null;~0A @Jxs.add(x);~0A @Jys.add(y);~0A @Jtiles.add(tile);~0A @Jx += tile.width;~0A @F}~0A @Fy += height;~0A @B}~0A @B// This will apply the properties to the individual tile~0ds metadata~0A @B// It will not load the texture yet.~0A @B// TODO: remove ~0YLoadTexture~0Y from the name.~0A @B$$lib_graphics2dtext_glGenerateAndLoadTexture(xs, ys, tiles, y);~0A @7}~0A@1 @7static function makeSheets(tiles) {~0A @B// A simple O(n) greedy packing algorithm~0A @B// Since sheets are on a per-size basis, all tiles will have the same height~0A @B// that makes things a little simpler.~0A@1 @Bsheets = [];~0A @BtilesLength = tiles.length;~0A @BtileIndex = 0;~0A @Bif (tiles.length > 0) {~0A @Fheight = tiles[0].height;~0A @FrowCount = 1024 / height;~0A @Ftiles.sort(GLTextureSheet.sortByWidthKeyFunction);~0A @Frows = [];~0A @Fwhile (rows.length < rowCount && tileIndex < tilesLength) {~0A @Jrow = [];~0A @Jrows.add(row);~0A @Jwidth = 0;~0A @J// Fill the front of the row with as many large tiles as possible~0A @Jwhile (tileIndex < tilesLength && width + tiles[tileIndex].width < 1024) {~0A @Ntile = tiles[tileIndex++];~0A @Nrow.add(tile);~0A @Nwidth += tile.width;~0A @J}~0A @J// once you run out of space, fill the row with as many small tiles as possible~0A @Jwhile (tileIndex < tilesLength && width + tiles[tilesLength - 1].width < 1024) {~0A @Ntile = tiles[--tilesLength];~0A @Nrow.add(tile);~0A @Nwidth += tile.width;~0A @J}~0A @F}~0A @Fsheets.add(new GLTextureSheet(rows));~0A @B}~0A @Breturn sheets;~0A @7}~0A@1 @7static function sortByWidthKeyFunction(tile) {~0A @Breturn tile.width;~0A @7}~0A @3}~0A}~0A%&Jn[Graphics2DText:GLTile.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7The following are attributes of the image and never change once allocated:~0A @7nativeData[0] -> A bitmap instance of the tile~0A @7nativeData[1] -> pixel width (int)~0A @7nativeData[2] -> pixel height (int)~0A @7nativeData[3] -> left margin (int)~0A @7nativeData[4] -> effective width (int) (distance to right margin from left margin)~0A@1 @7The following are values added each time this is allocated to a texture~0A @7nativeData[5] -> GL texture ID# or -1 if not initialized~0A @7nativeData[6] -> bitmap instance that needs to be loaded into the [5] GL Texture ID, or null if already loaded.~0A @7nativeData[7] -> texture region left~0A @7nativeData[8] -> texture region top~0A @7nativeData[9] -> texture region right~0A @7nativeData[10] -> texture region bottom~0A @7.@2~0A @7nativeData[11] -> full texture width (always 1024)~0A @7nativeData[12] -> full texture height~0A @3*/~0A @3class GLTile {~0A @7field charId;~0A @7field width;~0A @7field height;~0A @7field currentTextureId;~0A @7field sheet;~0A @7field sheetX;~0A @7field sheetY;~0A @7field lastUsed;~0A @7field renderer;~0A @7field leftMargin;~0A @7field effectiveWidth;~0A@1 @7constructor(renderer, charId) {~0A @Bthis.charId = charId;~0A @Bthis.renderer = renderer;~0A @B$@2(~0dallocNativeData~0d, this, 13);~0A @Bsize = [0, 0, 0, 0];~0A @Bif (!$$lib_graphics2dtext_glRenderCharTile(renderer.nativeFont, this, charId, size)) {~0A @Fthrow new InvalidArgumentException(~0YCould not render character (~0Y + charId + ~0Y)~0Y);~0A @B}~0A @Bthis.width = size[0];~0A @Bthis.height = size[1];~0A @Bthis.leftMargin = size[2];~0A @Bthis.effectiveWidth = size[3];~0A @7}~0A @3}~0A}~0A%&Jo[Graphics2DText:NativeFont.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7This class is not exposed to the user.~0A@1 @7Wraps a native font font instance.~0A @7Almost all platforms have some sort of notion of a font object.~0A @7What properties of a font constitutes a unique font object varies, though.~0A @7This class encompasses whatever that notion is.~0A@1 @7nativeData[0] -> native font instance. This will be:~0A @B- JS -> a simple struct with the attributes in it~0A @B- PyGame -> a pygame.font.Font instance~0A @B- Java -> a java.awt.Font instance~0A @B- C# -> a font object~0A@1 @3*/~0A @3class NativeFont {~0A@1 @7field key;~0A@1 @7static field _nativeFontInstances = {};~0A@1 @7~12private~0A @7constructor(type, id, size, style, r, g, b) {~0A @B// Native code must generate the key because some of these attributes will be dropped.~0A @B// For example, PyGame has a single font instance no matter what color, but a font instance changes~0A @B// depending on the size and style. Therefore r/g/b will be dropped, but the others must be part of~0A @B// the unique key.~0A @Bthis.key = NativeFont.getUniqueKey(type, id, size, r, g, b, style);~0A@1 @B$@2(~0dallocNativeData~0d, this, 1);~0A @Boutput = [null];~0A @B// assigns native font instance to native data~0A @Bstatus = $$lib_graphics2dtext_createNativeFont(this, type, id, size, r, g, b, style);~0A @Bif ($@2(~0disJavaScript~0d) && type == 1) {~0A @Fi = 0;~0A @Fwhile (!$$lib_graphics2dtext_isDynamicFontLoaded()) {~0A @Jif (++i > 10@3) throw new FontNotFoundException(~0YError loading font resource.~0Y);~0A @JCore.sleep(.001);~0A @F}~0A @B}~0A @Bswitch (status) {~0A @Fcase 0: break; // all is fine~0A @Fcase 1: throw new FontNotFoundException(~0YFont not installed: ~0d~0Y + id + ~0Y~0d~0Y);~0A @Fcase 2: throw new FontNotFoundException(~0YFont resource not found: ~0d~0Y + id + ~0Y~0d~0Y);~0A @Fdefault: throw new Exception(); // this won~0dt happen~0A @B}~0A @7}~0A@1 @7static function get(type, id, size, style, r, g, b) {~0A @Bkey = NativeFont.getUniqueKey(type, id, size, r, g, b, style);~0A @BnativeFont = NativeFont._nativeFontInstances.get(key);~0A @Bif (nativeFont == null) {~0A @FnativeFont = new NativeFont(type, id, size, style, r, g, b);~0A @FNativeFont._nativeFontInstances[key] = nativeFont;~0A @B}~0A @Breturn nativeFont;~0A @7}~0A@1 @7static function getUniqueKey(type, id, size, r, g, b, style) {~0A @Boutput = [];~0A @B$$lib_graphics2dtext_getNativeFontUniqueKey(~0A @F// convert everything to strings~0A @Ftype + ~0d@1, id + ~0d@1, size + ~0d@1, r + ~0d@1, g + ~0d@1, b + ~0d@1, style + ~0d@1,~0A @Foutput);~0A @Breturn output.join(~0d|~0d);~0A @7}~0A @3}~0A}~0A%&Jp[Graphics2DText:TextSurface.cry]~0Aimport Graphics2D;~0A@1namespace Graphics2DText {~0A@1 @3/*~0A @7Presents itself as something similar to a GraphicsTexture that can be drawn to the screen.~0A @7The actual implementation may vary depending on the platform.~0A @7It may either be a cached image or a set of drawing instructions.~0A @3*/~0A @3class TextSurface {~0A @7field _glRenderer = null;~0A @7field _isGl = false;~0A @7field width;~0A @7field height;~0A @7field text;~0A @7field tiles = null;~0A@1 @7constructor(fontRenderer, text) {~0A @Bthis.text = text;~0A@1 @B/*~0A @Ffor bitmap based platforms:~0A @FnativeData[0] -> a native image object such as a pygame.Surface or JS canvas~0A@1 @Ffor GL based platforms:~0A @FnativeData[0] -> unused~0A @FnativeData[1] -> an int[] of x coordinates~0A @FnativeData[2] -> an int[] of y coordinates~0A @FnativeData[3] -> an int[] of character codes~0A @FnativeData[4] -> number of characters to render (array.length of the above 3 arrays)~0A @FnativeData[5] -> red~0A @FnativeData[6] -> green~0A @FnativeData[7] -> blue~0A @B*/~0A@1 @BsizeOut = [0, 0];~0A @Bif ($$lib_graphics2dtext_isGlRenderer()) {~0A @Fthis.tiles = [];~0A @F$@2(~0dallocNativeData~0d, this, 8);~0A @Fthis._glRenderer = fontRenderer._glRenderer;~0A @Fthis._glRenderer.renderText(text, sizeOut, this, this.tiles);~0A @F$@2(~0dsetNativeData~0d, this, 5, fontRenderer.red);~0A @F$@2(~0dsetNativeData~0d, this, 6, fontRenderer.green);~0A @F$@2(~0dsetNativeData~0d, this, 7, fontRenderer.blue);~0A @Fthis._isGl = true;~0A @B} else {~0A @F$@2(~0dallocNativeData~0d, this, 1);~0A @F$$lib_graphics2dtext_renderText(~0A @JsizeOut,~0A @Jthis,~0A @JfontRenderer._native,~0A @JfontRenderer.font._sourceType,~0A @JfontRenderer.font._source,~0A @JfontRenderer.size,~0A @JfontRenderer.style,~0A @JfontRenderer.red,~0A @JfontRenderer.green,~0A @JfontRenderer.blue,~0A @Jtext);~0A @B}~0A @Bthis.width = sizeOut[0];~0A @Bthis.height = sizeOut[1];~0A @7}~0A@1 @7function _refreshGlRenderer() {~0A @Bthrow new Core.NotImplementedException();~0A @7}~0A@1 @7function draw(x, y) {~0A @Breturn this.drawWithAlpha(x, y, 255);~0A @7}~0A@1 @7function drawWithAlpha(x, y, alpha) {~0A @Bif (this._isGl){~0A @Freturn $$lib_graphics2dtext_glRenderTextSurface(this, this.tiles, Graphics2D.Draw._queue, x, y, alpha);~0A @B} else {~0A @FGraphics2D.Draw.rectangle(0, 0, 10, 10, 255, 0, 0); // ensure the Draw._queue has capacity~0A @Freturn $$lib_graphics2dtext_simpleBlit(this, Graphics2D.Draw._queue, x, y, alpha);~0A @B}~0A @7}~0A @3}~0A}~0A%&Jqsource/Input.cry~0Aimport Game;~0D~0A~0D~0A// Represents input events since the last call to window.pumpEvents().~0D~0Aclass Input {~0D~0A~09static field keysDown = new Set();~0D~0A~09static field keysPressed = new Set();~0D~0A~09static field keysReleased = new Set();~0D~0A~09static field leftClick = false;~0D~0A~09static field rightClick = false;~0D~0A~09static field mousePos = Vec2.zero();~0D~0A~0D~0A~09// Processes relevant input events and removes them from the event list.~0D~0A~09static function update(eventList) {~0D~0A~09@1Input.keysPressed = new Set();~0D~0A~09@1Input.keysReleased = new Set();~0D~0A~09@1Input.leftClick = false;~0D~0A~09@1Input.rightClick = false;~0D~0A~0D~0A~09@1for (i = 0; i < eventList.length;) {~0D~0A~09@2event = eventList[i];~0D~0A~09@2if (event.type == Game.EventType.KEY_DOWN) {~0D~0A~09@3Input.keysDown.add(event.key);~0D~0A~09@3Input.keysPressed.add(event.key);~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.KEY_UP) {~0D~0A~09@3Input.keysDown.remove(event.key);~0D~0A~09@3Input.keysReleased.add(event.key);~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_LEFT_DOWN) {~0D~0A~09@3Input.leftClick = true;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_RIGHT_DOWN) {~0D~0A~09@3Input.rightClick = true;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_MOVE) {~0D~0A~09@3Input.mousePos.x = event.x;~0D~0A~09@3Input.mousePos.y = event.y;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else {~0D~0A~09@3++i;~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09static function pressed(key) {~0D~0A~09@1return Input.keysPressed.contains(key);~0D~0A~09}~0D~0A~09static function released(key) {~0D~0A~09@1return Input.keysReleased.contains(key);~0D~0A~09}~0D~0A~09static function down(key) {~0D~0A~09@1return Input.keysDown.contains(key);~0D~0A~09}~0D~0A~09static function up(key) {~0D~0A~09@1return !Input.keysDown.contains(key);~0D~0A~09}~0D~0A}~0D~0A%&Jrsource/main.cry~0Aimport Game;~0Aimport Graphics2D;~0Aimport Math;~0Aimport Random;~0A@1const FPS = 60;~0Aconst X_RES = 800;~0Aconst Y_RES = 600;~0A@1const DANCE_DOG_CHARGES_PER_SHOT = 20;~0A@1enum GameState { MENU, CAMPAIGN, DANCE_DOG }~0A@1function main() {~0A~09window = new Game.GameWindow(~0YLUKEWARM~0Y, FPS, X_RES, Y_RES);~0A@1~09gameState = GameState.MENU;~0A~09titleImage = Font.title.render(~0YL U K E W A R M~0Y);~0A~09campaignImage = Font.black.render(~0YCampaign~0Y);~0A~09danceDogImage = Font.black.render(~0YDance, Dog~0Y);~0A~09instructionsImage = Font.black.render(~0YWASD to move, click to shoot, F2 to restart~0Y);~0A~09menuChoice = 0;~0A@1~09programRunning = true;~0A~09while (programRunning) {~0A~09@1eventList = window.pumpEvents();~0A~09@1Input.update(eventList);~0A~09@1for (i = 0; i < eventList.length; i++) {~0A~09@2event = eventList[i];~0A~09@2if (event.type == Game.EventType.QUIT) {~0A~09@3programRunning = false;~0A~09@2}~0A~09@1}~0A@1~09@1if (Input.pressed(Game.KeyboardKey.F2)) {~0A~09@2// Restart game.~0A~09@2gameState = GameState.MENU;~0A~09@1}~0A@1~09@1switch (gameState) {~0A~09@2case GameState.MENU:~0A~09@3if (Input.pressed(Game.KeyboardKey.UP) || Input.pressed(Game.KeyboardKey.W)) {~0A~09@4--menuChoice;~0A~09@3}~0A~09@3if (Input.pressed(Game.KeyboardKey.DOWN) || Input.pressed(Game.KeyboardKey.S)) {~0A~09@4++menuChoice;~0A~09@3}~0A~09@3menuChoice ~0b= 2;~0A@1~09@3if (Input.pressed(Game.KeyboardKey.ENTER) || Input.pressed(Game.KeyboardKey.SPACE)) {~0A~09@4switch (menuChoice) {~0A~09@5case 0:~0A~09@6// Campaign~0A~09@6gameState = GameState.CAMPAIGN;~0A~09@6env = new Environment();~0A~09@6env.characters =~0A~09@7[ new Character(env, new Player(), new Vec2(X_RES / 2, Y_RES / 2))~0A~09@7, new Character(env, new AI(), new Vec2(X_RES / 4, Y_RES / 4))~0A~09@7, new Character(env, new AI(), new Vec2(3 * X_RES / 4, Y_RES / 4))~0A~09@7, new Character(env, new AI(), new Vec2(3 * X_RES / 4, 3 * Y_RES / 4))~0A~09@7, new Character(env, new AI(), new Vec2(X_RES / 4, 3 * Y_RES / 4))~0A~09@7];~0A~09@6break;~0A~09@5case 1:~0A~09@6// Dance, Dog~0A~09@6gameState = GameState.DANCE_DOG;~0A~09@6env = new Environment();~0A~09@6env.characters = [new Character(env, new Player(), new Vec2(X_RES / 2, Y_RES / 2))];~0A~09@6charge = 0;~0A~09@6gameOver = false;~0A~09@6break;~0A~09@4}~0A~09@3}~0A@1~09@3Graphics2D.Draw.fill(255, 255, 255);~0A~09@3// Title~0A~09@3new Drawing()~0A~09@4.setImage(titleImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 4)~0A~09@4.alignCenter()~0A~09@4.alignMiddle()~0A~09@4.draw();~0A~09@3// Campaign~0A~09@3campaignDrawing = new Drawing()~0A~09@4.setImage(campaignImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 2)~0A~09@4.alignCenter()~0A~09@4.alignBottom();~0A~09@3// Dance, Dog~0A~09@3danceDogDrawing = new Drawing()~0A~09@4.setImage(danceDogImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 2)~0A~09@4.alignCenter()~0A~09@4.alignTop();~0A~09@3// Highlight current menu choice.~0A~09@3switch (menuChoice) {~0A~09@4case 0:~0A~09@5campaignDrawing.setBgColor(Color.red(128));~0A~09@5break;~0A~09@4case 1:~0A~09@5danceDogDrawing.setBgColor(Color.red(128));~0A~09@5break;~0A~09@3}~0A~09@3// Draw menu options.~0A~09@3campaignDrawing.draw();~0A~09@3danceDogDrawing.draw();~0A@1~09@3// Draw instructions.~0A~09@3new Drawing()~0A~09@4.setImage(instructionsImage)~0A~09@4.setPos(X_RES / 2, 3 * Y_RES / 4)~0A~09@4.alignCenter()~0A~09@4.alignMiddle()~0A~09@4.draw();~0A@1~09@3break;~0A~09@2case GameState.CAMPAIGN:~0A~09@3// Draw environment.~0A~09@3env.draw();~0A@1~09@3// Update environment.~0A~09@3env.update();~0A@1~09@3// Draw timer.~0A~09@3timeImage = Font.white.render(~0YTime: ~0Y + Math.floor(env.totalTime));~0A~09@3new Drawing()~0A~09@4.setImage(timeImage)~0A~09@4.setPos(0, 0)~0A~09@4.setBgColor(Color.black(128))~0A~09@4.draw();~0A@1~09@3// Draw health if the player is alive.~0A~09@3if (env.characters.length > 0) {~0A~09@4healthImage = Font.red.render(~0YHealth: ~0Y + env.characters[0].health);~0A~09@4new Drawing()~0A~09@5.setImage(healthImage)~0A~09@5.setPos(0, timeImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3}~0A~09@3break;~0A~09@2case GameState.DANCE_DOG:~0A~09@3++charge;~0A~09@3if (charge > 0) {~0A~09@4charge -= DANCE_DOG_CHARGES_PER_SHOT;~0A~09@4// Choose target: the player or a random point if the player is dead.~0A~09@4target = env.characters.length > 0~0A~09@5? env.characters[0].pos~0A~09@5: new Vec2(Random.randomInt(0, X_RES), Random.randomInt(0, Y_RES))~0A~09@5;~0A~09@4sources =~0A~09@5[ new Vec2(Random.randomInt(0, X_RES), 0)~0A~09@5, new Vec2(X_RES, Random.randomInt(0, Y_RES))~0A~09@5, new Vec2(Random.randomInt(0, X_RES), Y_RES)~0A~09@5, new Vec2(0, Random.randomInt(0, Y_RES))~0A~09@5];~0A~09@4env.shoot(sources[Random.randomInt(0, sources.length)], target);~0A~09@3}~0A@1~09@3// Update environment.~0A~09@3env.update();~0A@1~09@3// Check for game over.~0A~09@3if (!gameOver && env.characters.length == 0) {~0A~09@4scoreImage = Font.lime.render(~0YScore: ~0Y + Math.floor(env.totalTime));~0A~09@4gameOver = true;~0A~09@3}~0A@1~09@3// Draw environment.~0A~09@3env.draw();~0A@1~09@3// Draw timer.~0A~09@3timeImage = Font.white.render(~0YTime: ~0Y + Math.floor(env.totalTime));~0A~09@3new Drawing()~0A~09@4.setImage(timeImage)~0A~09@4.setPos(0, 0)~0A~09@4.setBgColor(Color.black(128))~0A~09@4.draw();~0A@1~09@3// Draw health if the player is alive.~0A~09@3if (gameOver) {~0A~09@4// Draw score.~0A~09@4new Drawing()~0A~09@5.setImage(scoreImage)~0A~09@5.setPos(0, timeImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3} else {~0A~09@4// Draw health.~0A~09@4healthImage = Font.red.render(~0YHealth: ~0Y + env.characters[0].health);~0A~09@4new Drawing()~0A~09@5.setImage(healthImage)~0A~09@5.setPos(0, timeImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3}~0A~09@3break;~0A~09@1}~0A@1~09@1window.clockTick();~0A~09}~0A}~0A%&Jssource/Pistol.cry~0Aimport Graphics2D;~0D~0A~0D~0Aconst PISTOL_WIDTH = 7;~0D~0A~0D~0A// A small gun with five rounds.~0D~0Aclass Pistol : Weapon {~0D~0A~09field ammo = 5;~0D~0A~0D~0A~09constructor(bearer) : base(bearer) {}~0D~0A~0D~0A~09function cooldown() { return 30.0; }~0D~0A~0D~0A~09function use(from, to, unlimitedAmmo = false) {~0D~0A~09@1if (this.activeCooldown <= 0.0 && this.ammo > 0) {~0D~0A~09@2this.bearer.env.shoot(from, to);~0D~0A~09@2if (!unlimitedAmmo) {~0D~0A~09@3--this.ammo;~0D~0A~09@2}~0D~0A~09@2this.activeCooldown = this.cooldown();~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1from = this.bearer.pos.plus(this.bearer.heading.times(CHARACTER_RADIUS * 0.75));~0D~0A~09@1to = this.bearer.pos.plus(this.bearer.heading.times(CHARACTER_RADIUS * 1.5));~0D~0A~09@1Graphics2D.Draw.line(from.x, from.y, to.x, to.y, PISTOL_WIDTH, 0, 0, 0);~0D~0A~09}~0D~0A}~0D~0A%&Jtsource/Player.cry~0Aimport Game;~0D~0A~0D~0A// Interface for an agent, which controls a character.~0D~0Aclass Player : Agent {~0D~0A~09constructor() : base() {}~0D~0A~0D~0A~09function control(character) {~0D~0A~09@1character.heading = Input.mousePos.minus(character.pos).normalize();~0D~0A~09@1if (Input.leftClick && !Input.mousePos.equals(character.pos)) {~0D~0A~09@2// Use weapon.~0D~0A~09@2if (character.weapon != null) {~0D~0A~09@3bulletPos = character.pos.plus(character.heading.times(BULLET_SPAWN_DISTANCE));~0D~0A~09@3character.weapon.use(bulletPos, Input.mousePos);~0D~0A~09@3character.env.bulletTimeStep = MAX_BULLET_TIME_STEP;~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09@1if (Input.rightClick && !Input.mousePos.equals(character.pos)) {~0D~0A~09@2character.throwWeapon();~0D~0A~09@2character.env.bulletTimeStep = MAX_BULLET_TIME_STEP;~0D~0A~09@1}~0D~0A~09@1character.vel = Vec2.zero();~0D~0A~09@1if (Input.down(Game.KeyboardKey.A)) {~0D~0A~09@2--character.vel.x;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.D)) {~0D~0A~09@2++character.vel.x;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.W)) {~0D~0A~09@2--character.vel.y;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.S)) {~0D~0A~09@2++character.vel.y;~0D~0A~09@1}~0D~0A~09@1character.vel.normalize();~0D~0A~09@1character.vel = character.vel.times(CHARACTER_SPEED);~0D~0A~09}~0D~0A~0D~0A~09function isPlayerControlled() { return true; }~0D~0A}~0D~0A%&Jusource/Set.cry~0A// Implementation of Set using a built-in dictionary.~0D~0Aclass Set {~0D~0A~09field keys = {};~0D~0A~0D~0A~09constructor(keys = {}) {~0D~0A~09@1this.keys = keys;~0D~0A~09}~0D~0A~0D~0A~09// Removes all elements from the set.~0D~0A~09function clear() {~0D~0A~09@1this.keys.clear();~0D~0A~09}~0D~0A~09// Returns a one-level-deep copy of the set.~0D~0A~09function clone() {~0D~0A~09@1return new Set(this.keys.clone());~0D~0A~09}~0D~0A~09// Returns whether this set contains the given key.~0D~0A~09function contains(key) {~0D~0A~09@1return this.keys.contains(key);~0D~0A~09}~0D~0A~09// Adds the given key to the set.~0D~0A~09function add(key) {~0D~0A~09@1this.keys[key] = null; // Value unused.~0D~0A~09}~0D~0A~09// Removes the given key from the set, if present.~0D~0A~09function remove(key) {~0D~0A~09@1this.keys.remove(key);~0D~0A~09}~0D~0A}~0D~0A%&Jvsource/ThrownWeapon.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst THROWN_WEAPON_INITIAL_SPEED = 40.0;~0D~0Aconst THROWN_WEAPON_DECELERATION = 3.0;~0D~0Aconst THROWN_WEAPON_RADIUS = 10.0;~0D~0Aconst THROWN_WEAPON_SPAWN_DISTANCE = CHARACTER_RADIUS + THROWN_WEAPON_RADIUS;~0D~0A~0D~0A// A thrown weapon, which can stun a character.~0D~0Aclass ThrownWeapon : Body {~0D~0A~09field weapon;~0D~0A~0D~0A~09constructor(weapon, pos, vel) : base(pos, vel, THROWN_WEAPON_RADIUS) {~0D~0A~09@1this.weapon = weapon;~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1base.update(timeStep);~0D~0A~0D~0A~09@1deceleration = THROWN_WEAPON_DECELERATION * timeStep;~0D~0A~09@1if (this.vel.lengthSquared() > deceleration ** 2.0) {~0D~0A~09@2this.vel = this.vel.minus(this.vel.normalized().times(deceleration));~0D~0A~09@1} else {~0D~0A~09@2this.vel = Vec2.zero();~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1color = Color.black();~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, color.r, color.g, color.b~0D~0A~09@2);~0D~0A~09}~0D~0A}~0D~0A%&Jwsource/Util.cry~0Aimport Math;~0D~0Aimport Random;~0D~0A~0D~0A// Utility functions that don~0dt fit anywhere else.~0D~0Aclass Util {~0D~0A~09// Fisher-Yates shuffle a list.~0D~0A~09static function shuffle(list) {~0D~0A~09@1for (i = 0; i < list.length - 1; ++i) {~0D~0A~09@2j = Random.randomInt(i, list.length);~0D~0A~09@2t = list[i];~0D~0A~09@2list[i] = list[j];~0D~0A~09@2list[j] = t;~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Solves ax^2 + bx + c = 0 and returns the list of real roots. The a coefficient must not be zero.~0D~0A~09static function getQuadraticRoots(a, b, c) {~0D~0A~09@1determinant = b ** 2 + 4 * a * c;~0D~0A~09@1if (determinant < 0.0) {~0D~0A~09@2// No roots.~0D~0A~09@2return [];~0D~0A~09@1} else if (determinant > 0.0) {~0D~0A~09@2// Two roots.~0D~0A~09@2return~0D~0A~09@3[ (-b - determinant ** 0.5) / (2.0 * a)~0D~0A~09@3, (-b + determinant ** 0.5) / (2.0 * a)~0D~0A~09@3];~0D~0A~09@1} else {~0D~0A~09@2// One root.~0D~0A~09@2return [-b / (2.0 * a)];~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Returns a random angle in [0, tau].~0D~0A~09static function randomAngle() {~0D~0A~09@1return 2.0 * Math.PI * Random.randomFloat();~0D~0A~09}~0D~0A~0D~0A~09// Returns a random unit vector.~0D~0A~09static function randomUnitVector() {~0D~0A~09@1angle = Util.randomAngle();~0D~0A~09@1return new Vec2(Math.cos(angle), Math.sin(angle));~0D~0A~09}~0D~0A}~0D~0A%&Jxsource/Vec2.cry~0A// A simple 2D vector type.~0D~0Aclass Vec2 {~0D~0A~09field x;~0D~0A~09field y;~0D~0A~0D~0A~09static function zero() { return new Vec2(0.0, 0.0); }~0D~0A~0D~0A~09constructor(x, y) {~0D~0A~09@1this.x = x;~0D~0A~09@1this.y = y;~0D~0A~09}~0D~0A~0D~0A~09function clone() {~0D~0A~09@1return new Vec2(this.x, this.y);~0D~0A~09}~0D~0A~0D~0A~09function isZero() {~0D~0A~09@1return this.x == 0.0 && this.y == 0.0;~0D~0A~09}~0D~0A~0D~0A~09function plus(that) {~0D~0A~09@1return new Vec2(this.x + that.x, this.y + that.y);~0D~0A~09}~0D~0A~0D~0A~09function minus(that) {~0D~0A~09@1return new Vec2(this.x - that.x, this.y - that.y);~0D~0A~09}~0D~0A~0D~0A~09function times(k) {~0D~0A~09@1return new Vec2(this.x * k, this.y * k);~0D~0A~09}~0D~0A~0D~0A~09function dividedBy(k) {~0D~0A~09@1return new Vec2(this.x / k, this.y / k);~0D~0A~09}~0D~0A~0D~0A~09function lengthSquared() {~0D~0A~09@1return this.x ** 2 + this.y ** 2;~0D~0A~09}~0D~0A~0D~0A~09function length() {~0D~0A~09@1return this.lengthSquared() ** 0.5;~0D~0A~09}~0D~0A~0D~0A~09function normalize()~0D~0A~09{~0D~0A~09@1if (!this.isZero()) {~0D~0A~09@2l = this.length();~0D~0A~09@2this.x /= l;~0D~0A~09@2this.y /= l;~0D~0A~09@1}~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function normalized()~0D~0A~09{~0D~0A~09@1result = this.clone();~0D~0A~09@1result.normalize();~0D~0A~09@1return result;~0D~0A~09}~0D~0A~0D~0A~09function equals(that) {~0D~0A~09@1return this.x == that.x && this.y == that.y;~0D~0A~09}~0D~0A}~0D~0A%&Jysource/Weapon.cry~0A// A weapon a character can use to attack.~0D~0Aclass Weapon {~0D~0A~09field bearer;~0D~0A~09field activeCooldown = 0.0;~0D~0A~0D~0A~09constructor(bearer) {~0D~0A~09@1this.bearer = bearer;~0D~0A~09}~0D~0A~0D~0A~09// The minimum length of time required between using this weapon.~0D~0A~09function cooldown() {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1this.activeCooldown -= timeStep;~0D~0A~09}~0D~0A~0D~0A~09// Uses this weapon from ~0Yfrom~0Y, aimed towards ~0Yto~0Y.~0D~0A~09function use(from, to, unlimitedAmmo = false) {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A~0D~0A~09// Draws this weapon to the screen.~0D~0A~09function draw() {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A}~0D~0A%5A001X5A00157A001@292@2wRA002336495C6F7I8L9OARBUCXDa5A7090JAW0XHYeZ@11a@1Ob@1lG@29H@2K1@2V7A0011287A00291K*B00A%*B0US%*B0uC%*B0@1ZT%*B0@2KI%*B0@3AJ%&f1Core,v1%&f2Math,v1%&f3Random,v1%&f4Graphics2D,v1%&f5Game,v1%&f6ImageResources,v1%&f7Graphics2DText,v1%1R@1Zx#1xI3#1xS^3#1xb3#1xx^3#1zG3#1zS^3#2ai3#2ap^3#2au3#2b1^3#2eM3#2eU^3#2zD3#30T^3#30t3#3123#31H^3#31L^3#34J3#34T3#353^3#35B^3#3Ah3#3As^3#3B73#3BK^3#3BV3#3Be^3#3By3#3CI^3#3Id3#3NO^3#3NT3#3Na^3#3O83#3OJ^3#3QI3#3Qg3#3R4^3#3RN^3#3Rw3#3S6^3#3SM3#3Sl^3#3Su3#3TJ^3#3TW3#3Tq^3!TLukewarm%~AVpf0000L@690main%5i32106C64@2D1M2302h42313Ou02h56C510102323Ou22h66C510102333Ou22h76C510102343Ou22h86C510102352h42362h92373j7e2b@5h3j026C500112383j836C21j0v2h42393j943j832M727B2bG3j833j941W23A3jA52M62hA2Q02b22hB2372j92hA2702392Z^L2hC6C21k1v2b22h42313j183r2@552hE6C21k1v2e22hD6C21k1v2b42j62hA2712362hG6C21k1v2e22hF6C21k1v2b42j62hA2702362j62hH2742362hJ6C21k1v2e22hI6C21k1v2bq3j693r0o2hA2316C60h1l23B3jBA3jBA6C60w1x3iLK6C62@1N1@116C63I1h3jBA6C6071J3iNM6C62@1N1@116C63I1h3jBA6C6071J3iN36C62@1N1@116C63I1h3jBA6C6071J3iO36C62@1N1@116C63I1h3jBA6C6071J3iOM6C62@1N1@116C63I1h2L535B0391H2hH2316C60h1l23B3jBA3jBA6C60w1x3iLK6C62@1N1@116C63I1h2L135B02h423C2hB23D39104iPPP6C23@2R0T6C60Z1j3j2H6C5101G3iNK6C5201F6C5001E6C5001D6C5000C6C60Z1j3j3J6C5101G3iLK6C5201F6C5001E6C5001I23E6C60Z1j3j4L6C5101G3iLK6C5201F6C5001E6C5001K23F3j693r1A3jEN2hQ6C21N1i6C5100M39153jFO2hQ6C21N1i6C5100M39103jEN6C5000C3jFO6C5000C6C60Z1j3j5P6C5101G3iOK6C5201F6C5001E6C5001D6C5000C391@2w3jBA6C5000C3jBA6C5000Q3Ou12hR3jBA2MR3II12706C5101023G6C60Z1j3jGS6C5101G3i446C5201F2hQ6C21J1i6C5101M6C5000C3jBA2MB2M72h427D2bL3Ou32hS3jBA2MB2h41W2MT2706C5101023H6C60Z1j3jHU6C5101G2h43jGS2MV6C5201F2hQ6C21J1i6C5101M6C5000C391@292jC2hA27023C3jCW2h427D2bn2jC2hT27123C3jBA2MB2M72h427D2b63jBA2MB2h41W2MX2Z53i246C12@4B103i346C12@4B106C62@1N1@1123I3i246C12@4B102h46C62@1N1@112h23i346C12@4B106C62@1N1@113i246C12@4B102h36C62@1N1@112h43i346C12@4B106C62@1N1@112L423J3jBA3jJZ2h43jJZ2M76C12@4B101W3jIa6C5200Y3jBA6C5000Q3jDb182c53jBA2MB2M72h42Q02bA3Ou42hU3jBA2MR3II12706C5101023K2h923D3jBA6C5000C3Ou12hR3jBA2MR3II12706C5101023G6C60Z1j3jGS6C5101G3i446C5201F2hQ6C21J1i6C5101M6C5000C3jDb2bC6C60Z1j3jKc6C5101G2h43jGS2MV6C5201F2hQ6C21J1i6C5101M6C5000C2ZL3Ou32hS3jBA2MB2h41W2MT2706C5101023H6C60Z1j3jHU6C5101G2h43jGS2MV6C5201F2hQ6C21J1i6C5101M6C5000C39103j026C5000d2Z%-355%2o0~BV@1Ti12002712assert%2hV2313j0g3j1h2h93I712o1~AV@1Uj1100150fail%2hB3j0h2hB3I712o1~AV@1Vl1100130chr%3j0k3I812o1~AV@1Wm0000020currentTime%3IA12o1~AV@1Xn1100130ord%3j0k3I912o1~AV@1Yo1100130parseFloat%3j0k3I212o1~AV@1Zp1100130parseInt%3j0k3I112o1~AV@1aq1100130print%3j0k3I312o1~AV@1bs11001C0sleep%3j0r6I512432c33j0r2h427E2hW2h93I703j0r3IU12o1~AV@1ct1100130typeof%3j0k3I412o1~AV@1du1100130isString%3j0k5I51152o1~AV@1ev1100130isNumber%3j0k6I512432o1~AV@1fy22002B0_LIB_CORE_list_sort_by_key%3j1w2M72hA27D2b53j1w3j0x3j1w6C12@1g103IB02o0~AV@1g@1222004I0_LIB_CORE_list_map%2L02322h42hX3j1w1y2Y63j2@103j0x3j3@116C410106C5100z2Z^71l1l1l3j2@102o1~AV@1h@1422005U0_LIB_CORE_list_filter%2L02322h42hX3j1w1y2YI3j0x3j3@116C410102343j4@135I5112182b42hB2hY2hB3I703j4@132b33j2@103j3@116C5100z2Z^J1l1l1l3j2@102o1~AV@1i@150000020getCurrentExecutionToken%3I612o1~AV@1j@160000020getExecutionIterationCounter%3IT12o1~AV@1k@170000020getProjectId%3IV12o1~AV@1l@192200240_LIB_CORE_invoke%3j0x3j1@186C4^10102o1~AV@1n@1A22002j0_LIB_CORE_generateException%3j063r3d3j1h6C61@1q131u3j1h6C61@1r141u3j1h6C61@1s151u3j1h6C61@1t161u3j1h6C61@1u171u3j1h6C61@1v181u3j1h6C61@1w191u3j1h6C61@1x1A1u3j1h6C61@1z1C1u3j1h6C61@211E1u3j1h6C61@221F1u3j1h6C61@231G1u3j1h6C61@241H1u3j1h6C61@1p121u2o0~AV@25@1C1100130getClassFromInstance%3j0@1B3Id12o1~BV@26@1H01004U12getClasses%2hV2303Ib12313j0@1D2hV2Q12bK2L02322h42hX3j1@101y2Y83j3@1F3j0@1D6C5101@1E2b33j2@1G3j3@1F6C5100z2Z^91l1l1l3j2@1G2o13j1@102o1~AV@27@1J11001A0getMethods%3j0@1I3I413r433j0@1I3Ic12o12hZ6C61@1u171u2o0~AV@3v@1L1100130arccos%3j0@1K3ID12o1~AV@3w@1M1100130arcsin%3j0@1K3IE12o1~BV@3x@1P12002612arctan%2hA2313j0@1N3j1@1O3IF12o1~AV@3y@1R1100130cos%3j0@1Q3IG12o1~AV@3z@1S1100130floor%3j0k3II12o1~AV@40@1T1100130sin%3j0@1Q3IO12o1~AV@41@1U1100130tan%3j0@1Q3IP12o1~AV@42@1V1100140log10%3j0k2ha3IQ12o1~AV@43@1W1100140ln%3j0k2hb3IQ12o1~AV@44@1X1100140log2%3j0k2hc3IQ12o1~AV@45@1Y1100130abs%3j0k3IC12o1~AV@46@1a2200240max%3j0@1Z3j1@133IJ12o1~AV@47@1b2200240min%3j0@1Z3j1@133IK12o1~AV@48@1e3300350ensureRange%3j0k3j1@1c3j2@1d3IH12o1~AV@49@1g1100130sign%3j0@1f3IN12o1~AV@4A@1h0000020randomFloat%5Ed3012o1~BV@4B@1k12002K12randomInt%2hV2313j1@1i2hV2Q02b72h43j0@1j5Ee3212m22hf6C11@4C102Z63j0@1j3j1@1i5Ee3212m22hg6C11@4C102o1~AV@4C@1m1100140_randomIntErrorHelper%3j0@1l6C61@1u171u2o0~AV@4D@1n0000020randomBool%5Eh3012o1~BV@4E@1q12002812randomChance%2hA2315Ed3013j1@1o2723j0@1p27B2o1~AV1@1r111I140control%2hi6C61@1p121u2o0~AV2@1s001I040isPlayerControlled%2hi6C61@1p121u2o0~AV3^1003I010<constructor>%2o0~HFI^1@1t3^1010@1r1011@1s20Agent%~AV4@1r111J3@1S0control%3j0@1u2MA2MB2M72hA27D2bA3j0@1u7C3161J42313j0@1u3j1a3j0@1u2MX6C5101@1w6C5001@1v35@1x05Ed3012hj27B2b26C20@181@102625Ed3012hj27B2b82N32hk27D2b22hk2Z12hl2635Ed3012hj27B2ba3j0@1u2MA2MB2M72hA2Q02bA3j0@1u7C3161J42313j0@1u3j1a3j0@1u2MX6C5101@1w6C5001@1v35@1x03j0@1u2MX3j0@1u2M@1x2hm6C5101@1z6C5101@1y2323j0@1u2M@202hV2Q12b63j0@1u2M@203j2@223j1a2h96C5300@213j0@1u2N23IG12N23IO16C62@1N1@112N36C5101@1z35@2303j0@1u2M@236C5001@24181l2o0~AV5@1s001J020isPlayerControlled%2hB2o1~AV6@27111J4@140getTarget%2hB2312hV2322h42333j343j0@1u2MA2MB2M727B2be3j0@1u2MA2MB3j341W2M@256C5001@1s2b83j0@1u2MA2MB3j341W2MX6C5001@262o13j0@1u2MA2MB3j341W3j0@1u2Q12c33j2a2hV2Q02b73j0@1u2MA2MB3j341W2MX2322j32hA2702332Z^l3j2a2hV2Q02b63i246C12@4B103i346C12@4B106C62@1N1@112Z23j2a6C5001@262o1~AV7^1003J040<constructor>%6C7030I6C20@181@102622o0~WFJI@287^1002@290V03@2A0l10@1r4011@1s5014@2760AI%~AV8Q111K170update%2N02N13j0@2B6C5101@1z6C5101@1y2602o0~AV9@2K221KA@2S0collidesWith%3j0@2C2M@232N16C5101@1w2323j2@2D6C5001@242b22hB2o12N23j0@2C2M@2E2702hH2752332N02343j0@2C2MX2353j2@2D2M@1O2hH2753j2@2D2M@2F2hH2752702362hH3j4@2G2M@1O3j2@2D2M@1O2723j2@2D2M@1O3j5@2H2M@1O2722713j4@2G2M@2F3j2@2D2M@2F2722703j2@2D2M@2F3j5@2H2M@2F2722712722373j4@2G2M@1O2hH2753j5@2H2M@1O2hH2752702hH3j4@2G2M@1O2723j5@2H2M@1O2722713j4@2G2M@2F2hH2752703j5@2H2M@2F2hH2752702hH3j4@2G2M@2F2723j5@2H2M@2F2722713j3@2I2712383j6@1Z3j7@133j8@1F6C23@171@102393j9@2J2M72h42Q02b32hB2o12Zg3j9@2J2M72hA2Q02bD2hk3j9@2J2h41W27C2c53j9@2J2h41W3j1@2B27C2o12ZO2hk3j9@2J2h41W27C2c53j9@2J2h41W3j1@2B27C2eB2hk3j9@2J2hA1W27C2c53j9@2J2hA1W3j1@2B27C2o12o0~AVA@2N111K190contains%2N03j0@2M6C5101@1w6C5001@2L2N22hn27527B2o1~AVB^1333K370<constructor>%3j0X2603j1@232613j2@2E2622o0~bFK^1@2OB^1000X0V01@230V02@2E0V13Q8014@2K9015@2NA0Body%~AVCC001g1@160draw%2N02N12ho6C5101@1z6C5101@1w2302N02N66C5101@1w6C5001@2L2N03j0@2P6C5101@1w6C5001@2L27B2b22N62302N02M@1O2hp2703II12N02M@2F2hp2703II13j0@2P2M@1O2hp2703II13j0@2P2M@2F2hp2703II15i44Pq6C28@2N0T3OT12hH2N02M@1O2N22712hp2703II12N02M@2F2N22712hp2703II12hn2N22722hn2N22722h42h42h42hP4IS092o0~AVD^1223g280<constructor>%3j0X3j1@232hr6C73B0K3j0X6C5001@262662o0~HFgK@2QD^1006@2R0V17CC0Bullet%~AVEQ111h1t0update%3j0@2B7C3180K^12N02M@1O2N227B2b42N02N235@1O02ZC2N02M@1O2h22N227127D2b52N02h22N227135@1O02N02M@2F2N227B2b42N02N235@2F02ZC2N02M@2F2h32N227127D2b52N02h32N227135@2F02NA2hV2Q12b32NA3j0@2B6C5100Q2N71t6C5100@1r2o0~AVFC001h1i0draw%2N76C5001@1s2b26C20J1i2Z16C20N1i2303OT12hH2N02M@1O2N22712hp2703II12N02M@2F2N22712hp2703II12hn2N22722hn2N22723j0@2S2M@2T3j0@2S2M@2U3j0@2S2M@132hP4IS092NA2hV2Q12b22NA6C5000C2o0~AVG@2Z001h3Q0throwWeapon%2NA2hV2Q12bL2N02N82hs6C5101@1z6C5101@1y2302N82ht6C5101@1z2312NA3j0@2V3j1@2W6C63@151z2322hV26A2N62M@2X3j2@2Y6C5100z2o0~AVH@2c001h4S0dropWeapon%2NA2hV2Q12bN6C20@191@102302N03j0@292hs6C5101@1z6C5101@1y2313j0@292hu6C5101@1z2322NA3j1@2V3j2@2W6C63c1k2332hV26A2N62M@2a3j3@2b6C5100z2o0~AVI^1333h3F0<constructor>%3j2X6C20@1B1@112hv6C73B0K3ikb6C62@1N1@112683j0A2663j1@252671t6C61t1w26A2o0~qFhK@2dI^1006A0V07@250V08@1x0V09T0X0A@200V13QE01BCF01C@2ZG01D@2cH0Character%~BVJ@2e012i1612black%2hP2304i4443j0@1Z6C64O1i2o1~BVK@2f012i1612gray%2hP2304iQQQ3j0@1Z6C64O1i2o1~BVL@2g012i1612silver%2hP2304iwww3j0@1Z6C64O1i2o1~BVM@2h012i1612white%2hP2304iPPP3j0@1Z6C64O1i2o1~BVN@2i012i1612red%2hP2304i44P3j0@1Z6C64O1i2o1~BVO^1343i4B12<constructor>%2hP2333j0@2T2603j1@2U2613j2@132623j3@1Z2632o0~RFi^1@2jO^1000@2T0V01@2U0V02@130V03@1Z0VColor%~AVPF221j260setPos%3j0@1O2603j1@2F2611t2o1~AVQ@2k001j040alignLeft%2hk2621t2o1~AVRE001j040alignCenter%2hp2621t2o1~AVS@2l001j040alignRight%2hb2621t2o1~AVTK001j040alignTop%2hk2631t2o1~AVUD001j040alignMiddle%2hp2631t2o1~AVVI001j040alignBottom%2hb2631t2o1~AVWM111j140setBgColor%3j0@2S2641t2o1~AVXG111j140setImage%3j0@2m2651t2o1~AVYC001j2k0draw%2N02N52M@2n2N22723II12712302N12N52MV2N32723II12712312N42hV2Q12bH3OT12hA3j0@2o3j1@2p2N52M@2n2N52MV2N42M@2T2N42M@2U2N42M@132N42M@1Z4IS092N52hV2Q12b42N53j0@2o3j1@2p6C5200C2o0~AVZ^1003j010<constructor>%2o0~@1PFj^1@2qZ^1000@1O0401@2F0402@2r0k03@2s0k04@2t0V05@2m0V16FP017@2kQ018ER019@2lS01AKT01BDU01CIV01DMW01EGX01FCY0Drawing%~AVaQ111k2O0update%3j0@2B7C3180K^12hb3j0@2B2722312N16C5001@2L3j1@2u2hn27527D2b82N12N16C5001@2v3j1@2u6C5101@1z6C5101@1w2612Z26C20@1B1@112612o0~AVbC001k1X0draw%6C20J1i2303OT12hH2N02M@1O2N22712hp2703II12N02M@2F2N22712hp2703II12hn2N22722hn2N22723j0@2S2M@2T3j0@2S2M@2U3j0@2S2M@132hP4IS092o0~AVc^1333k370<constructor>%3j1X3j2@232hu6C73B0K3j0@202662o0~MFkK@2wc^1006@200V13Qa017Cb0DroppedWeapon%~AVdQ001l4@4t0update%2h42303j042N02M727B2bA2N03j041W2N46C5100Q2j02hA2702302Z^F2h42303j042N12M727B2b@182N13j041W2N46C5100Q2N13j041W7C31f1lA2b82N13j046C5100@2x2j02hA2712302Zl2h42313j1@2y2N02M727B2be2N13j041W2N03j1@2y1W2N46C5201@2K2bQ2N13j046C5100@2x2j02hA2712302N03j1@2y1W2P12MT2hA27135T02N03j1@2y1W2MT2h427C2b32N03j1@2y6C5100@2x39152j12hA2702312Z^j2j02hA2702302Z%-75%2h42303j042N32M727B2bv2N33j041W2N46C5100Q2N33j041W2M@236C5001@242b82N33j046C5100@2x2j02hA2712303H1X2h42313j1@2y2N02M727B2bQ2N33j041W2N03j1@2y1W2N46C5201@2K2bC2N33j046C5100@2x2j02hA2712302N03j1@2y1W6C5000@2c39152j12hA2702312Z^V2j02hA2702302Z%-62%2h42303j042N22M727B2b@162N23j041W2N46C5100Q2h42313j1@2y2N02M727B2bp2N23j041W2N03j1@2y1W2N46C5201@2K2c62N03j1@2y1W2M@202hV2Q02bU2N03j1@2y1W2N23j041W2M@2035@2002N03j1@2y1W2M@202N03j1@2y1W35@2z02N03j1@2y1W2M@202hk35@3002N23j046C5100@2x2j02hA27123039152j12hA2702312Z^u2j02hA2702302Z%-73%2hB2322hB2332h42303j042N02M727B2bR2N03j041W2M@256C5001@1s2bG2h92322N03j041W2M@236C5001@24182b72h92332N52hx27026539152j02hA2702302Z^W3j2@31182b32hb2652Z53j3@32182b22hk2652hk2N62hy2713IJ12662hx2N52702N62702hb3IK12642N72N42hb3IK12702672o0~AVeC001l1@150draw%4iPPP6C23@2R0T2h42303j042N22M727B2b92N23j041W6C5000C2j02hA2702302Z^E2h42303j042N32M727B2b92N33j041W6C5000C2j02hA2702302Z^E2h42303j042N12M727B2b92N13j041W6C5000C2j02hA2702302Z^E2h42303j042N02M727B2b92N03j041W6C5000C2j02hA2702302Z^E2o0~AVf@34111l1e0outOfBounds%3j0@332MX2M@1O2hz3j0@332M@2E27227B2eU3j0@332MX2M@1O2h22hn3j0@332M@2E27227027D2eJ3j0@332MX2M@2F2hz3j0@332M@2E27227B2eA3j0@332MX2M@2F2h32hn3j0@332M@2E27227027D2o1~AVgY221l4G0shoot%3j0@356C5001@262323j1@363j0@356C5101@1w6C5001@1v2hv6C5101@1z2332N13j2@223j3@376C62D1g6C5100z2o0~AVh^1003l010<constructor>%2o0~@15Fl^1@38h^1000B1001@391002@2a1003@2X1004@2B0x05@3A0k06@3B0k07R0k18Qd019Ce01A@34f01BYg0Environment%~AV@4F^1004u0v0<constructor>%2h@106C21@2t1o6C5001@3E4i4446C5301@3D2h@116C5101@3C34u02h@106C21@2t1o6C5001@3E4iPPP6C5301@3D2h@126C5101@3C34u12h@106C21@2t1o6C5001@3E4i4446C5301@3D2h@126C5101@3C34u22h@106C21@2t1o6C5001@3E4i44P6C5301@3D2h@126C5101@3C34u32h@106C21@2t1o6C5001@3E4i4P46C5301@3D2h@126C5101@3C34u42h@106C21@2t1o6C5001@3E4i4PP6C5301@3D2h@126C5101@3C34u52h@106C21@2t1o6C5001@3E4i4Q46C5301@3D2h@126C5101@3C34u62o0~AVi^1003u010<constructor>%2o0~7Fu^1@3Fi@4F7Font%~AV@4G^1004v0D0<constructor>%6C60@121y34v06C60@121y34v16C60@121y34v22hB34v32hB34v46C20@1B1@1134v52o0~AVjQ112v3@1a0update%6C60@121y34v16C60@121y34v22hB34v32hB34v42h42313j143j032M727B2b@1K3j033j141W2323j252M62h@122Q02bC3Ov03j252M@3G6C5100z3Ov13j252M@3G6C5100z3j033j146C5100@2x2Z^Q3j252M62h@132Q02bC3Ov03j252M@3G6C5100@2x3Ov23j252M@3G6C5100z3j033j146C5100@2x2Z^h3j252M62h@142Q02b62h934v33j033j146C5100@2x2Z^s3j252M62h@152Q02b62h934v43j033j146C5100@2x2Z%-65%3j252M62hI2Q02bC3Ov53j252M@1O35@1O03Ov53j252M@2F35@2F03j033j146C5100@2x2Z%-82%2j12hA2702312Z%-87%2o0~AVk@3H112v140pressed%3Ov13j0@3G6C5101@2N2o1~AVl@3I112v140released%3Ov23j0@3G6C5101@2N2o1~AVm@3J112v140down%3Ov03j0@3G6C5101@2N2o1~AVn@3K112v150up%3Ov03j0@3G6C5101@2N182o1~AVo^1003v010<constructor>%2o0~7Fv^1@3Lo@4G6Input%~AV@1O@3M001@12040cooldown%2hi6C61@1p121u2o0~AV@1PQ111@12150update%2N13j0@2B2712612o0~BV@1Q@21231@123612use%2hB2322hi6C61@1p121u2o0~AV@1RC001@12040draw%2hi6C61@1p121u2o0~AV@1S^1113@12130<constructor>%3j0@2z2602o0~bF@12^1@3N@1S^1000@2z0V01@300k12@3M@1O013Q@1P014@21@1Q015C@1R0Weapon%~AVq@3M001w020cooldown%2h@162o1~BVr@21231w3P12use%2hB2322N12hk27C2c32N62h427D2bE2N02MA3j0@353j1@366C5200Y3j2@3O182b42N62hA2712667C30q1w22612o0~AVsC001w2R0draw%2N02MX2N02M@1x2h@176C5101@1z6C5101@1y2302N02MX2N02M@1x2h@186C5101@1z6C5101@1y2313j0@352M@1O3j0@352M@2F3j1@362M@1O3j1@362M@2F5i444@196C28@2N0T2o0~AVt^1113w130<constructor>%3j0@2z6C71@1S0@122o0~RFw@12@3Pt^1006@3Q0@1A12@3Mq014@21r015Cs0Pistol%~AVu@1r111x2@1g0control%3j0@1u3Ov53j0@1u2MX6C5101@1w6C5001@1v35@1x03Ov32c53Ov53j0@1u2MX6C5101@3R182bM3j0@1u2M@202hV2Q12bH3j0@1u2MX3j0@1u2M@1x2hm6C5101@1z6C5101@1y2313j0@1u2M@203j1@223Ov56C5200@213j0@1u2MA2hb35@3B03Ov42c53Ov53j0@1u2MX6C5101@3R182b63j0@1u6C5000@2Z3j0@1u2MA2hb35@3B03j0@1u6C20@1B1@1135@2302h@1B6C21m1v2b73j0@1u2M@232P12M@1O2hA27135@1O02h@1C6C21m1v2b73j0@1u2M@232P12M@1O2hA27035@1O02hD6C21m1v2b73j0@1u2M@232P12M@2F2hA27135@2F02hF6C21m1v2b73j0@1u2M@232P12M@2F2hA27035@2F03j0@1u2M@236C5000@1v3j0@1u3j0@1u2M@232hl6C5101@1z35@2302o0~AVv@1s001x020isPlayerControlled%2h92o1~AVw^1003x020<constructor>%6C7030I2o0~HFxI@3Sw^1010@1ru011@1sv0Player%~AVx@3T001y030clear%2N06C5000@3T2o0~AVy@26001y040clone%2N06C5001@266C61@121y2o1~AVz@2N111y140contains%2N03j0@3G6C5101@2N2o1~AV@10z111y150add%2N03j0@3G2hV2202o0~AV@11@2x111y140remove%2N03j0@3G6C5100@2x2o0~BV@12^1013y1512<constructor>%2K02303j0@3V2602o0~bFy^1@3U@12^1000@3V2011@3Tx012@26y013@2Nz014z@10015@2x@110Set%~AV@13Q111z2O0update%3j0@2B7C3180K^12hr3j0@2B2722312N16C5001@2L3j1@2u2hn27527D2b82N12N16C5001@2v3j1@2u6C5101@1z6C5101@1w2612Z26C20@1B1@112612o0~AV@14C001z1X0draw%6C20J1i2303OT12hH2N02M@1O2N22712hp2703II12N02M@2F2N22712hp2703II12hn2N22722hn2N22723j0@2S2M@2T3j0@2S2M@2U3j0@2S2M@132hP4IS092o0~AV@15^1333z370<constructor>%3j1X3j2@232hu6C73B0K3j0@202662o0~MFzK@3W@15^1006@200V13Q@13017C@140ThrownWeapon%~AV@16@3X112@104Y0shuffle%2h42313j143j0w2M72hA27127B2bO3j143j0w2M76C12@4B102323j0w3j141W2333j0w3j143j0w3j2@2y1W2203j0w3j2@2y3j3@112202j12hA2702312Z^V2o0~AV@17@3Z332@104r0getQuadraticRoots%3j1@132hH2752h@1D3j0@1Z2723j2@1F2722702333j3@3Y2hk27B2b32L02o12ZZ3j3@3Y2hk27D2bN3j1@131k3j3@3Y2hp2752712hn3j0@1Z2722733j1@131k3j3@3Y2hp2752702hn3j0@1Z2722732L22o12Z83j1@131k2hn3j0@1Z2722732L12o12o0~AV@18@3a002@10040randomAngle%2h@1E5Ed3012722o1~AV@19@3c002@10180randomUnitVector%6C20@181@102303j0@3b3IG13j0@3b3IO16C62@1N1@112o1~AV@1A^1003@10010<constructor>%2o0~7F@10^1@3d@1A^10Util%~AV@1B@3e002@11030zero%3ikk6C62@1N1@112o1~AV@1C@26001@11040clone%2N02N16C62@1N1@112o1~AV@1D@24001@11080isZero%2N02hk2Q02c32N12hk2Q02o1~AV@1E@1y111@111A0plus%2N03j0@2C2M@1O2702N13j0@2C2M@2F2706C62@1N1@112o1~AV@1F@1w111@111A0minus%2N03j0@2C2M@1O2712N13j0@2C2M@2F2716C62@1N1@112o1~AV@1G@1z111@11180times%2N03j0@3f2722N13j0@3f2726C62@1N1@112o1~AV@1H@3g111@11180dividedBy%2N03j0@3f2732N13j0@3f2736C62@1N1@112o1~AV@1I@2L001@11080lengthSquared%2N02hH2752N12hH2752702o1~AV@1J7001@11040length%7C30@1I1@1182hp2752o1~AV@1K@1v001@111F0normalize%7C30@1D1@113182bA7C30@1J1@1192302N03j0@3h2732602N13j0@3h2732611t2o1~AV@1L@2v001@11160normalized%7C30@1C1@1122303j0@3i6C5000@1v3j0@3i2o1~AV@1M@3R111@111A0equals%2N03j0@2C2M@1O2Q02c42N13j0@2C2M@2F2Q02o1~AV@1N^1223@11250<constructor>%3j0@1O2603j1@2F2612o0~@1AF@11^1@3j@1N^1000@1O0V01@2F0V12@26@1C013@24@1D014@1y@1E015@1w@1F016@1z@1G017@3g@1H018@2L@1I0197@1J01A@1v@1K01B@2v@1L01C@3R@1M0Vec2%~AV@1m^10031010<constructor>%2o0~7F1^1@3k@1m^10Core.Object%~AV@1o@3l0012030getTrace%1t3Ia12o1~CV@1p^102322G224<constructor>%2hV2302hV2311t2hH3IY01t2h42hB3IZ03j0h2613j1@3n2602o0~MF2^1@3m@1p^1000@3n0V01h0V12@3l@1o0Core.Exception%~CV@1q^102332C224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p021t2h42h93IZ02o0~7F32@3o@1q^10Core.FatalException%~CV@1r^1023428224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7F42@3q@1r^10Core.AssertionFailedException%~CV@1s^1023528224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7F52@3r@1s^10Core.DivisionByZeroException%~CV@1t^1023628224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7F62@3s@1t^10Core.IndexOutOfRangeException%~CV@1u^1023728224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7F72@3t@1u^10Core.InvalidArgumentException%~CV@1v^1023828224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7F82@3u@1v^10Core.InvalidAssignmentException%~CV@1w^1023928224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7F92@3v@1w^10Core.InvalidInvocationException%~CV@1x^1023A28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FA2@3w@1x^10Core.InvalidKeyException%~CV@1y^1023B28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FB2@3x@1y^10Core.InvalidOperationException%~CV@1z^1023C28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FC2@3y@1z^10Core.KeyNotFoundException%~CV@20^1023D28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FD2@3z@20^10Core.NotImplementedException%~CV@21^1023E28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FE2@40@21^10Core.NullReferenceException%~CV@22^1023F28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FF2@41@22^10Core.UnassignedVariableException%~CV@23^1023G28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FG2@42@23^10Core.UnknownFieldException%~CV@24^1023H28224<constructor>%2hV2302hV2313j0@3p3j1@1F6C72@1p022o0~7FH2@43@24^10Core.UnsupportedOperationException%~AV@28^1113L130<constructor>%3j062602o0~CFL^1@44@28^100060VGame.Event%~AV@4H^1004M090<constructor>%2L034M12L034M22L034M32L034M42o0~AV@29@45002M060getScreenInfo%2hB2h42h42L35E@1F5112o1~AV@2Ad001M1O0clockTick%2h42h43OM41y2Y33j0@116C400002Z^41l1l1l5E@1G5002h42h43OM31y2Y33j0@116C400002Z^41l1l1l2o0~AV@2B1001M5@3T0pumpEvents%2L02303OM15E@1H5112313j1@112M72322h42333j343j2@4727B2b@2w3j1@113j342P12hA2702331W3r5@2f3j1@113j342P12hA2702331W3j1@113j342P12hA2702331W6C62@2H1Q234391@2T3j1@113j342hA2711W3i943j1@113j342P12hA2702331W3j1@113j342P12hA2702331W6C65@2F1O234391@263j1@113j342hA2711W3iB43j1@113j342P12hA2702331W3j1@113j342P12hA2702331W6C65@2F1O234391@1j3j1@113j342hA2711W3i9H3j1@113j342P12hA2702331W3j1@113j342P12hA2702331W6C65@2F1O234391@1M3j1@113j342hA2711W3iBH3j1@113j342P12hA2702331W3j1@113j342P12hA2702331W6C65@2F1O234391z3j1@113j342P12hA2702331W3j1@113j342P12hA2702331W3j1@113j342P12hA2702331W6C63@2I1R234391b3j1@113j342P12hA2702331W2h96C62@2E1N234391Q3j1@113j342P12hA2702331W2hB6C62@2E1N234391F3j1@113j342P12hA2702331W6C61@2J1S23439152hB2hV2h93I7039103j0@103j4@466C5100z2Z%-186%3OM22M72h427D2bC2h42hA3OM21y2Y43j1@113j0@106C410002Z^51l1l1l3j0@102o1~AV@2C@49111M1F0setTitle%2j02h@1I2702303j0@482M72h42Q02b32h@1J6C61@1u171u3j0@485E@1K5112o1~CV@2D^1463M9@2S224<constructor>%2hV2342hV2353j0@485I51152h@1L2h93I702h@1M2362h@1N2372h@1O2383j1@4D6I512432h@1P3j6@112702h93I703j2@2n6I512432h@1N3j6@112702h93I703j3V6I512432h@1O3j6@112702h93I703j4@4E2hV2Q02e23j4@4E6I512432h@1Q3j7@4F2703j6@112702h93I703j5@4G2hV2Q02e23j5@4G6I512432h@1Q3j8@4H2703j6@112702h93I703OM02hV2Q02h@1R2h93I701t34M03j1@4D2673j4@4E2m13j2@2n2343j5@4G2m13j3V2353j2@2n3II12323j3V3II12333j4@4E3II12343j5@4G3II12353j2@2n2613j3V2622h@1S2363j2@2n2h427D3j7@4F3j6@112702h93I703j3V2h427D3j8@4H3j6@112702h93I703j4@4E2h427D2h@1Q3j7@4F2703j6@112702h93I703j5@4G2h427D2h@1Q3j8@4H2703j6@112702h93I703j1@4D2h427D2h@1P3j6@112702h93I703j1@4D5E@1T5103j2@2n3j3V3j4@4E3j5@4G5E@1U5403j0@485E@1K5102o0~bFM^1@4A@2D@4H501@4B0V02@4C0V07@4D0V18d@2A0191@2B01A@49@2C0Game.GameWindow%~AV@2E^1223N2B0<constructor>%3j1@3J2b22h@122Z12h@136C71@280L3j0@3G2613j1@3J2622o0~HFNL@4I@2E^1001@3G0V02@3J0VGame.KeyEvent%~AV@2G^1333P370<constructor>%3j066C71@280L3j1@1O2613j2@2F2622o0~HFPL@4J@2G^1001@1O0V02@2F0VGame.MouseEvent%~AV@2F^1553O590<constructor>%3j063j3@1O3j4@2F6C73@2G0P3j1@4L2633j2@3J2642o0~HFOP@4K@2F^1003@4L0V04@3J0VGame.MouseClickEvent%~AV@2H^1223Q250<constructor>%2hI3j0@1O3j1@2F6C73@2G0P2o0~7FQP@4M@2H^10Game.MouseMoveEvent%~AV@2I^1333R370<constructor>%2h@1V3j0@1O3j1@2F6C73@2G0P3j2@4O2632o0~CFRP@4N@2I^1003@4O0VGame.MouseScrollEvent%~AV@2J^1113S150<constructor>%2hA6C71@280L3j0@4Q2612o0~CFSL@4P@2J^1001@4Q0VGame.QuitEvent%~AV@2T^1004T0J0<constructor>%6C60@1m1134T06C60@1m1134T13OT03OT22h45E@1W4303OT13OT32h45E@1W4303OM44n@2K2T6C5100z3OM34n@2L2T6C5100z2o0~AV@2K@4R002T1J0_renderer%3OT15E@1X4103OT13OT32hA5E@1W4303OT12303OT034T13j0@1134T03OT32303OT234T33j0@1134T22o0~AV@2L@4S002T070_rendererReset%2hV34T33OT13OT32hH5E@1W4312o1~BV@2M@4T782T8E12ellipse%2hP2373OT12hH3j0@2o3j1@2p3j2@2n3j3V3j4@2T3j5@2U3j6@133j7@1Z4IS192o1~BV@2N@4Z892T9@1Y12line%2hP2383j4@4U2hA27B2b12o03Ie03j1@4V3j3@4W2Q02bL3OT12hA3j0@4X3j2@4Y3IK13j1@4V3j4@4U2hH2732713j2@4Y3j0@4X2713IC13j4@4U3j5@2T3j6@2U3j7@133j8@1Z4IS192o13j0@4X3j2@4Y2Q02bL3OT12hA3j0@4X3j4@4U2hH2732713j1@4V3j3@4W3IK13j4@4U3j3@4W3j1@4V2713IC13j5@2T3j6@2U3j7@133j8@1Z4IS192o13j4@4U2hX27B2c25E@1Y401182bD3OT12hX3j0@4X3j1@4V3j2@4Y3j3@4W3j4@4U3j5@2T3j6@2U3j7@133j8@1Z4IS1A2o13OT12h@1A3j0@4X3j1@4V3j2@4Y3j3@4W3j4@4U2h42h42h43j5@2T3j6@2U3j7@133j8@1Z4IS0D3OT15E@1Z4112o1~BV@2O@4a782T8E12rectangle%2hP2373OT12hA3j0@2o3j1@2p3j2@2n3j3V3j4@2T3j5@2U3j6@133j7@1Z4IS192o1~BV@2P@4h9A2TAG12triangle%2hP2393OT12h@1D3j0@4b3j1@4c3j2@4d3j3@4e3j4@4f3j5@4g3j6@2T3j7@2U3j8@133j9@1Z4IS1B2o1~BV@2Q@4kBC2TCI12quad%2hP23B3OT12h@1A3j0@4b3j1@4c3j2@4d3j3@4e3j4@4f3j5@4g3j6@4i3j7@4j3j8@2T3j9@2U3jA@133jB@1Z4IS1D2o1~AV@2R@4l332T4K0fill%3OM02333OT13OT32hH5E@1W4303OT12hA2h42h43j3@112M@4B3j3@112M@4C3j0@2T3j1@2U3j2@132hP4IS192o1~AV@2S^1003T010<constructor>%2o0~7FT^1@4m@2S@2T4Graphics2D.Draw%~AV@4I^1004e050<constructor>%2h42h42L234e02o0~AV@2U@59112eG@2X0load%3j0@4n2M@4o2313j1@4q6C5000@4p3j0@4n2M@4r2323j0@4n2M@4s2335E@1a4012b@1W3j1@4q2M@4t2343Of03j4@3G6C5101@4u2353j5@4v2hV2Q02bm6C60@2j1f2353j1@4q2M@2n6C21@2V1e2363j1@4q2MV6C21@2V1e2373j5@4v3j6@4w35@2n03j5@4v3j7@4x35V02h43j6@4w3j7@4x2L26C62@3u1d2383j1@4q2M@2n3j1@4q2MV2hB6C63@3X1Z2393j9@4y3j1@4q35@4o03j8@506C5000@4z3j8@503j9@4y3i446C5300@513j8@506C5000@523j5@4v2h93j8@505E@1b4303Of03j4@3G3j5@4v2203j0@4n2M@5323A3j0@4n2M@5423B3j5@4v2M@2n2hk27023C3j5@4v2MV2hk27023D3jA@1O3jC@552733jB@2F3jD@562733jA@1O3j2@2n2703jC@552733jB@2F3j3V2703jD@562732L423E2Zb2h43j2@2n3j3V2L26C62@3u1d2383j8@506C5000@4z3j8@503j0@4n3j0@4n2M@531k3j0@4n2M@541k6C5300@513j8@506C5000@526C60@2j1f2353j5@4v3j2@2n35@2n03j5@4v3j3V35V03j5@4v2h93j8@505E@1b4302hk2hk2hb2hb2L423E3j5@4v3j2@2n3j3V6C63@2i1e23F3jF@573j5@4v3jE@583j2@2n3j3V5E@1c4503jF@572o1~AV@2V@5B112e2V0_nextPowerOf2%3j0@1f3j0@1f2hA2712762h42Q02b23j0@1f2o13j0@1f2hH2732313j1@5A2h427D2b92j03j1@5A2772302j12hH2732312Z^D3j0@1f2hA2702o1~AV@2WC221e2F0draw%3OT11t8i44444443j0@1O3j1@2F3i445E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2X@5D331e3G0drawWithAlpha%3OT11t8i444444@1f3j0@1O3j1@2F2h43j2@5C5E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2Y@5G661e6T0drawRegion%3j4@2n2h42Q02e33j5V2h42Q02b12o03OT11t2hA3j2@5E3j3@5F3j4@2n3j5V3i443j0@1O3j1@2F3i445E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2Z@5H441e4Q0drawStretched%3j2@2n2h42Q02e33j3V2h42Q02b12o03OT11t6i4444H3j2@2n3j3V3j0@1O3j1@2F3i445E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2a@5O881e8c0drawRegionStretched%3j2@5L2h42Q02eB3j3@5K2h42Q02e73j6@5J2h42Q02e33j7@5I2h42Q02b12o03OT11t2hX3j4@5E3j5@5F3j6@5J3j7@5I3j2@5L3j3@5K3j0@5M3j1@5N3i445E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2b@5P991e9L0drawRegionStretchedWithAlpha%3OT11t2h@1g3j4@5E3j5@5F3j6@5J3j7@5I3j2@5L3j3@5K3j0@5M3j1@5N3i445E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2c@5Q331e3G0drawRotated%3OT11t8i444444@1D3j0@1O3j1@2F3j2@1Q2h45E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2d@5R441e4G0drawRotatedWithAlpha%3OT11t8i444444@1h3j0@1O3j1@2F3j2@1Q3j3@5C5E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2e@5SAA1eAM0drawWithOptions%3OT11t2h@1i3j4@5E3j5@5F3j6@5J3j7@5I3j2@5L3j3@5K3j0@5M3j1@5N3j8@1Q3j9@5C5E@1d4D12b22hV2Z42hB2h@1e2hB3I712o1~AV@2f@5V111e3R0_createResCopy%3j0@5T3j0@5T2L22315E@1a401182bI6C60@2j1f2323j2@5U3j0@5T2M@2n35@2n03j2@5U3j0@5T2MV35V03j2@5U2hB3j0@5T5E@1b4303j1@102hA3j2@5U2203j1@102o1~AV@2g@5W221e4T0flip%3j0@4H2e13j1@2D182b21t2o12N07C31@2f1eD2323j2@5T2hA1W2N12N26C63@2i1e2331t3j3@103j0@4H3j1@2D3j2@5T2h41W3j2@5T2hA1W5E@1j4612o1~AV@2h@5Z221e7@1F0scale%3j0@4F5I51132c23j1@4H5I5113182e73j0@4F2h42Q02e33j1@4H2h42Q02b42hB2h@1k2hB3I703j0@4F2h427B2323j1@4H2h427B2333j2@5Y2e13j3@5X2bB3j2@5Y3j3@5X7C32@2g1eE2343j0@4F3IC12303j1@4H3IC12312Z21t2343j0@4F2N12Q02c33j1@4H2N22Q02b23j4@502o12N07C31@2f1eD2353j5@5T2hA1W3j0@4F3j1@4H6C63@2i1e2363j4@503j6@103j0@4F3j1@4H3j5@5T2h41W3j5@5T2hA1W5E@1l4603j6@102o1~AV@2i^1333e370<constructor>%3j0@5c2603j1@2n2613j2V2622o0~@1KFe^1@5a@2i@4I100@5b0V01@2n0V02V0V14C@2W015@5D@2X016@5G@2Y017@5H@2Z018@5O@2a019@5P@2b01A@5Q@2c01B@5R@2d01C@5S@2e01D@5V@2f01E@5W@2g01F@5Z@2h0Graphics2D.GraphicsTexture%~AV@4J^1004f030<constructor>%2K034f02o0~AV@2j^1003f010<constructor>%2o0~HFf^1@5d@2j@4J101@2n0V02V0VGraphics2D.GraphicsTextureResource%~AV@2k^1113m140<constructor>%3j0@3p2hV6C72@1p022o0~7Fm2@5e@2k^10Graphics2DText.FontNotFoundException%~AV@4K^1004n030<constructor>%2K034n02o0~AV@2l@3D331n3C0setColor%3j0@2i2633j1@5f2643j2@5g2652hV2662hV2671t2o1~AV@2m@3C111n180setSize%3j0@5h2612hV2662hV2671t2o1~AV@2n@5j111n180setStyle%3j0@5i2622hV2662hV2671t2o1~AV@2o0111n3@130render%2N62hV2Q02bZ2N02M@5k2N02M@5l2N12N22N32N42N56C27@391s2662N02M@5k2N02M@5l2N12N22N32N42N52L72h@1m6C5101@5m2675E@1n7012b92N02M@5k2N02M@5l2N12N22N66C25@311p2682N72h@1o2703j0@5n2702313On03j1@5o6C5101@4u2323j2@572hV2Q02bA1t3j0@5n2h@1I2706C62@3F1t2323On03j1@5o3j2@572203j2@572o1~AV@2p^1113n1A0<constructor>%3j0@5q2Xo182b32h@1p6C61@1u171u3j0@5q2602o0~@1AFn^1@5p@2p@4K100@5q0V01@5h0@1h02@5i0403@2i0P04@5f0P05@5g0P06@5r0V07@5s0V08@5t0V1A@3D@2l01B@3C@2m01C@5j@2n01D0@2o0Graphics2DText.FontRenderer%~AV@4L^1004o030<constructor>%2K034o02o0~AV@2q@3E001o030getRenderer%1t6C61@2p1n2o1~AV@2r@5w222o240_getKey%3j0@5u3j1@5v2702o1~AV@2s@5x222o4M0_get%3j0@5u3j1@5v2702323Oo03j2@3G6C5101@4u2333j3@5q2hV2Q02b83j0@5u3j1@5v6C62@301o2333Oo03j2@3G3j3@5q2203j3@5q2o1~AV@2t@5z112o1F0fromResource%3j0@5y5E@1q711182b72h@1r3j0@5y2702h@1s2706C61@2k1m1u2hA3j0@5y6C22@2s1o2o1~AV@2u@60112o130fromDisk%6C60@201D1u2o0~AV@2v@62112o1F0fromSystem%3j0@615E@1t711182b72h@1u3j0@612702h@1s2706C61@2k1m1u2hX3j0@616C22@2s1o2o1~AV@2w@63112o130isSystemFontPresent%3j0@615E@1t7112o1~AV@2x@64002o030getDefaultSerifFont%3iA46C22@2s1o2o1~AV@2y@65002o030getDefaultSansSerifFont%3iH46C22@2s1o2o1~AV@2z@66002o030getDefaultMonospaceFont%3iX46C22@2s1o2o1~AV@30^1223o250<constructor>%3j0@5u2603j1@5v2612o0~MFo^1@67@30@4L100@5k0V01@5l0V13@3E@2q0Graphics2DText.FontResource%~AV@4M^1004p050<constructor>%2K034p02L034p12o0~AV@31@4u552p7Q0get%3j0@5u3j1@683j2@5h3j3@5i2L42h@1m6C5101@5m2353Op03j5@3G6C5101@4u2363j6@692hV2Q02b83j4@6A3j2@5h6C62@341p2363Op03j5@3G3j6@692203j6@692o1~AV@32@6Q441pH@2q0renderText%2h42342h42352hV2362L02372L02382L02392hV23A2h42h@1g3j0@5n1y2Y@1C3jB@1F3I9123C3jB@1F2h@1v2Q02b52j42N32702342Z^D3jB@1F2h@1w2Q02e33jB@1F2h@1o2Q02b36C60@201D1u2Z^O3j7@6B3jC@6C6C5100z2N23jC@6C6C5101@4u23D3jD@6D2hV2Q02bF2h923E1t3jC@6C6C62@381r23D3j6@6E2hV2Q02b22L02363j6@6E3jD@6D6C5100z3jD@6D23A3j8@6F3j4@2n3jD@6D2M@6G2716C5100z3j9@6H2h46C5100z3j3@6I3jD@6D6C5100z3j5V3jD@6D2MV3IJ12352j43jD@6D2M@6J2702342Z%-75%1l1l1l2j43jA@6K2M@2n3jA@6K2M@6J2713jD@6D2M@6G2712h@1x2722h@1y2732702343j6@6E2hV2Q12bZ3j6@6E6C21@351q23F2h42h@123jF@6L1y2YO2N03jG@6M6C5100z2h42hJ3jG@6M2M@6N1y2YB2N13jD@6D2M@6C3jG@6M2202N23jD@6D2M@6C3jD@6D2202Z^C1l1l1l2Z^P1l1l1l3j2@6O2hA3j8@6F5E@1z7303j2@6O2hH3j9@6H5E@1z7303j2@6O2hX3j7@6B5E@1z7303j2@6O2h@1D3j7@6B2M73IZ03j1@6P2h43j4@2n2203j1@6P2hA3j5V2202o0~AV@33@6R001p030consolidate%6C60@201D1u2o0~AV@34^1223p2G0<constructor>%3j0@6A2643j1@5h2hX2722h@1y2732631t2hA3IY01t2h42hV3IZ02o0~gFp^1@6S@34@4M200@6L1001@6T2002@6U2003@6V0V04@6A0V17@6Q@32018@6R@330Graphics2DText.GLRenderer%~AV@35@6c112qA@1n0makeSheets%2L02313j0@6N2M72322h42333j0@6N2M72h427D2b@1Z3j0@6N2h41W2MV2342h@203j4V2732353j0@6N4n@362q6C5100@6W2L02363j6@6X2M73j5@6b27B2c33j3@6Z3j2@6a27B2b@182L02373j6@6X3j7@6Y6C5100z2h42383j3@6Z3j2@6a27B2c83j8@2n3j0@6N3j3@6Z1W2M@2n2702h@2027B2bH3j0@6N3j3@6Z2P12hA2702331W2393j7@6Y3j9@6D6C5100z2j83j9@6D2M@2n2702382Z^U3j3@6Z3j2@6a27B2cA3j8@2n3j0@6N3j2@6a2hA2711W2M@2n2702h@2027B2bH3j0@6N3j2@6a2hA2712P12321W2393j7@6Y3j9@6D6C5100z2j83j9@6D2M@2n2702382Z^W2Z%-79%3j1@6L3j6@6X6C61@371q6C5100z3j1@6L2o1~AV@36@6d112q130sortByWidthKeyFunction%3j0@6D2M@2n2o1~AV@37^1113q9@1H0<constructor>%2h42313j0@6X2h41W2h41W2MV2322L02332L02342L02352h42h@1x3j0@6X1y2Yo2N03j6@6Y6C5100@6g2h42372h42h@1f3j6@6Y1y2YW2N13j8@6D2M@6C3j8@6D2203j8@6D3j7@1O35@6h03j8@6D3j1@2F35@6i03j8@6D1t35@6M03j8@6D2hV35@6j03j3@6F3j7@1O6C5100z3j4@6H3j1@2F6C5100z3j5@6N3j8@6D6C5100z2j73j8@6D2M@2n2702372Z^X1l1l1l2j13j2V2702312Z^p1l1l1l3j3@6F3j4@6H3j5@6N3j1@2F5E@217402o0~HFq^1@6e@37^1000@6N1001@6f20Graphics2DText.GLTextureSheet%~AV@38^1223r3j0<constructor>%3j1@6C2603j0@692681t2hJ3IY02h42h42h42h42L42323j0@692M@6A1t3j1@6C3j2@5h5E@22741182b72h@233j1@6C2702h@242706C61@1u171u3j2@5h2h41W2613j2@5h2hA1W2623j2@5h2hH1W2693j2@5h2hX1W26A2o0~@10Fr^1@6k@38^1000@6C0V01@2n0V02V0V03@6j0V04@6M0V05@6h0V06@6i0V07@6l0V08@690V09@6G0V0A@6J0VGraphics2DText.GLTile%~AV@4N^1004s030<constructor>%2K034s02o0~AV@39@4u772s9W0get%3j063j1@6m3j2@5h3j4@2T3j5@2U3j6@133j3@5i6C27@3A1s2373Os03j7@3G6C5101@4u2383j8@6A2hV2Q02bD3j063j1@6m3j2@5h3j3@5i3j4@2T3j5@2U3j6@136C67@3B1s2383Os03j7@3G3j8@6A2203j8@6A2o1~AV@3A@6n772s8T0getUniqueKey%2L02373j062h@1I2703j1@6m2h@1I2703j2@5h2h@1I2703j3@2T2h@1I2703j4@2U2h@1I2703j5@132h@1I2703j6@5i2h@1I2703j7@105E@257803j7@102h@266C5101@5m2o1~AV@3B^1773sA@180<constructor>%3j063j1@6m3j2@5h3j4@2T3j5@2U3j6@133j3@5i6C27@3A1s2601t2hA3IY02hV2L12371t3j063j1@6m3j2@5h3j4@2T3j5@2U3j6@133j3@5i5E@277812383IW12c33j062hA2Q02bJ2h42395E@2B701182bE3j942hA2702P12392h@2827D2b32h@296C61@2k1m1u2h@2A6C11@1b002Z^H3j8@6p3r6F391G2h@1u3j1@6m2702h@1s2706C61@2k1m1u2h@1r3j1@6m2702h@1s2706C61@2k1m1u6C60@1p121u2o0~CFs^1@6o@3B@4N100@3G0VGraphics2DText.NativeFont%~AV@3C@6q001t030_refreshGlRenderer%6C60@201D1u2o0~AV@3DC221t250draw%3j0@1O3j1@2F2hP7C33@3E1t82o1~AV@3E@5D331t3U0drawWithAlpha%2N12b91t2N53OT13j0@1O3j1@2F3j2@5C5E@2C7612o12ZI3OT12hA2h42h42h@1y2h@1y2hP2h42h42hP4IS091t3OT13j0@1O3j1@2F3j2@5C5E@2D7512o12o0~AV@3F^1223t3@1C0<constructor>%3j1@5n2642h42h42L22325E@1n7012bW2L02651t2h@1f3IY03j0@6t2M@5t2602N03j1@5n3j2@6P1t2N56C5400@6Q1t2h@1A3j0@6t2M@2i3IZ01t2h@1x3j0@6t2M@5f3IZ01t2h@193j0@6t2M@5g3IZ02h92612ZP1t2hA3IY03j2@6P1t3j0@6t2M@5r3j0@6t2M@5q2M@5k3j0@6t2M@5q2M@5l3j0@6t2M@5h3j0@6t2M@5i3j0@6t2M@2i3j0@6t2M@5f3j0@6t2M@5g3j1@5n5E@2E7B03j2@6P2h41W2623j2@6P2hA1W2632o0~qFt^1@6r@3F^1000@5t0V01@6s0B02@2n0V03V0V04@5n0V05@6N0V16@6q@3C017C@3D018@5D@3E0Graphics2DText.TextSurface%~AV@3G@6v111U3M0getImage%3j0@6u2h96C22@3Y1a2312N03j1@5T2hA1W6C5101@4u2323j2@6M2hV2Q02b42h@2F3j0@6u6C62@3L1V1u3j2@6M3j0@6u6C5101@6v2o1~AV@3H@6w001U1N0isDone%2N42b22h92o12h42h42N11y2Y73j0@6M6C5001@6w182b22hB2o12Z^81l1l1l2h92642h92o1~AV@3I@6x001U2R0getProgress%2N42b22hb2o12hk2302h42hA2N11y2Y92j03j1@6M6C5001@6x3j1@6M2M@6y2722702302Z^A1l1l1l3j0@6z2N32732o1~AV@3J@70001U2J0getFiles%2L02302h42hA2N11y2Y53j0@103j1@6M6C5001@706C5100@6g2Z^61l1l1l3j0@106C5000@6W3j0@102o1~AV@3K^1113U3a0<constructor>%3j0@6L6C5001@262613j0@6L2M72h42Q02b32h92642ZO2h42hA3j0@6L1y2YG3j1@6M2M@762322N03j2@6m3j1@6M2202N23j2@6m6C5100z2N33j1@6M2M@6y2702632Z^H1l1l1l2o0~qFU^1@71@3K^1000@722001@730V02@741003@6y0404@750B15@6v@3G016@6w@3H017@6x@3I018@70@3J0ImageResources.AggregatedImageSheet%~AV@3L^1223V280<constructor>%3j0@792h@2G3j1@5y6C5201@786C71@1p023j1@5y2632o0~CFV2@77@3L^1003@5y0VImageResources.ImageNotFoundException%~AV@3M^1223W280<constructor>%3j0@792h@2G3j1@6m6C5201@786C71@1p023j1@6m2632o0~CFW2@7A@3M^1003@6m0VImageResources.SheetNotFoundException%~AV@3N^1113X130<constructor>%3j0@1l6C71@1p022o0~7FX2@7B@3N^10ImageResources.LoadFailedException%~AV@4O^1004Y040<constructor>%2hV2L134Y02o0~AV@3O@6v001Y1X0getImage%2N42hV2Q12b22N42o12N2182b32h@2H6C61@1y1B1u2N32hV2Q02b32h@2I6C61@1y1B1u2N32M@2n2N32MV2hB6C63@3X1Z2303j0@502N335@4o03j0@502643j0@502o1~AV@3P@6w001Y2q0isDone%2N22b22h92o11t2N33OY05E@2J6303OY02h41W2303j0@6p2h427D2bB2h92623j0@6p2hA2Q12b32h@2K6C61@3N1X1u2h92o15E@2L6012bL3IT12313j1@1F2N02Q12b52hA2613j1@1F2602Z42N12hA2702612N12h@1y27D2b22h@2M6C11@1b002hB2o1~AV@3Q@7D112Y140loadFromResourcesAsync%3j0@7C5iVV9B6C25@3S1Y2o1~AV@3R@7E112Y140loadFromResources%3j0@7C5iVVBB6C25@3S1Y2o1~AV@3S@7O552YB@1d0_loadImpl%3j1@7F182bF3j0@7C6C21@3T1Y2353j5@7G2hA1W2303j5@7G2hH1W2333j5@7G2hX1W2343iVA6C62@3u1d2363j6@7H3j3@2n35@2n03j6@7H3j4V35V03j2@7I2bB6C60@3U1Y2373j7@7J3j6@7H35@7K03j6@7H3j0@7C3j7@7J5E@2N6303j7@7J2o12hB2h92L22385E@2L6012bX6C60@3U1Y2373j7@7J3j6@7H35@7K03j6@7H3j0@7C3j7@7J5E@2N6302h@2O6C11@1b002h@2M2393j7@7J6C5001@6w182bD3j9@7L6C11@1b002j92h@2P2722393j9@7L2hA27D2b22hA2392Z^H3j8@7N6C5000@7M2Z43j6@7H3j0@7C3j8@7N5E@2Q6303j8@7N2h41W182b32h@2R6C61@3N1X1u3j3@2n3j4V2hB6C63@3X1Z23A3jA@2m3j6@7H35@4o03jA@2m2o1~AV@3T@7Q112Y2Q0getGenName%3j0@7C6C21@3Y1a2313j1@7P2hV2Q02b42h@2S3j0@7C6C62@3L1V1u3j1@7P2h41W2hA2Q02b72h@1s3j0@7C2702h@2T2706C61@3N1X1u3j1@7P2o1~AV@3U^1003Y010<constructor>%2o0~gFY^1@7R@3U@4O100@7S0401@7T0402@7U0B03@7K0V04@7V0V16@6v@3O017@6w@3P0ImageResources.ImageLoader%~AV@3V@7W001Z020getWidth%2N12o1~AV@3W@7X001Z020getHeight%2N22o1~BV@3X^1233Z3F12<constructor>%2h92323j0@2n2613j1V2623j2@7Z2b62h43j0@2n3j1V2L26C62@3u1d2602o0~gFZ^1@7Y@3X^1000@4o0V01@4r0V02@4s0V03@530404@540415@7W@3V016@7X@3W0ImageResources.ImageResource%~AV@4P^1004a050<constructor>%2K034a22K034a32o0~BV@3Y@7d122a4o12getFileInfo%2hB2316C20@3a0a3Oa03j0@7C6C5101@4u2323j2@102hV2Q02bH3j0@7C6C5001@7a3i@2V@2U6C5201@782333Oa03j3@7b6C5101@4u2323j2@102hV2Q12b43Oa03j0@7C3j2@102203j2@102hV2Q02b42h@2W3j0@7C6C62@3L1V1u3j1@7c2c53j2@102h41W2hA2Q12b42h@2X3j0@7C6C62@3L1V1u3j2@102o1~AV@3Z@7e112a2P0getSheetInfo%6C20@3a0a3j0@613I412h@1D2Q12b32h@2Y6C61@1u171u3Oa23j0@616C5101@4u2313j1@6m2hV2Q02b42h@2Z3j0@616C62@3M1W1u3Oa13j1@6m1W2o1~AV@3a@7q002aI@5N0ensureInitialized%3Oa02hV2Q12b12o02K02302K02313j0@7f34a03j1@7g34a15E@2a6012322hV2332h42342h42h@1A3j2@7i2h@1o6C5101@7h1y2Y@4h3j5@4Z2h@2b6C5101@7h2363j6@7j2h41W6C5001@7a3s0@4O3j6@7j2hA1W2373j6@7j2hH1W3I112383j6@7j2hX1W3I112393j6@7j2h@1D4g1002h@2b6C5101@5m6C5001@7a23A3j0@7f3jA@7C2h43j7@7k3j8@4F3j9@4H2L4220391@433j6@7j2hA1W2333j6@7j2hH4g1002h@2b6C5101@5m6C5001@7a23B3j1@7g3j3@7l2h@2c3jB@612h@2d3j3@7l2h@2e2K02K32203Oa23jB@613j3@7l220391@3d2j42hA2702343j6@7j2hA1W3I1123C3j6@7j2hH1W3I1123D3jC@2n2h42Q02c33jDV2h42Q02b42h@2023C2h@2023D3j1@7g3j3@7l1W2h@2e1W3j4@7m2h@1N3jC@2n2h@1O3jDV2h@2f2L02K3220391@2y3j6@7j2hA1W2373j6@7j2hH1W3I1123E3j6@7j2hX1W3I1123F3j6@7j2h@1D1W3I1123C3j6@7j2h@1A1W3I1123D3j6@7j2h@1x1W3I1123G3j1@7g3j3@7l1W2h@2e1W3j4@7m1W2h@2f1W3j7@7k3jE@1O3jF@2F3jC@2n3jDV3jG@7n2L66C5100z391@2D3j6@7j2hA1W3I1123E3j6@7j2hH1W3I1123F3j6@7j2hX1W3I1123C3j6@7j2h@1D1W3I1123D3j6@7j2h@1A4g1002h@2b6C5101@5m6C5001@7a23A3j0@7f3jA@7C2hA3j3@7l3j4@7m3jE@1O3jF@2F3jC@2n3jDV2L72203Oa33j3@7l6C5101@4u2m12L023H3Oa33j3@7l3jH@7o2203jH@7o3jA@7C6C5100z391@1N3j6@7j2hA1W2373j6@7j2hH1W3I1123C3j6@7j2hX1W3I1123D3j6@7j2h@1D1W3I1123G3j6@7j2h@1A4g1002h@2b6C5101@5m6C5001@7a23A2j42hA2702343j1@7g3j3@7l1W2h@2e1W3j4@7m2h@1N3jC@2n2h@1O3jDV2h@2f3j7@7k2h42h43jC@2n3jDV3jG@7n2L62L12K32203Oa33j3@7l6C5101@4u2m12L023H3Oa33j3@7l3jH@7o2203jH@7o3jA@7C6C5100z3j0@7f3jA@7C2hA3j3@7l3j4@7m2h42h43jC@2n3jDV2L722039193j6@7j3j6@7j2h41W6C5001@7a2M72L26C61@1p121u2Z%-292%1l1l1l2h42h@133Oa36C5001@7p1y2Y33jH@7o6C5000@6W2Z^41l1l1l2o0~AV@3b^1003a010<constructor>%2o0~7Fa^1@7r@3b@4P4ImageResources.ImageResourceManifest%~AV@4Q^1004b050<constructor>%2hV2hV2L234b02o0~AV@3c@7E112b140loadFromResources%3j0@613i9B6C23@3e1b2o1~AV@3d@7D112b140loadFromResourcesAsync%3j0@613i996C23@3e1b2o1~AV@3e@7t332b6Y0_initImpl%3j2@7s2c43j0@613I412h@1A2Q02bK2L02332h42h@1D3j0@611y2Y73j3@6L3j4@113j1@7I2hB6C23@3e1b6C5100z2Z^81l1l1l3j3@6L6C61@3K1U2o13j0@616C21@3Z1a2353j5@7P3j1@7I6C62@3k1b2o1~AV@3f@6v111b4@120getImage%2N0182b32h@2g6C61@3N1X1u2N22hV2Q12b52N22M@7u7C31@3i0bB2hV2623j0@6u2h96C22@3Y1a2313j1@5T2hA1W2N42Q12b82h@2h2N32702h@2i2703j0@6u6C62@3L1V1u2N53j1@5T2hH1W1W2323j1@5T2h@1A1W3j1@5T2h@1x1W2hB6C63@3X1Z2333j3@103j2@502M@4o35@4o03j3@103j1@5T2hX1W35@5303j3@103j1@5T2h@1D1W35@5403j3@102o1~AV@3g@6w001b0F0isDone%2N02b22h92o12N23Ob06C5100@7v3Ob02h41W2b22h92602N02o1~AV@3h@6x001b0J0getProgress%2N02b22hb2o12N23Ob06C5100@7v3Ob02h41W2b42h92602hb2o13Ob02hA1W2o1~AV@3i@81111bB@1N0_turnTilesIntoSheet%2N12h@2e1W2312L02322h42hX3j1@7w6C5001@3V1y2Y@113j1@7w3j3@7x1W2343j4@7y2h@1N1W3j4@7y2h@1O1W6C62@3X1Z2353j5@502M@4o2363j6@5T6C5000@4z2h42h@193j4@7y2h@2f1W1y2YK3j7@6D2h41W2383j7@6D2hA1W2393j7@6D2hH1W23A3j6@5T3j0@7z3j8@611W3j9@1O3jA@2F6C5300@512Z^L1l1l1l3j6@5T6C5000@523j2@802M73j3@7x27C2b43j2@802hV6C5100z2Z^93j2@803j3@7x3j5@502202Z%-64%1l1l1l3j2@802652h92602hV2612o0~AV@3j@70001b050getFiles%3Oa32N41W6C5001@262o1~AV@3k^1223bA@1D0<constructor>%3j0@7P2613j0@7P2h@2c1W2633j0@7P2h@2d1W2643j0@7P2h@2e1W2322L02332h42h@1D3j2@806C5001@7p1y2Y63j3@6N3j4@7y2h@2f1W6C5100@6g2Z^71l1l1l3j3@6N2M72663j1@7I2b53j3@6N6C61@3n1c6C5001@592622ZX2K02352h42h@1x3j3@6N1y2YL3j6@6D2h41W2373j6@6D2hX1W2383j6@6D2h@1D1W2393j5@873j7@883j7@883iB93j8@2n3j9V6C25@3S1Y2202Z^M1l1l1l3j5@877C31@3i0bB2o0~@15Fb^1@82@3k@4Q100@750B01@830V02@840V03@850V04@760V05@860V06@6y0V18@6v@3f019@6w@3g01A@6x@3h01B@81@3i01C@70@3j0ImageResources.ImageSheet%~AV@3l@59001c4V0load%2h42h42N01y2YL3j0@6D2h41W2313j0@6D2hX1W2323j0@6D2h@1D1W2332N23j1@883j1@883i993j2@2n3j3V6C25@3S1Y2202Z^M1l1l1l1t2o1~AV@3m@7v111c2x0getStatus%2N22M72h427D2bP2h42hA2N26C5001@3V1y2YG2N23j1@3G1W6C5001@6w2bA2N13j1@3G2N23j1@3G1W6C5001@6v2202N23j1@3G6C5100@2x2Z^H1l1l1l2N22M72h42Q02b93j0@892h42h92203j0@892hA2hb2202ZE3j0@892h42hB2203j0@892hA2hb2N12M72722N02M72732202o0~AV@3n^1113c130<constructor>%3j0@6N2602o0~WFc^1@8A@3n^1000@6N0V01@7u2002@8B2013@59@3l014@7v@3m0ImageResources.ImageSheetLoaderAsync%~AV@4R^1004d030<constructor>%2h434d02o0~AV@3o@8C001d070updateResourceFingerprint%2N42h@2b2702N32702652o0~AV@3p@4z001d080lock%2h92662N32hA2702637C30@3o0d72o0~AV@3q@52001d050unlock%1t5E@2j6102hB2662o0~AV@3r@51331dF@280blit%3j0@2m2M@4o2333j3@8D6C5000@4p7C30@3t0dC3j1@1O2343j2@2F2353j1@1O3j3@8D2M@2n2702363j2@2F3j3@8D2MV2702372h42382h42393j3@8D2M@2n23A3j3@8D2MV23B3j6@8H2h427B2eB3j7@8G2h427B2e73j5@8F2N227E2e33j4@8E2N127E2b12o03j6@8H2N127E2bC3j6@8H2N127123C2j63jC@8I2712362jA3jC@8I27123A3j7@8G2N227E2bC3j7@8G2N227123C2j73jC@8I2712372jB3jC@8I27123B3j4@8E2h427B2b93j4@8E1k23C2h42342j83jC@8I2702383j5@8F2h427B2b93j5@8F1k23C2h42352j93jC@8I2702393jA@8J3j8@8K27123D3jB@8L3j9@8M27123E3jD@4F2h42Q02e33jE@4H2h42Q02b12o01t3j3@8D3j4@8E3j5@8F3j8@8K3j9@8M3jD@4F3jE@4H5E@2k6802o0~AV@3s@4p001d060verifyUnlocked%2N62b32h@2l6C61@1y1B1u2o0~AV@3t@8N001d070verifyLocked%2N6182b32h@2m6C61@1y1B1u2o0~AV@3u^1223d3q0<constructor>%3Od02P12hA27034d02643j0@8S3r7L3j1@182h41W2613j1@182hA1W262391C3j1@182h41W2323j2@8D2M@2n2613j2@8D2MV262391139103j0@8S2hA2Q12bH1t2N12N25E@2n6303j0@8S2hH2Q02b92N32hA2712637C30@3p0d83j2@8D3i447C33@3r0dA7C30@3q0d97C30@3o0d72o0~@15Fd^1@8O@3u@4R101@2n0V02V0V03@8P0404@8Q0V05@4t0V06@8R0B17@8C@3o018@4z@3p019@52@3q01A@51@3r01B@4p@3s01C@8N@3t0ImageResources.NativeImageData%6C10p002o06C12@1l002o0";