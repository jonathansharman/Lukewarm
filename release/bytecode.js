C$bytecode = "CRAYON@#3F12w#1g1&05LUKEWARM%303y303@Cu303@9g3030&05L U K E W A R M%&05Campaign%&05Dance, Dog%302130313020303@1p303@1P303c303@1L303e3032303W303D303@6S303@4q303@3E303@2Q303@7G303@47303@24&05Time: %&05Health: %&09lib_random_random_float%&040.02%&05Score: %201&05Invalid argument.%3033&05Filter function returned a non-boolean value.%&05Can only get methods from an instance or class reference.%&040.434294481903252%&041%&041.4426950408@296%&09lib_random_random_int%&05First argument must be a positive integer.%&05randomInt requires two integers, where the latter is larger.%&09lib_random_random_bool%&05Abstract method not overridden!%&046.28318530717959%&040%&045%&0418%&0415%&040.5%&046%&042%&043%3035303@36&040.05%&04-2%&05fonts/Lato-Bold.ttf%303m303G303H303X303Z303@13303@163034&09lib_game_getScreenInfo%&09lib_game_clock_tick%&09lib_game_pump_events%&05%&05Title cannot be empty.%&09lib_game_set_title%&05Title must be a string.%&05 must be a number.%&05width%&05height%&05FPS%&05screen %&05Cannot create multiple GameWindows.%&05 must be positive.%&09lib_game_initialize%&09lib_game_initialize_screen%303b&09lib_graphics2d_renderQueueAction%&09lib_graphics2d_renderQueueValidateArgs%&09lib_graphics2d_isOpenGlBased%&09lib_graphics2d_lineToQuad%&09lib_graphics2d_isPlatformUsingTextureAtlas%&09lib_graphics2d_initializeTextureResource%&09lib_graphics2d_initializeTexture%&09lib_graphics2d_addImageRenderEvent%&05Invalid arguments%3038303B303C303F&09lib_graphics2d_flip%&05Image dimensions must be non-zero integers.%&09lib_graphics2d_scale%&05:%&09lib_graphics2dtext_isGlRenderer%&05~0A%&05Expected a FontResource instance%&09lib_graphics2dtext_isResourceAvailable%&05Font resource not found: ~0d%&05~0d%&09lib_graphics2dtext_isSystemFontPresent%&05Font not installed: ~0d%&05 %&05~0D%3036303A&09lib_graphics2dtext_glSetNativeDataIntArray%303@GW&09lib_graphics2dtext_glGenerateAndLoadTexture%&09lib_graphics2dtext_glRenderCharTile%&05Could not render character (%&05)%&09lib_graphics2dtext_getNativeFontUniqueKey%&05|%&09lib_graphics2dtext_createNativeFont%303#2bI&05Error loading font resource.%&040.001%&09lib_graphics2dtext_isDynamicFontLoaded%&09lib_graphics2dtext_glRenderTextSurface%&09lib_graphics2dtext_simpleBlit%3037&09lib_graphics2dtext_renderText%&05Resource ~0d{0}~0d is not included in this sheet.%&05{0}%&05Loading is not finished.%&05Image has already been constructed.%&09lib_imageresources_checkLoaderIsDone%&05Error encountered while loading image.%&09lib_imageresources_yieldRequiredByPlatform%&040.01%&09lib_imageresources_loadAsynchronous%&040.005%&041.2%&09lib_imageresources_loadSynchronous%&05Image load failed%&05Image resource ~0d{0}~0d not found.%&05~0d must be loaded as an ImageSheet.%&05~1U%&05/%&05Resource ~0d{0}~0d does not exist.%&05Resource ~0d{0}~0d is standalone and not included in an image sheet.%&05Image sheet ID must be a string%&05Image sheet with ID of ~0d{0}~0d not found.%&09lib_imageresources_getManifestString%&05,%&05name%&05id%&05chunks%&05tiles%&05Cannot load image from sheet that is not finished loading.%&05Image sheet ~0d%&05~0d does not contain resource: ~0d{0}~0d%&09lib_imageresources_flushImageChanges%&09lib_imageresources_blit%&05Image resource is locked and cannot be used.%&05Image resource must be locked.%&09lib_imageresources_nativeImageDataInit%!1render%!1pumpEvents%!1window%!1eventList%!1i%!1event%!1type%!1length%!1gameState%!1menuChoice%!1env%!1characters%!1draw%!1alignMiddle%!1alignCenter%!1setPos%!1setImage%!1titleImage%!1alignBottom%!1campaignImage%!1alignTop%!1danceDogImage%!1setBgColor%!1campaignDrawing%!1danceDogDrawing%!1update%!1totalTime%!1timeImage%!1health%!1healthImage%!1height%!1pos%!1shoot%!1target%!1outOfBounds%!1bullets%!1source%!1remove%!1score%!1scoreImage%!1clockTick%!1programRunning%!1main%!1condition%!1message%!1assert%!1fail%!1value%!1chr%!1currentTime%!1ord%!1parseFloat%!1parseInt%!1print%!1seconds%!1sleep%!1typeof%!1isString%!1isNumber%!1list%!1fp%!1_LIB_CORE_list_sort_by_key%!1add%!1output%!1t%!1_LIB_CORE_list_map%!1b%!1_LIB_CORE_list_filter%!1getCurrentExecutionToken%!1getExecutionIterationCounter%!1getProjectId%!1args%!1_LIB_CORE_invoke%!1_LIB_CORE_generateException%!1instance%!1getClassFromInstance%!1commonBaseClass%!1isA%!1c%!1filtered%!1getClasses%!1instanceOrClass%!1getMethods%!1ratio%!1arccos%!1arcsin%!1ratio_or_y%!1x%!1arctan%!1theta%!1cos%!1floor%!1sin%!1tan%!1log10%!1ln%!1log2%!1abs%!1a%!1max%!1min%!1minBound%!1maxBound%!1ensureRange%!1num%!1sign%!1randomFloat%!1maxExcl%!1minIncl%!1randomInt%!1msg%!1_randomIntErrorHelper%!1randomBool%!1d%!1n%!1randomChance%!1control%!1controlsTime%!1Agent%!1normalize%!1minus%!1character%!1plus%!1times%!1bulletHeading%!1bulletPos%!1bulletVel%!1vel%!1agent%!1clone%!1getTarget%!1AI%!1direction%!1speed%!1that%!1isZero%!1v%!1radius%!1y%!1p1%!1p2%!1collisionRadiusSquared%!1roots%!1timeStep%!1collidesWith%!1Body%!1lengthSquared%!1trail%!1Bullet%!1initialPos%!1color%!1r%!1g%!1Character%!1black%!1gray%!1silver%!1white%!1red%!1Color%!1alignLeft%!1alignRight%!1image%!1width%!1left%!1top%!1Drawing%!1hAlign%!1vAlign%!1bgColor%!1j%!1body%!1from%!1to%!1Environment%!1setSize%!1setColor%!1getRenderer%!1Font%!1key%!1contains%!1pressed%!1released%!1down%!1up%!1Input%!1equals%!1Player%!1clear%!1Set%!1keys%!1shuffle%!1determinant%!1getQuadraticRoots%!1Util%!1zero%!1k%!1dividedBy%!1l%!1result%!1normalized%!1Vec2%!1Object%!1getTrace%!1Exception%!1cause%!1FatalException%!1m%!1AssertionFailedException%!1DivisionByZeroException%!1IndexOutOfRangeException%!1InvalidArgumentException%!1InvalidAssignmentException%!1InvalidInvocationException%!1InvalidKeyException%!1InvalidOperationException%!1KeyNotFoundException%!1NotImplementedException%!1NullReferenceException%!1UnassignedVariableException%!1UnknownFieldException%!1UnsupportedOperationException%!1Event%!1getScreenInfo%!1e%!1len%!1title%!1setTitle%!1GameWindow%!1_w%!1_h%!1fps%!1screenWidth%!1w%!1screenHeight%!1h%!1KeyEvent%!1MouseEvent%!1MouseClickEvent%!1button%!1MouseMoveEvent%!1MouseScrollEvent%!1amount%!1QuitEvent%!1quitType%!1_renderer%!1_rendererReset%!1ellipse%!1strokeWidth%!1startY%!1endY%!1startX%!1endX%!1line%!1rectangle%!1ax%!1ay%!1bx%!1by%!1cx%!1cy%!1triangle%!1dx%!1dy%!1quad%!1fill%!1Draw%!1imageResource%!1_nativeResource%!1verifyUnlocked%!1atlasNativeResource%!1_width%!1_height%!1resourceFingerprint%!1get%!1textureResource%!1newWidth%!1newHeight%!1atlasDummyWrapper%!1lock%!1img%!1blit%!1unlock%!1_x%!1_y%!1tfw%!1tfh%!1texture%!1textureCoords%!1load%!1walker%!1_nextPowerOf2%!1alpha%!1drawWithAlpha%!1sx%!1sy%!1drawRegion%!1drawStretched%!1sh%!1sw%!1th%!1tw%!1tx%!1ty%!1drawRegionStretched%!1drawRegionStretchedWithAlpha%!1drawRotated%!1drawRotatedWithAlpha%!1drawWithOptions%!1res%!1newRes%!1_createResCopy%!1flip%!1ver%!1hor%!1scale%!1GraphicsTexture%!1_graphicsTextureResource%!1ref%!1GraphicsTextureResource%!1FontNotFoundException%!1green%!1blue%!1size%!1style%!1setStyle%!1_sourceType%!1_source%!1join%!1text%!1textureKey%!1FontRenderer%!1font%!1_native%!1_settingsKey%!1_glRenderer%!1sourceType%!1_getKey%!1_get%!1path%!1fromResource%!1fromDisk%!1name%!1fromSystem%!1isSystemFontPresent%!1getDefaultSerifFont%!1getDefaultSansSerifFont%!1getDefaultMonospaceFont%!1FontResource%!1sourceId%!1renderer%!1nativeFont%!1charIds%!1charId%!1tile%!1newTiles%!1xs%!1leftMargin%!1ys%!1tileList%!1effectiveWidth%!1lastTile%!1sheets%!1sheet%!1tiles%!1textSurfaceWithNativeData%!1sizeOut%!1renderText%!1consolidate%!1GLRenderer%!1sheetByCharId%!1tileByCharId%!1spaceWidth%!1sort%!1rows%!1row%!1tileIndex%!1tilesLength%!1rowCount%!1makeSheets%!1sortByWidthKeyFunction%!1GLTextureSheet%!1tilesByCharId%!1concat%!1sheetX%!1sheetY%!1currentTextureId%!1GLTile%!1lastUsed%!1id%!1getUniqueKey%!1NativeFont%!1status%!1_refreshGlRenderer%!1TextSurface%!1_isGl%!1fontRenderer%!1resourcePath%!1getImage%!1isDone%!1getProgress%!1_weight%!1progress%!1getFiles%!1AggregatedImageSheet%!1_sheetsById%!1_orderedSheets%!1_ids%!1_isLoaded%!1_id%!1ImageNotFoundException%!1replace%!1template%!1SheetNotFoundException%!1LoadFailedException%!1filename%!1loadFromResourcesAsync%!1loadFromResources%!1isGen%!1data%!1nativeImage%!1isAsync%!1loader%!1_nativeImage%!1delay%!1reverse%!1statusOut%!1_loadImpl%!1info%!1getGenName%!1ImageLoader%!1_executionIterationCount%!1_isDoneChecksOnThisFrame%!1_isDone%!1_output%!1getWidth%!1getHeight%!1ImageResource%!1init%!1trim%!1nkey%!1sheetOnly%!1getFileInfo%!1getSheetInfo%!1resourceInfo%!1sheetInfo%!1split%!1manifest%!1parts%!1genFilename%!1activeSheetId%!1activeChunkId%!1bytes%!1files%!1values%!1ensureInitialized%!1ImageResourceManifest%!1allowLists%!1_initImpl%!1completed%!1getStatus%!1chunkMetadata%!1chunkId%!1chunk%!1tilesByName%!1chunks%!1_turnTilesIntoSheet%!1ImageSheet%!1_info%!1_loader%!1_name%!1_chunks%!1lookup%!1genName%!1out%!1ImageSheetLoaderAsync%!1inProgress%!1updateResourceFingerprint%!1other%!1targetLeft%!1targetTop%!1targetBottom%!1targetRight%!1diff%!1sourceRight%!1sourceLeft%!1sourceBottom%!1sourceTop%!1verifyLocked%!1NativeImageData%!1revisionId%!1resourceId%!1_locked%!1instruction%5v0D0q5v1EUq5v2EEq5v3E8q5v4GDq5v5GBq5v6HEq5v7HWq5v8HVq5v9HCq5vAIHq5vBIZq5vCIYq5vDIFq5vEJHq5vFJZq5vGJYq5vHJFq5vIKEq5vJKCq5vKMIq5vLMGq5vMN8q5vNN8q5vOOEq5vPOVq5vQOCq5vRPFq5vSPEq5vTQBq5vUQ9q5vVQEq5vWQIq5vXQRq5vYQGq5vZQEq5vaRBq5vbRLq5vcRKq5vdR9q5veS7q5vfSCq5vgSLq5vhSIq5viS7q5vjTLq5vkTJq5vlQaq5vmQbq5vnQbq5voQaq5vqXKq5vrXJq5vsX6q5vtZFq5vuZDq5vvcAq5vwc2q5vxeMq5vyeLq5vzehq5v@10eyq5v@11exq5v@12e8q5v@13f7q5v@14f5q5v@15f5q5v@16f7q5v@17hMq5v@18hLq5v@19hjq5v@1Ah@10q5v@1Bhzq5v@1Ch8q5v@1Di7q5v@1Ei5q5v@1Fi5q5v@1Gi7q5v@1Hk4q5v@1IkIq5v@1JkFq5v@1Kk4q5v@1LmMq5v@1MmLq5v@1Nmkq5v@1Om@11q5v@1Pm@10q5v@1Qm8q5v@1RnDq5v@1Sn5q5v@1TqJq5v@1UqHq5v@1VrHq5v@1WrBq5v@1Xs7q5v@1YtZq5v@1ZtSq5v@1atoq5v@1btjq5v@1ctEq5v@1duVq5v@1euSq5v@1fukq5v@1gufq5v@1huEq5v@1ivVq5v@1jvSq5v@1kvkq5v@1lvfq5v@1mvEq5v@1nwVq5v@1owSq5v@1pwkq5v@1qwfq5v@1rwEq5v@1sxVq5v@1txSq5v@1uxkq5v@1vxfq5v@1wxEq5v@1xt8q5v@1ysMq5v@1zz7q5v@20@12Jq5v@21@12Hq5v@22@13Hq5v@23@13Bq5v@24@147q5v@25@14oq5v@26@14hq5v@27@14@13q5v@28@14yq5v@29@14Tq5v@2A@14Oq5v@2B@14Mq5v@2C@15Fq5v@2D@15Dq5v@2E@167q5v@2F@1APq5v@2G@1AOq5v@2H@1C8q5v@2I@1DFq5v@2J@1DEq5v@2K@1EDq5v@2L@1ECq5v@2M@1FHq5v@2N@1GHq5v@2O@1HAq5v@2P@1JQq5v@2Q@1KFq5v@2R@1KEq5v@2S@1LDq5v@2T@1LCq5v@2U@1MHq5v@2V@1NHq5v@2W@1JKq5v@2X@1PQq5v@2Y@1QFq5v@2Z@1QEq5v@2a@1RDq5v@2b@1RCq5v@2c@1SHq5v@2d@1TEq5v@2e@1PKq5v@2f@1VCq5v@2g@1V4q5v@2h@1X6q5v@2i@1Xhq5v@2j@1Xgq5v@2k@1XWq5v@2l@1Y6q5v@2m@1a6q5v@2n@1ahq5v@2o@1agq5v@2p@1aWq5v@2q@1b6q5v@2r@1e4q5v@2s@1eOq5v@2t@1f4q5v@2u@1fOq5v@2v@1h4q5v@2w@1k4q5v@2x@1kCq5v@2y@1n4q5v@2z@1nEq5v@30@1qGq5v@31@1qYq5v@32@1quq5v@33@1qxq5v@34@1qtq5v@35@1qhq5v@36@1qXq5v@37@1qEq5v@38@1r8q5v@39@1sFq5v@3A@1sEq5v@3B@1tDq5v@3C@1tCq5v@3D@1uTq5v@3E@1uSq5v@3F@1uGq5v@3G@1vAq5v@3H@1y8q5v@3I@1yBq5v@3J@1yMq5v@3K@1yWq5v@3L@1yUq5v@3M@1y8q5v@3N@1zJq5v@3O@1zZq5v@3P@1zmq5v@3Q@1zpq5v@3R@1z@11q5v@3S@1z@10q5v@3T@1z@13q5v@3U@1zkq5v@3V@1zYq5v@3W@1zHq5v@3X@209q5v@3Y@21Gq5v@3Z@21Fq5v@3a@22Eq5v@3b@22Hq5v@3c@22Qq5v@3d@22Dq5v@3e@23Uq5v@3f@23Tq5v@3g@23Hq5v@3h@24Bq5v@3i@264q5v@3j@29Dq5v@3k@29Gq5v@3l@29Rq5v@3m@29bq5v@3n@29Zq5v@3o@29Dq5v@3p@2A7q5v@3q@2AAq5v@3r@2AMq5v@3s@2ALq5v@3t@2AOq5v@3v@2BXq5v@3w@2BWq5v@3x@2Bzq5v@3y@2Byq5v@3z@2BBq5v@40@29Bq5v@41@2DQq5v@42@2DVq5v@43@2DTq5v@44@2D8q5v@45@2E5q5v@46@2EOq5v@47@2ESq5v@48@2EEq5v@49@2GQq5v@4A@2GVq5v@4B@2GTq5v@4C@2G8q5v@4D@2H5q5v@4E@2HOq5v@4F@2HJq5v@4G@2HZq5v@4H@2HEq5v@4I@2JQq5v@4J@2JVq5v@4K@2JTq5v@4L@2J8q5v@4M@2K5q5v@4N@2KOq5v@4O@2KJq5v@4P@2KZq5v@4Q@2KEq5v@4R@2MQq5v@4S@2MVq5v@4T@2MTq5v@4U@2M8q5v@4V@2N5q5v@4W@2NOq5v@4X@2NJq5v@4Y@2Ndq5v@4Z@2NEq5v@4a@2R4q5v@4b@2REq5v@4c@2UDq5v@4d@2UBq5v@4e@2UGq5v@4f@2UKq5v@4g@2UNq5v@4h@2UVq5v@4i@2UIq5v@4j@2UGq5v@4k@2V9q5v@4l@2VPq5v@4m@2VSq5v@4n@2Vbq5v@4o@2Vaq5v@4p@2VOq5v@4q@2V9q5v@4r@2WAq5v@4s@2WDq5v@4t@2WOq5v@4u@2WYq5v@4v@2WWq5v@4w@2Waq5v@4x@2Wdq5v@4y@2Wgq5v@4z@2Wpq5v@50@2Woq5v@51@2Wrq5v@52@2W@12q5v@53@2W@15q5v@54@2W@1Hq5v@55@2W@1Gq5v@56@2Wzq5v@57@2WAq5v@58@2X9q5v@59@2X7q5v@5A@2X7q5v@5B@2X9q5v@5C@2Z6q5v@5D@2Z9q5v@5E@2ZPq5v@5F@2ZOq5v@5G@2a8q5v@5H@2a6q5v@5I@2a6q5v@5J@2a8q5v@5K@2Ugq5v@5L@2Ueq5v@5M@2Ueq5v@5N@2Ugq5v@5P@2f4q5v@5Q@2fCq5v@5R@2iGq5v@5S@2iYq5v@5T@2iuq5v@5U@2ixq5v@5V@2itq5v@5W@2ihq5v@5X@2iXq5v@5Y@2iEq5v@5Z@2j8q5v@5a@2kFq5v@5b@2kEq5v@5c@2lDq5v@5d@2lCq5v@5e@2mTq5v@5f@2mSq5v@5g@2mGq5v@5h@2nAq5v@5i@2qHq5v@5j@2qYq5v@5k@2qkq5v@5l@2qiq5v@5m@2qXq5v@5n@2qFq5v@5o@2r8q5v@5p@2sFq5v@5q@2sEq5v@5r@2tDq5v@5s@2tGq5v@5t@2tPq5v@5u@2tCq5v@5v@2uTq5v@5w@2uSq5v@5x@2uGq5v@5y@2vAq5v@5z@2y8q5v@60@2yBq5v@61@2yMq5v@62@2yWq5v@63@2yUq5v@64@2y8q5v@65@2zJq5v@66@2zZq5v@67@2zmq5v@68@2zpq5v@69@2z@11q5v@6A@2z@10q5v@6B@2z@13q5v@6C@2zkq5v@6D@2zYq5v@6E@2zHq5v@6F@309q5v@6G@31Gq5v@6H@31Fq5v@6I@32Eq5v@6J@32Hq5v@6K@32Qq5v@6L@32aq5v@6M@32kq5v@6N@32Yq5v@6O@32Dq5v@6P@33Uq5v@6Q@33Tq5v@6R@33Hq5v@6S@34Bq5v@6T@364q5v@6U@392q5v@6V@39Iq5v@6XD0q5v@6YG425v@6ZGf25v@6aGV25v@6bHT25v@6cHe25v@6dHn25v@6eHF25v@6fH825v@6gK425v@6hLT25v@6iLa25v@6jLj25v@6kLF25v@6lL825v@6mO425v@6nPQ25v@6oPF25v@6pP825v@6qS425v@6rTF25v@6sT825v@6tW425v@6uXQ25v@6vXF25v@6wX825v@6xa425v@6ybX25v@6zbF25v@70b825v@71e425v@72fV25v@73fF25v@74f825v@75i425v@76jS25v@77jF25v@78j825v@79m425v@7AoQ25v@7BoC25v@7Co@1925v@7DpC25v@7EpN25v@7FpK25v@7GpQ25v@7HHn25v@7InJ25v@7JqS25v@7KqF25v@7Lq825v@7Mt425v@7NuS25v@7OuF25v@7Pu825v@7Qx425v@7RyT25v@7SyF25v@7Ty825v@7U@11425v@7V@12T25v@7W@12F25v@7X@12825v@7Y@15425v@7Z@16C25v@7a@16G25v@7b@16Q25v@7c@16O25v@7d@16C25v@7e@17S25v@7f@17r25v@7g@17v25v@7h@17q25v@7i@17C25v@7j@15425v@7k@1B425v@7l@1CH25v@7m@1CF25v@7p@1DH25v@7q@1DH25v@7r@1D825v@7s@1EC25v@7t@1EN25v@7u@1EQ25v@7v@1EP25v@7w@1EM25v@81@1GF25v@82@1G825v@83@1J425v@84@1KH25v@85@1KF25v@88@1LH25v@89@1LH25v@8A@1L825v@8B@1MG25v@8C@1MJ25v@8D@1MI25v@8E@1ME25v@8F@1NV25v@8G@1NH25v@8H@1NG25v@8I@1NG25v@8JLT25v@8K@1OQ25v@8LLj25v@8M@1OP25v@8N@1QG25v@8O@1QG25v@8P@1RG25v@8Q@1RR25v@8R@1RQ25v@8W@1UF25v@8X@1U825v@8Y@1X425v@8Z@1YF25v@8a@1Y825v@8b@1b425v@8c@1cF25v@8d@1c825v@8e@1f425v@8f@1gF25v@8g@1g825v@8h@1k425v@8i@1oF25v@8j@1oI25v@8k@1oH25v@8l@1o825v@8mO435v@8nPG35v@8oP835v@8pQ@1435v@8qQp35v@8rQf35v@8sR@1P35v@8tR@1035v@8uRq35v@8vS@1O35v@8wS@1035v@8xSq35v@8yT@1R35v@8zT@1235v@90Ts35v@91U@1P35v@92U@1035v@93Uq35v@94V@1T35v@95V@1235v@96Vs35v@97W@1T35v@98W@1235v@99Ws35v@9AX@1F35v@9BXv35v@9CXl35v@9DY@1I35v@9EYx35v@9FYn35v@9GZ@1L35v@9HZy35v@9IZo35v@9Ja@1V35v@9Ka@1335v@9Lat35v@9Mb@1J35v@9Nbx35v@9Obn35v@9Pc@1Z35v@9Qc@1535v@9Rcv35v@9Sdf35v@9TdV35v@9UdL35v@9VO435v@9W4845v@9X6g45v@9Y6J45v@9Z6C45v@9a9845v@9b9k45v@9c9S45v@9dAL45v@9eAJ45v@9fBG45v@9gBZ45v@9hBW45v@9iBG45v@9jCR45v@9kCP45v@9nDP45v@9oDP45v@9pDG45v@9qEO45v@9rEU45v@9sET45v@9tEO45v@9uFO45v@9vFb45v@9wFa45v@A1IN45v@A2IG45v@A3KJ45v@A4KC45v@A5N845v@A6OW45v@A7OV45v@A8OC45v@A9Sq45v@AASR45v@ABSK45v@ACUy45v@ADUU45v@AEUK45v@AFN845v@AG5465v@AH7T65v@AI7F65v@AJ7865v@AKA465v@ALCT65v@AMCF65v@ANC865v@AOF465v@APFa65v@AQFW65v@ARGT65v@ASGf65v@ATGF65v@AUG865v@AVJ465v@AWKQ65v@AXKF65v@AYK865v@AZN465v@AaOS65v@AbOF65v@AcO865v@AdR465v@AeSQ65v@AfSF65v@AgS865v@AhV465v@AiWQ65v@AjWF65v@AkW865v@Alc465v@AmdP65v@AndW65v@AodF65v@Apd865v@Aqf465v@ArgP65v@AsgW65v@AtgF65v@Aug865v@Avi465v@AwjP65v@AxjW65v@AyjF65v@Azj865v@B0o465v@B1pQ65v@B2pF65v@B3p865v@B4s465v@B5tQ65v@B6tT65v@B7tF65v@B8t865v@B9w465v@BAxQ65v@BBxT65v@BCxF65v@BDx865v@BE@10465v@BF@11Y65v@BG@11f65v@BH@11p65v@BI@11F65v@BJ@11865v@BK@14465v@BL@15R65v@BM@15F65v@BN@15865v@BO3485v@BP4F85v@BQ4885v@BR8485v@BS8g85v@BT8W85v@BU9G85v@BV9R85v@BW9O85v@BX9G85v@BYAd85v@BZAg85v@BaAF85v@BbAF85v@BcBm85v@BdBl85v@BfCd85v@BgCm85v@BhCF85v@BiCF85v@BjDm85v@BkDl85v@Bl9885v@BmG485v@BnHm85v@BoHI85v@BpH885v@BqG485v@BrK485v@BsNF85v@BtN885v@BuV485v@BvVX85v@BwVT85v@BxWF85v@ByWj85v@BzWh85v@C0Wn85v@C1Wl85v@C2W885v@C39105v@C4AM05v@C5AC05v@C6A205v@C79105v@C8E105v@C9FM05v@CAFC05v@CBF205v@CCE105v@CD4105v@CE5D05v@CF5B05v@CH1005v@CIE155v@CJFO55v@CKFT55v@CLFR55v@CMF655v@CNGK55v@COGs55v@CPGY55v@CQGI55v@CRIO55v@CSIT55v@CTIR55v@CUI655v@CVJG55v@CWJT55v@CXJR55v@CYJG55v@CZJZ55v@CbJf55v@CcJE55v@CdLO55v@CeLT55v@CfLR55v@CgL655v@ChMX55v@CiMg55v@CjMp55v@CkMf55v@ClM@1455v@CmMH55v@CnNF55v@CoNO55v@CpNY55v@CqNs55v@CrNr55v@CsNX55v@CtND55v@CuOF55v@CvOZ55v@CwOY55v@CxOD55v@CyP355v@CzPB55v@D0PZ55v@D1Pk55v@D2Pv55v@D3PS55v@D4PN55v@D5S255v@D6Sa55v@D7SZ55v@D8S@1055v@D9Sz55v@DASM55v@DBS@1N55v@DCS@1M55v@DDSG55v@DEE155v@DFV155v@DGVY55v@DHVR55v@DIX155v@DJYB55v@DKY955v@DLYE55v@DMYI55v@DNYQ55v@DOYb55v@DPYG55v@DQYE55v@DRZ755v@DSZF55v@DTZR55v@DUZQ55v@DVZT55v@DWZm55v@DXZ755v@DYaB55v@DZaJ55v@DaaV55v@DbaU55v@DcaX55v@Ddah55v@Dea455v@DfYm55v@DgYk55v@DhYk55v@DiYm55v@DkdZ55v@DldY55v@Dmd@1155v@Dnd@1055v@DodD55v@Dpd255v@DqC155v@DrCP55v@DsCK55v@Dt9J55v@Du9r55v@Dv9X55v@Dw9155v@Dy8055v@DzF195v@E0H695v@E1HA95v@E2HL95v@E3HK95v@E4H495v@E5I695v@E6IE95v@E7I695v@E8JA95v@E9J395v@EAMS95v@EBMg95v@ECMk95v@EDMe95v@EEMw95v@EFMt95v@EGMP95v@EHP795v@EIP595v@EJQ795v@EKQB95v@ELQ595v@EMR695v@ENR795v@EORD95v@EPRA95v@EQRH95v@ERRI95v@ESRO95v@ETRL95v@EURF95v@EVR495v@EWS695v@EXSB95v@EYSD95v@EZSI95v@EaSJ95v@EbSG95v@EcSO95v@EdSP95v@EeSU95v@EfSW95v@EgSS95v@EhSM95v@EiSb95v@EjSd95v@EkSi95v@ElSj95v@EmSg95v@EnSZ95v@EoSo95v@EpSp95v@EqSu95v@ErSw95v@EsSs95v@EtSm95v@EuS895v@EvS495v@EwT695v@ExT895v@EyTE95v@EzTB95v@F0TI95v@F1TK95v@F2TQ95v@F3TN95v@F4TG95v@F5TU95v@F6TY95v@F7Ta95v@F8TW95v@F9Tf95v@FATh95v@FBTd95v@FCTS95v@FDTm95v@FETo95v@FFTu95v@FGTr95v@FHTk95v@FITy95v@FJT@1095v@FKT@1695v@FLT@1395v@FMTw95v@FNT@1A95v@FOT@1E95v@FPT@1G95v@FQT@1C95v@FRT@1L95v@FST@1N95v@FTT@1J95v@FUT@1895v@FVT@1S95v@FWT@1Q95v@FXT495v@FYWX95v@FZWa95v@FaWd95v@FbWW95v@FcW895v@FdX695v@FeXB95v@FfXM95v@FgXJ95v@FhX695v@FiYA95v@FjY395v@FlZD95v@FmZI95v@FnZT95v@FoZQ95v@FpZD95v@FqaA95v@FraH95v@FsaN95v@FtaM95v@FuaE95v@FvaQ95v@FwaT95v@FxaZ95v@FyaY95v@Fzaf95v@G0ac95v@G1a395v@G3cB95v@G4cI95v@G5cO95v@G6cN95v@G7cF95v@G8cR95v@G9cU95v@GAca95v@GBcZ95v@GCcg95v@GDcd95v@GEcq95v@GFcu95v@GGc@1195v@GHc@1795v@GIc@1695v@GJcy95v@GKc@1A95v@GLc@1D95v@GMc@1J95v@GNc@1I95v@GOc@1P95v@GPc@1M95v@GQc395v@GRF195v@GS6195v@GT7D95v@GU7B95v@GV8D95v@GW8B95v@GX9G95v@GY9E95v@Ga1095v@GbJ1A5v@GcKDA5v@GdKRA5v@GeKgA5v@GfKfA5v@GgKQA5v@GhKBA5v@GiJ1A5v@GjN1A5v@GkOAA5v@GlOPA5v@GmOeA5v@GnOdA5v@GoOOA5v@GpO8A5v@GqP6A5v@GrPLA5v@GsPKA5v@GtPpA5v@GuPuA5v@GvP@19A5v@GwP@18A5v@GxP@1TA5v@GyPsA5v@GzP6A5v@H0QBA5v@H1Q9A5v@H2TGA5v@H3TOA5v@H4TTA5v@H5TRA5v@H6TFA5v@H7UGA5v@H8UOA5v@H9UTA5v@HAURA5v@HBUFA5v@HCVGA5v@HDVLA5v@HEVQA5v@HFVOA5v@HGVFA5v@HHWGA5v@HIWLA5v@HJWQA5v@HKWOA5v@HLWFA5v@HMX5A5v@HNT3A5v@HOwgC5v@HPxGC5v@HQbGA5v@HRbOA5v@HSbTA5v@HTbRA5v@HUbhA5v@HVbfA5v@HWbFA5v@HXcGA5v@HYcOA5v@HZcTA5v@HacRA5v@HbchA5v@HccfA5v@HdcFA5v@Hed5A5v@HfdBA5v@Hgd9A5v@Hhe5A5v@HieBA5v@Hje9A5v@Hkf5A5v@Hlf8A5v@HmfBA5v@Hnv@19C5v@Hob3A5v@HpN1A5v@HqE1A5v@HrEcA5v@HsEhA5v@HtEmA5v@HuEXA5v@HvFGA5v@HwFEA5v@HxGKA5v@HyGTA5v@HzGIA5v@I1A0A5v@I2F1a5v@I3GDa5v@I4GRa5v@I5Gga5v@I6Gfa5v@I7GQa5v@I8GBa5v@I9J6a5v@IAJEa5v@IBJJa5v@ICJHa5v@IDJ6a5v@IEK3a5v@IFKGa5v@IGKEa5v@IILDa5v@IJLLa5v@IKLQa5v@ILLYa5v@IMLWa5v@INLOa5v@IOLDa5v@IPM3a5v@IQMGa5v@IRMOa5v@ISMMa5v@ITMEa5v@IUO6a5v@IVOEa5v@IWOJa5v@IXOHa5v@IYO6a5v@IZP3a5v@IaPGa5v@IbPEa5v@IdQDa5v@IeQLa5v@IfQQa5v@IgQYa5v@IhQWa5v@IiQOa5v@IjQDa5v@IkR3a5v@IlRGa5v@ImROa5v@InRMa5v@IoREa5v@IpU2a5v@IqULa5v@IrUKa5v@IsF1a5v@ItX1a5v@IuYAa5v@IvYXa5v@IwYAa5v@IxYna5v@IzY@11a5v@J0Y8a5v@J1wgC5v@J2xGC5v@J3aGa5v@J4aOa5v@J5aTa5v@J6aRa5v@J7aha5v@J8afa5v@J9aFa5v@JAbGa5v@JBbOa5v@JCbTa5v@JDbRa5v@JEbha5v@JFbfa5v@JGbFa5v@JHc5a5v@JIcBa5v@JJc9a5v@JKd5a5v@JLdBa5v@JMd9a5v@JNe5a5v@JOeAa5v@JPeEa5v@JQeJa5v@JReNa5v@JSeSa5v@JTv@19C5v@JUa3a5v@JVX1a5v@JWB1a5v@JXBWa5v@JYBka5v@JZBoa5v@JaBRa5v@JbCFa5v@JcCDa5v@Je70a5v@JfE8b5v@JgERb5v@JhENb5v@JiEpb5v@JjEyb5v@JkEjb5v@JlEYb5v@JmF8b5v@JnFQb5v@JoFMb5v@JpFob5v@JqF@13b5v@JrFib5v@JsFXb5v@JtG8b5v@JuGSb5v@JvGOb5v@JwGqb5v@JxG@15b5v@JyGkb5v@JzGZb5v@K0H8b5v@K1HRb5v@K2HNb5v@K3Hpb5v@K4H@14b5v@K5Hjb5v@K6HYb5v@K7I8b5v@K8IPb5v@K9ILb5v@KAInb5v@KBIyb5v@KCIhb5v@KDIWb5v@KE71b5v@KF7Qb5v@KG7Mb5v@KH8Bb5v@KI89b5v@KJ9Bb5v@KK99b5v@KLABb5v@KMA9b5v@KNBBb5v@KOB9b5v@KQ10b5v@KRC1c5v@KSDBc5v@KTD9c5v@KUEBc5v@KVE9c5v@KWF9c5v@KXF2c5v@KYI1c5v@KZJGc5v@KaJEc5v@KbK9c5v@KcK2c5v@KdM1c5v@KeNGc5v@KfNEc5v@KgO9c5v@KhO2c5v@KiQ1c5v@KjRGc5v@KkREc5v@KlS9c5v@KmS2c5v@KnV1c5v@KoWGc5v@KpWEc5v@KqX9c5v@KrX2c5v@KsZ1c5v@KtaGc5v@KuaEc5v@Kvb9c5v@Kwb2c5v@Kxd1c5v@KyeGc5v@KzeEc5v@L0f9c5v@L1f2c5v@L2i1c5v@L3jHc5v@L4jFc5v@L5k9c5v@L6k2c5v@L7n1c5v@L8oFc5v@L9oDc5v@LAp9c5v@LBp2c5v@LCs1c5v@LDt9c5v@LEtTc5v@LFtdc5v@LGtmc5v@LHtkc5v@LItSc5v@LJtGc5v@LKt7c5v@LLu8c5v@LMuSc5v@LNucc5v@LOumc5v@LPukc5v@LQuRc5v@LRuFc5v@LSu6c5v@LTv6c5v@LUvMc5v@LVvJc5v@LWv6c5v@LX@1wgC5v@LY@1xGC5v@LZx6c5v@Lay6c5v@Lbz6c5v@LczGc5v@Ld@106c5v@Le@10Gc5v@Lf@116c5v@Lg@11Ic5v@Lh@11Mc5v@Li@11Yc5v@Lj@11cc5v@Lk@11oc5v@Ll@11sc5v@Lm@11@14c5v@Lnx4c5v@Lo@146c5v@Lp@14Kc5v@Lq@14Hc5v@Lr@146c5v@Ls@153c5v@Lt@15Jc5v@Lu@15Pc5v@Lv@15Ic5v@Lws1c5v@Lz40c5v@M0G1d5v@M1IBd5v@M2I9d5v@M3IEd5v@M4IId5v@M5IXd5v@M6IGd5v@M7IEd5v@M8J3d5v@M9JJd5v@MAJId5v@MBJTd5v@MCJSd5v@MDIid5v@MEIgd5v@MFIgd5v@MGIid5v@MINBd5v@MJN9d5v@MKNEd5v@MLNId5v@MMNUd5v@MNNGd5v@MONEd5v@MPO3d5v@MQOGd5v@MROFd5v@MSOQd5v@MTOPd5v@MURCd5v@MVRAd5v@MWRFd5v@MXRJd5v@MYRYd5v@MZRHd5v@MaRFd5v@MbS8d5v@McSLd5v@MdSKd5v@MeSbd5v@MfSrd5v@MgSqd5v@MhSvd5v@MiSad5v@MjS8d5v@MkT5d5v@MlTPd5v@MmTOd5v@MnU7d5v@MoU5d5v@MpU5d5v@MqU7d5v@MrW7d5v@MsWNd5v@MtWMd5v@MvWPd5v@MwW5d5v@MxW5d5v@MyW5d5v@MzX9d5v@N0XPd5v@N1XOd5v@N2XRd5v@N3Xcd5v@N4XZd5v@N5X9d5v@N6Y6d5v@N7YTd5v@N8YSd5v@N9a5d5v@NARjd5v@NBRhd5v@NCRhd5v@NDRjd5v@NFNfd5v@NGNdd5v@NHNdd5v@NINfd5v@NKg6d5v@NLgLd5v@NMgVd5v@NNgTd5v@NOg6d5v@NPhCd5v@NQhAd5v@NRhFd5v@NShJd5v@NThYd5v@NUhHd5v@NVhFd5v@NWi8d5v@NXiOd5v@NYiNd5v@NZiQd5v@Naijd5v@Nbi8d5v@Ncj9d5v@NdjPd5v@NejOd5v@NfjRd5v@Ngjcd5v@Nhj9d5v@NikMd5v@NjkKd5v@Nlm6d5v@NmmNd5v@NnmKd5v@NomKd5v@NpnAd5v@NqnQd5v@NrnOd5v@NsnAd5v@NtoNd5v@NuoLd5v@Nvhjd5v@Nwhhd5v@Nxhhd5v@Nyhjd5v@O1uJd5v@O2uHd5v@O3w2d5v@O4wKd5v@O5wHd5v@O6wHd5v@O7G1d5v@O8z1d5v@O9@10Nd5v@OA@10Md5v@OB@13Bd5v@OC@139d5v@OD@13Ed5v@OE@13Id5v@OF@13Ud5v@OG@13Gd5v@OH@13Ed5v@OI@143d5v@OJ@14Gd5v@OK@14Fd5v@OL@14Nd5v@OM@13fd5v@ON@13dd5v@OO@13dd5v@OP@13fd5v@OR@18Bd5v@OS@189d5v@OT@18Ed5v@OU@18Id5v@OV@18Xd5v@OW@18Gd5v@OX@18Ed5v@OY@193d5v@OZ@19Jd5v@Oa@19Id5v@Ob@19Qd5v@Oc@18id5v@Od@18gd5v@Oe@18gd5v@Of@18id5v@Ohz1d5v@Oi@1E1d5v@Oj@1F9d5v@Ok@1FDd5v@Ol@1FHd5v@Om@1FMd5v@On@1FTd5v@Oo@1FXd5v@Op@1FRd5v@Oq@1FKd5v@Or@1G3d5v@Os@1G6d5v@Ot@1GAd5v@Ou@1GEd5v@Ov@1GJd5v@Ow@1GRd5v@Ox@1GXd5v@Oy@1Gbd5v@Oz@1GVd5v@P0@1GPd5v@P1@1GHd5v@P2@1H3d5v@P3@1H6d5v@P4@1HAd5v@P5@1HEd5v@P6@1HJd5v@P7@1HQd5v@P8@1HUd5v@P9@1HOd5v@PA@1HHd5v@PB@1I3d5v@PC@1I6d5v@PD@1IAd5v@PE@1IEd5v@PF@1IJd5v@PG@1IRd5v@PH@1IXd5v@PI@1Ibd5v@PJ@1IVd5v@PK@1IPd5v@PL@1IHd5v@PM@1F2d5v@PN@1M1d5v@PO@1NEd5v@PP@1NOd5v@PQ@1NCd5v@PR@1OEd5v@PS@1ONd5v@PT@1OMd5v@PU@1Ocd5v@PV@1Old5v@PW@1Okd5v@PX@1OCd5v@PY@1P2d5v@PZ@1PUd5v@Pa@1Pad5v@Pb@1Pld5v@Pc@1PNd5v@Pd@1PId5v@Pe@1M1d5v@PfD1d5v@Ph70d5v@Pj4me5v@Pk4le5v@Pl4@1Ke5v@Pm4@1We5v@Pn4@1Ve5v@Po4@1ne5v@Pp4@1me5v@Pq4Ee5v@Pr5me5v@Ps5le5v@Pt5@1Ke5v@Pu5@1We5v@Pv5@1Ve5v@Pw5@1te5v@Px5@1se5v@Py5Ee5v@Pz6me5v@Q06le5v@Q16@1Ke5v@Q26@1We5v@Q36@1Ve5v@Q46@1ne5v@Q56@1me5v@Q66Ee5v@Q77ke5v@Q87je5v@Q97@1Ie5v@QA7@1Ue5v@QB7@1Te5v@QC7@1ne5v@QD7@1me5v@QE7Ee5v@QF8le5v@QG8ke5v@QH8@1Je5v@QI8@1Ve5v@QJ8@1Ue5v@QK8@1oe5v@QL8@1ne5v@QM8Ee5v@QN9ne5v@QO9me5v@QP9@1Le5v@QQ9@1Xe5v@QR9@1We5v@QS9@1se5v@QT9@1re5v@QU9Ee5v@QVAme5v@QWAle5v@QXA@1Ke5v@QYA@1We5v@QZA@1Ve5v@QaA@1pe5v@QbA@1oe5v@QcAEe5v@Qg30e5v@Qi4Tp5v@Qj4Ep5v@Qk5Wp5v@Ql5Ep5v@Qm6Xp5v@Qn6Ep5v@Qo7Qp5v@Qp7Ep5v@Qq8Rp5v@Qr8Ep5v@Qs9Yp5v@Qt9Ep5v@QvC8p5v@QwDQp5v@QxDKp5v@QyERp5v@QzELp5v@R0FKp5v@R1FIp5v@R2GLp5v@R3GJp5v@R4IBp5v@R5I9p5v@R6IEp5v@R7IIp5v@R8IRp5v@R9IGp5v@RAIEp5v@RBJBp5v@RCJLp5v@RDJKp5v@REJ9p5v@RFK7p5v@RGKCp5v@RHKLp5v@RIKIp5v@RJK7p5v@RKL4p5v@RLLNp5v@RMLSp5v@RNLMp5v@ROM4p5v@RPMQp5v@RQMVp5v@RRMPp5v@RSN4p5v@RTNLp5v@RUNKp5v@RWOEp5v@RXOJp5v@RYOSp5v@RZOPp5v@RaOEp5v@RbP4p5v@RcPQp5v@RdPVp5v@RePPp5v@RfQ4p5v@RgQRp5v@RhQWp5v@RiQQp5v@RjR4p5v@RkRLp5v@RlRKp5v@RnSEp5v@RoSJp5v@RpSSp5v@RqSPp5v@RrSEp5v@RsTMp5v@RtTKp5v@RuU4p5v@RvULp5v@RwUKp5v@RyVEp5v@RzVJp5v@S0VSp5v@S1VPp5v@S2VEp5v@S3WNp5v@S4WLp5v@S5X4p5v@S6XLp5v@S7XKp5v@S9YEp5v@SAYJp5v@SBYSp5v@SCYPp5v@SDYEp5v@SEZ4p5v@SFZNp5v@SGZSp5v@SHZLp5v@SIa4p5v@SJaNp5v@SKaSp5v@SLaLp5v@SMb4p5v@SNbLp5v@SObKp5v@SQd6p5v@SRd4p5v@SSd4p5v@STd6p5v@SVC8p5v@SWi8p5v@SXj9p5v@SYjap5v@SZjZp5v@Saj2p5v@Sbl8p5v@Scm9p5v@Sdmbp5v@Semap5v@Sfm2p5v@Sgo8p5v@Shp9p5v@SipXp5v@SjpWp5v@Skp2p5v@Slr8p5v@SmsAp5v@SnsYp5v@SosXp5v@Sps9p5v@Sqs2p5v@St30p5v@Su61r5v@Sv76r5v@Sw7Mr5v@Sx7Qr5v@Sy7mr5v@Sz7vr5v@T07lr5v@T17Pr5v@T276r5v@T38Jr5v@T48er5v@T58nr5v@T68dr5v@T78@12r5v@T88Hr5v@T99Fr5v@TA9Or5v@TB9Yr5v@TC9sr5v@TD9rr5v@TE9Xr5v@TF9Dr5v@TGAFr5v@THAZr5v@TIAYr5v@TJADr5v@TKC3r5v@TLCBr5v@TMCZr5v@TNCkr5v@TOCvr5v@TPCSr5v@TQCNr5v@TRE2r5v@TSERr5v@TTEGr5v@TUFHr5v@TVFGr5v@TWF6r5v@TXG5r5v@TYGEr5v@TaGIr5v@TbG3r5v@TcG3r5v@TdG3r5v@TeIHr5v@TfIGr5v@TgI6r5v@ThJ5r5v@TiJEr5v@TkJIr5v@TlJ3r5v@TmJ3r5v@TnJ3r5v@ToLHr5v@TpLGr5v@TqL6r5v@TrM5r5v@TsMEr5v@TuMIr5v@TvM3r5v@TwM3r5v@TxM3r5v@TyOHr5v@TzOGr5v@U0O6r5v@U1P5r5v@U2PEr5v@U4PIr5v@U5P3r5v@U6P3r5v@U7P3r5v@U8R2r5v@U9RBr5v@UARPr5v@UBS2r5v@UCSIr5v@UDSRr5v@UEScr5v@UFSbr5v@UGSGr5v@UH61r5v@UIV1r5v@UJVYr5v@UKVRr5v@UL41r5v@UM4Pr5v@UN4Kr5v@UP30r5v@UQ91s5v@URA2s5v@USAHs5v@UT91s5v@UUD1s5v@UVEHs5v@UWEWs5v@UXEDs5v@UYE2s5v@UZH1s5v@UaI9s5v@UbISs5v@UcIRs5v@UdI2s5v@UeL1s5v@UfM2s5v@UgMCs5v@UhMJs5v@UiMHs5v@UjL1s5v@UkP1s5v@UlQ2s5v@UmQJs5v@UnQIs5v@UoP1s5v@Up41s5v@Uq4Ks5v@Ur4Ds5v@Us5Es5v@Ut5Cs5v@Uv10s5v@Uw58t5v@Ux6Bt5v@Uy69t5v@Uz6Et5v@V06It5v@V16Mt5v@V26Wt5v@V36Ut5v@V46Gt5v@V56Et5v@V67Ot5v@V77Rt5v@V87Vt5v@V97Nt5v@VA75t5v@VB87t5v@VC8Ct5v@VD8Bt5v@VE85t5v@VF93t5v@VG98t5v@VH9Dt5v@VI9It5v@VJ9Ht5v@VK9Bt5v@VLA3t5v@VMA8t5v@VNADt5v@VOABt5v@VP6bt5v@VQ6Zt5v@VR6Zt5v@VS6bt5v@VU58t5v@VVF8t5v@VWGGt5v@VXGLt5v@VYGIt5v@VZGPt5v@VaGTt5v@VbGRt5v@VcGXt5v@VdGVt5v@VeGNt5v@VfGEt5v@VgH6t5v@VhHKt5v@ViHIt5v@VjH6t5v@VkJAt5v@VlJ3t5v@VnKDt5v@VoKRt5v@VpKPt5v@VqKDt5v@VrN8t5v@VsN7t5v@VtNCt5v@VuNRt5v@VvNOt5v@VwNAt5v@VxNZt5v@VyNft5v@VzNdt5v@W0NWt5v@W1O8t5v@W2O7t5v@W3OCt5v@W4ORt5v@W5OOt5v@W6OAt5v@W7OZt5v@W8Oft5v@W9Odt5v@WAOWt5v@WBN4t5v@WCM3t5v@WESCt5v@WFSBt5v@WGSHt5v@WHSNt5v@WISLt5v@WJSEt5v@WKSAt5v@WLS3t5v@WMF8t5v@WP30t5v@WQ58u5v@WR5gu5v@WS5bu5v@WT5Qu5v@WUC1u5v@WVDIu5v@WWDQu5v@WXDDu5v@WYD2u5v@WZG1u5v@WaH9u5v@WbHJu5v@WcHGu5v@WdHNu5v@WeHQu5v@WfHau5v@WgHXu5v@WhH2u5v@WiK1u5v@WjLIu5v@WkLRu5v@WlLVu5v@WmLPu5v@WnLZu5v@WoLiu5v@WpLmu5v@WqLgu5v@WrLDu5v@WsL2u5v@WtO1u5v@WuPIu5v@WvPRu5v@WwPVu5v@WxPPu5v@WyPZu5v@WzPiu5v@X0Pmu5v@X1Pgu5v@X2PDu5v@X3P2u5v@X4S1u5v@X5TIu5v@X6TRu5v@X7TPu5v@X8TUu5v@X9Tdu5v@XATbu5v@XBTDu5v@XCT2u5v@XDW1u5v@XEXIu5v@XFXRu5v@XGXPu5v@XHXUu5v@XIXdu5v@XJXbu5v@XKXDu5v@XLX2u5v@XMa1u5v@XNb9u5v@XObJu5v@XPbGu5v@XQbNu5v@XRbXu5v@XSbUu5v@XTbLu5v@XUb2u5v@XVe1u5v@XWfRu5v@XXfXu5v@XYfUu5v@XZf2u5v@Xai1u5v@XbkIu5v@Xck6u5v@Xdk6u5v@XelIu5v@Xfl5u5v@Xgm3u5v@XhmDu5v@XimAu5v@XjmAu5v@Xkn3u5v@XlnDu5v@XmnAu5v@XnnAu5v@Xop9u5v@Xpp2u5v@Xqs1u5v@XruLu5v@Xsu9u5v@Xtv2u5v@XuvIu5v@Xvw9u5v@Xww2u5v@Xxz1u5v@Xy@109u5v@Xz@10Ju5v@Y0@10Nu5v@Y1@10Gu5v@Y2@10Qu5v@Y3@10Tu5v@Y4@10du5v@Y5@10hu5v@Y6@10au5v@Y7@102u5v@Y871u5v@Y98Bu5v@YA89u5v@YB9Bu5v@YC99u5v@YE10u5v@YH@1u425v@YI@10835v@YJ@11i35v@YK@11J35v@YL@11C35v@YMt835v@YNtU35v@YOtK35v@YPti35v@YQta35v@YRuZ35v@YSuf35v@YTuC35v@YUvX35v@YVvd35v@YWvg35v@YXvC35v@YYwR35v@YZwP35v@YaxP35v@YbxN35v@Ydh435v@Ye@16835v@Yf@16O35v@Yg@16K35v@Yh@16Y35v@Yi@16U35v@Yj@16l35v@Yk@16o35v@Yl@16g35v@Ym@17X35v@Yn@17d35v@Yo@17g35v@Yp@17C35v@Yr@15435v@Ys@1Bn35v@Yt@1B@1335v@Yu@1Bz35v@Yv@1B@1D35v@Yw@1B@1935v@Yx@1B@1Q35v@Yy@1B@1T35v@Yz@1B@1L35v@Z1@1B435v@Z2@1Cm35v@Z3@1C@1235v@Z4@1Cy35v@Z5@1C@1C35v@Z6@1C@1835v@Z7@1C@1P35v@Z8@1C@1S35v@Z9@1C@1K35v@ZB@1C435v@ZC@1Dn35v@ZD@1D@1335v@ZE@1Dz35v@ZF@1D@1D35v@ZG@1D@1935v@ZH@1D@1Q35v@ZI@1D@1T35v@ZJ@1D@1L35v@ZL@1D435v@ZM@1En35v@ZN@1E@1335v@ZO@1Ez35v@ZP@1E@1D35v@ZQ@1E@1935v@ZR@1E@1Q35v@ZS@1E@1T35v@ZT@1E@1L35v@ZV@1E435v@ZW@1Fp35v@ZX@1F@1535v@ZY@1F@1135v@ZZ@1F@1F35v@Za@1F@1B35v@Zb@1F@1S35v@Zc@1F@1V35v@Zd@1F@1N35v@Zf@1F435v@Zg@1Gp35v@Zh@1G@1535v@Zi@1G@1135v@Zj@1G@1F35v@Zk@1G@1B35v@Zl@1G@1S35v@Zm@1G@1V35v@Zn@1G@1N35v@Zp@1G435v@Zq@1Hi35v@Zr@1Hy35v@Zs@1Hu35v@Zt@1H@1835v@Zu@1H@1435v@Zv@1H@1L35v@Zw@1H@1O35v@Zx@1H@1G35v@Zz@1H435v@a0@1Io35v@a1@1I@1435v@a2@1I@1035v@a3@1I@1E35v@a4@1I@1A35v@a5@1I@1R35v@a6@1I@1U35v@a7@1I@1M35v@a9@1I435v@aA@1Jj35v@aB@1Jz35v@aC@1Jv35v@aD@1J@1935v@aE@1J@1535v@aF@1J@1M35v@aG@1J@1P35v@aH@1J@1H35v@aJ@1J435v@aK@1Km35v@aL@1K@1235v@aM@1Ky35v@aN@1K@1C35v@aO@1K@1835v@aP@1K@1P35v@aQ@1K@1S35v@aR@1K@1K35v@aT@1K435v@aU@1Ll35v@aV@1L@1135v@aW@1Lx35v@aX@1L@1B35v@aY@1L@1735v@aZ@1L@1O35v@aa@1L@1R35v@ab@1L@1J35v@ad@1L435v@ae@1Mq35v@af@1M@1635v@ag@1M@1235v@ah@1M@1G35v@ai@1M@1C35v@aj@1M@1T35v@ak@1M@1W35v@al@1M@1O35v@an@1M435v@ao@1Nk35v@ap@1N@1035v@aq@1Nw35v@ar@1N@1A35v@as@1N@1635v@at@1N@1N35v@au@1N@1Q35v@av@1N@1I35v@ax@1N435v@ay@1Os35v@az@1O@1835v@b0@1O@1435v@b1@1O@1I35v@b2@1O@1E35v@b3@1O@1V35v@b4@1O@1Y35v@b5@1O@1Q35v@b7@1O435v@b868E5v@b97OE5v@bA7ME5v@bC44E5v@bEBcI5v@bFBLI5v@bGHgI5v@bHHLI5v@bIIhI5v@bJILI5v@bKJfI5v@bLJLI5v@bN@14FI5v@bO@15jI5v@bP@15qI5v@bQ@15tI5v@bR@15iI5v@bS@15JI5v@bT@15CI5v@bU@188I5v@bX@19LI5v@bY@19LI5v@bZ@19CI5v@ba@1AGI5v@bb@1AHI5v@bg@1DCI5v@bj@1FLI5v@bk@1FLI5v@bl@1FCI5v@bm@1GGI5v@bn@1GHI5v@bs@188I5v@bt@1K8I5v@bu@1LLI5v@bv@1LJI5v@bw@1MdI5v@bx@1MGI5v@by@1MEI5v@bz@1NII5v@c0@1NJI5v@c1@1NGI5v@c2@1OGI5v@c3@1OEI5v@c4@1PJI5v@c5@1PNI5v@c6@1PLI5v@c7@1PJI5v@c8@1QOI5v@c9@1QQI5v@cA@1QRI5v@cB@1QRI5v@cC@1QRI5v@cD@1QQI5v@cE@1QPI5v@cF@1QGI5v@cG@1S@18I5v@cH@1S@1AI5v@cI@1S@1BI5v@cJ@1S@1BI5v@cK@1S@1BI5v@cL@1S@1AI5v@cM@1S@19I5v@cN@1S@1GI5v@cO@1S@1II5v@cP@1S@1JI5v@cQ@1S@1JI5v@cR@1S@1JI5v@cS@1S@1II5v@cT@1S@1HI5v@cU@1StI5v@cV@1SnI5v@cW@1S@1PI5v@cX@1T@1EI5v@cY@1T@1GI5v@cZ@1T@1KI5v@ca@1T@1II5v@cb@1T@1FI5v@cc@1T@1OI5v@cd@1T@1mI5v@ce@1T@1oI5v@cf@1T@1pI5v@cg@1T@1pI5v@ch@1T@1pI5v@ci@1T@1oI5v@cj@1T@1nI5v@ck@1T@1uI5v@cl@1T@1wI5v@cm@1T@1xI5v@cn@1T@1xI5v@co@1T@1xI5v@cp@1T@1wI5v@cq@1T@1vI5v@cr@1TyI5v@cs@1TsI5v@ct@1T@23I5v@cu@1U@1CI5v@cv@1U@1EI5v@cw@1U@1II5v@cx@1U@1GI5v@cy@1U@1DI5v@cz@1U@1MI5v@d0@1U@1lI5v@d1@1U@1nI5v@d2@1U@1oI5v@d3@1U@1oI5v@d4@1U@1oI5v@d5@1U@1nI5v@d6@1U@1mI5v@d7@1U@1tI5v@d8@1U@1vI5v@d9@1U@1wI5v@dA@1U@1wI5v@dB@1U@1wI5v@dC@1U@1vI5v@dD@1U@1uI5v@dE@1UwI5v@dF@1UqI5v@dG@1U@22I5v@dH@1V@1FI5v@dI@1V@1HI5v@dJ@1V@1LI5v@dK@1V@1JI5v@dL@1V@1GI5v@dM@1V@1PI5v@dN@1V@1oI5v@dO@1V@1qI5v@dP@1V@1rI5v@dQ@1V@1rI5v@dR@1V@1rI5v@dS@1V@1qI5v@dT@1V@1pI5v@dU@1V@1wI5v@dV@1V@1yI5v@dW@1V@1zI5v@dX@1V@1zI5v@dY@1V@1zI5v@dZ@1V@1yI5v@da@1V@1xI5v@db@1VzI5v@dc@1VtI5v@dd@1V@25I5v@de@1W@1DI5v@df@1W@1FI5v@dg@1W@1JI5v@dh@1W@1HI5v@di@1W@1EI5v@dj@1W@1NI5v@dk@1W@1nI5v@dl@1W@1pI5v@dm@1W@1qI5v@dn@1W@1qI5v@do@1W@1qI5v@dp@1W@1pI5v@dq@1W@1oI5v@dr@1W@1vI5v@ds@1W@1xI5v@dt@1W@1yI5v@du@1W@1yI5v@dv@1W@1yI5v@dw@1W@1xI5v@dx@1W@1wI5v@dy@1WxI5v@dz@1WrI5v@e0@1W@24I5v@e1@1Z@1CI5v@e2@1Z@1EI5v@e3@1Z@1FI5v@e4@1Z@1FI5v@e5@1Z@1FI5v@e6@1Z@1EI5v@e7@1Z@1DI5v@e8@1Z@1KI5v@e9@1Z@1MI5v@eA@1Z@1NI5v@eB@1Z@1NI5v@eC@1Z@1NI5v@eD@1Z@1MI5v@eE@1Z@1LI5v@eF@1Z@1SI5v@eG@1Z@1UI5v@eH@1Z@1VI5v@eI@1Z@1VI5v@eJ@1Z@1VI5v@eK@1Z@1UI5v@eL@1Z@1TI5v@eM@1ZvI5v@eN@1ZpI5v@eO@1Z@1bI5v@eP@1c@10I5v@eQ@1c@12I5v@eR@1c@13I5v@eS@1c@13I5v@eT@1c@13I5v@eU@1c@12I5v@eV@1c@11I5v@eW@1c@18I5v@eX@1crI5v@eY@1clI5v@eZ@1c@1FI5v@ea@1dyI5v@eb@1d@10I5v@ec@1d@11I5v@ed@1d@11I5v@ee@1d@11I5v@ef@1d@10I5v@eg@1dzI5v@eh@1d@16I5v@ei@1dpI5v@ej@1djI5v@ek@1d@1EI5v@el@1gxI5v@em@1gzI5v@en@1g@10I5v@eo@1g@10I5v@ep@1g@10I5v@eq@1gzI5v@er@1gyI5v@es@1gnI5v@et@1ghI5v@eu@1g@16I5v@ev@1iaI5v@ewGf25v@exHn25v@ey@1iZI5v@ez@1iiI5v@f0@1lGI5v@f1@1lRI5v@f2@1lQI5v@f4@1pGI5v@f5@1pjI5v@f6@1ptI5v@f7@1prI5v@f8@1pGI5v@fB@1qPI5v@fC@1qPI5v@fD@1qGI5v@fE@1rKI5v@fF@1rMI5v@fG@1rLI5v@fL@1vJI5v@fM@1vCI5v@fN@1y8I5v@fO@1zCI5v@fP@1zLI5v@fQ@1zII5v@fR@1zCI5v@fS@20GI5v@fT@20LI5v@fU@20WI5v@fV@20TI5v@fW@20GI5v@fX@20@1DI5v@fY@20jI5v@fZ@20ZI5v@fa@21eI5v@fb@21JI5v@fc@21CI5v@fdN8I5v@feNzI5v@ffNlI5v@fgN@1KI5v@fhN@15I5v@fiOcI5v@fjObI5v@fkOkI5v@flHn25v@fmONI5v@fnPGI5v@foPEI5v@fpQGI5v@fqQEI5v@frRGI5v@fsREI5v@ftScI5v@fuSbI5v@fvSiI5v@fwSqI5v@fxSoI5v@fyHn25v@fzSNI5v@g0TcI5v@g1TbI5v@g2TkI5v@g3TuI5v@g4TsI5v@g5Hn25v@g6TNI5v@g7UcI5v@g8UbI5v@g9UlI5v@gAUwI5v@gBUuI5v@gCHn25v@gDUNI5v@gEVOI5v@gFVdI5v@gGVaI5v@gHViI5v@gIVzI5v@gJVyI5v@gKV@1DI5v@gLV@1PI5v@gMV@1NI5v@gNV@1TI5v@gOV@1RI5v@gPHn25v@gQVNI5v@gRWOI5v@gSWeI5v@gTWbI5v@gUWjI5v@gVW@10I5v@gWWzI5v@gXW@1FI5v@gYW@1RI5v@gZW@1PI5v@gaW@1VI5v@gbW@1TI5v@gcHn25v@gdWNI5v@geYOI5v@gfYlI5v@ggYiI5v@ghYrI5v@giHn25v@gjYNI5v@gkZYI5v@glZWI5v@gmbNI5v@gnbLI5v@godQI5v@gpdQI5v@gqdfI5v@grdOI5v@gseRI5v@gteRI5v@guehI5v@gvePI5v@gwgVI5v@gxgUI5v@gygII5v@gzhWI5v@h0hVI5v@h1hJI5v@h2ibI5v@h3iaI5v@h4iOI5v@h5jcI5v@h6jbI5v@h7jPI5v@h8lMI5v@h9lKI5v@hAmMI5v@hBmKI5v@hCoGI5v@hDoEI5v@hEpOI5v@hFpWI5v@hGpUI5v@hHpZI5v@hIpdI5v@hJpbI5v@hKHn25v@hLpNI5v@hMqOI5v@hNqXI5v@hOqVI5v@hPqaI5v@hQqeI5v@hRqcI5v@hSHn25v@hTqNI5v@hUrOI5v@hVrcI5v@hWraI5v@hXrfI5v@hYrrI5v@hZrpI5v@harvI5v@hbrtI5v@hcHn25v@hdrNI5v@hesOI5v@hfsdI5v@hgsbI5v@hhsgI5v@hissI5v@hjsqI5v@hkswI5v@hlsuI5v@hmHn25v@hnsNI5v@hotOI5v@hptUI5v@hqtSI5v@hrtXI5v@hstfI5v@httdI5v@huHn25v@hvtNI5v@hwvYI5v@hxvCI5v@hywfI5v@hzwmI5v@i0wuI5v@i1w@17I5v@i2wCI5v@i3xXI5v@i4xCI5v@i644I5v@i768K5v@i86cK5v@i96cK5v@iA6jK5v@iC6@14K5v@iD6XK5v@iE7NK5v@iF7LK5v@iG8OK5v@iH8MK5v@iJ24K5v@iK58M5v@iL5dM5v@iM5YM5v@iN6LM5v@iO6JM5v@iP7LM5v@iQ7JM5v@iS24M5v@iT58L5v@iU5rL5v@iV5xL5v@iW5@10L5v@iX5mL5v@iY6QL5v@iZ6OL5v@ia7OL5v@ib7ML5v@id24L5v@ie38N5v@if3XN5v@ig3tN5v@ih3wN5v@ii3SN5v@ik24N5v@il48O5v@im4fO5v@in4@13O5v@io4@16O5v@ip4aO5v@iq5QO5v@ir5OO5v@it24O5v@iu48P5v@iv4bP5v@iw4WP5v@ix5SP5v@iy5QP5v@j024P5v@j1MFC5v@j2HbC5v@j3HLC5v@j4IYC5v@j5ILC5v@j6OlC5v@j7O@1CC5v@j8O@1iC5v@j9OCC5v@jAPlC5v@jBP@19C5v@jCP@1cC5v@jDPCC5v@jERCC5v@jFRoC5v@jGRnC5v@jHSCC5v@jISqC5v@jJSpC5v@jLVFC5v@jMarC5v@jNaCC5v@jOdlC5v@jPd@19C5v@jQd@1cC5v@jRdCC5v@jSgGC5v@jTgEC5v@jUhbC5v@jVhZC5v@jWieC5v@jXicC5v@jYkGC5v@jZkEC5v@jalgC5v@jbleC5v@jcmjC5v@jdmhC5v@jeVFC5v@jfpFC5v@jgrVC5v@jhrTC5v@jissC5v@jjs@1GC5v@jks@1jC5v@jlsJC5v@jmsCC5v@jnvFC5v@jov@19C5v@jpv@15C5v@jqwgC5v@jrxGC5v@jsyGC5v@jtyMC5v@juyRC5v@jvyYC5v@jwygC5v@jxyjC5v@jyymC5v@jzypC5v@k0wJC5v@k1wCC5v@k2@11FC5v@k3@11@1LC5v@k4@11@1HC5v@k5@12GC5v@k6@12UC5v@k7@12SC5v@k8@12GC5v@k9@12XC5v@kA@17CC5v@kB@1DGC5v@kC@1DQC5v@kD@1DNC5v@kE@1DGC5v@kF@1EkC5v@kG@1FKC5v@kH@1GVC5v@kI@1GdC5v@kJ@1GKC5v@kK@1HKC5v@kL@1HTC5v@kM@1HhC5v@kN@1HfC5v@kO@1HRC5v@kP@1IVC5v@kQ@1IcC5v@kR@1IaC5v@kS@1IKC5v@kT@1JKC5v@kU@1KKC5v@kV@1KNC5v@kW@1KQC5v@kX@1KTC5v@kY@1ENC5v@kZ@1EGC5v@ka@1NGC5v@kb@1NQC5v@kc@1NNC5v@kd@1NGC5v@ke@1OkC5v@kf@1PKC5v@kg@1QKC5v@kh@1QTC5v@ki@1QhC5v@kj@1QfC5v@kk@1QRC5v@kl@1RVC5v@km@1RdC5v@kn@1RKC5v@ko@1SKC5v@kp@1TVC5v@kq@1TcC5v@kr@1TaC5v@ks@1TKC5v@kt@1UKC5v@ku@1UNC5v@kv@1UQC5v@kw@1UTC5v@kx@1ONC5v@ky@1OGC5v@kz@1hGC5v@l0@1hUC5v@l1@1hSC5v@l2@1hWC5v@l3@1haC5v@l4@1hZC5v@l5@1hGC5v@l6@1ikC5v@l7@1jKC5v@l8@1kKC5v@l9@1kSC5v@lA@1kaC5v@lB@1kgC5v@lC@1kmC5v@lD@1kzC5v@lE@1k@12C5v@lF@1k@15C5v@lG@1k@18C5v@lH@1iNC5v@lI@1iGC5v@lJ@1nZC5v@lK@1oGC5v@lL@1pGC5v@lM@1pOC5v@lN@1pWC5v@lO@1pcC5v@lP@1piC5v@lQ@1pvC5v@lR@1pyC5v@lS@1p@11C5v@lT@1p@14C5v@lU@1p@17C5v@lV@1p@1AC5v@lW@1p@1DC5v@lX@1nCC5v@lY@1slC5v@lZ@1sJC5v@la@1sCC5v@lb@1vFC5v@lc@1v@1BC5v@ld@1v@17C5v@le@1wgC5v@lf@1xGC5v@lg@1yGC5v@lh@1yMC5v@li@1yRC5v@lj@1yYC5v@lk@1ygC5v@ll@1yjC5v@lm@1ymC5v@ln@1ypC5v@lo@1wJC5v@lp@1wCC5v@lq@21FC5v@lr@21@18C5v@ls@21@14C5v@lt@22gC5v@lu@23GC5v@lv@24GC5v@lw@24KC5v@lx@24OC5v@ly@24SC5v@lz@24WC5v@m0@24aC5v@m1@24eC5v@m2@24hC5v@m3@24kC5v@m4@24nC5v@m5@22JC5v@m6@22CC5v@m7@27FC5v@m8@27@1CC5v@m9@27@18C5v@mA@2AgC5v@mB@2BGC5v@mC@2CGC5v@mD@2CKC5v@mE@2COC5v@mF@2CSC5v@mG@2CWC5v@mH@2CaC5v@mI@2CeC5v@mJ@2CiC5v@mK@2CmC5v@mL@2CpC5v@mM@2CsC5v@mN@2CvC5v@mO@2AJC5v@mP@2ACC5v@mQ@2FFC5v@mR@2GGC5v@mS@2GEC5v@mT@2HlC5v@mU@2H@19C5v@mV@2H@1cC5v@mW@2HCC5v@mX@1wgC5v@mY@1xGC5v@mZ@2IjC5v@ma@2ImC5v@mb@2IpC5v@mc@2IqC5v@md@2IvC5v@me@2IwC5v@mf@2I@11C5v@mg@2I@14C5v@mh@2I@17C5v@mi@1v@1BC5v@mj@2IiC5v@mk@2ICC5v@mnFBC5v@mpKoQ5v@mqKrQ5v@mrKnQ5v@msKLQ5v@muLFQ5v@mvMYQ5v@mwMlQ5v@mxMWQ5v@myNCQ5v@mzNkQ5v@n0OKQ5v@n1OXQ5v@n2OIQ5v@n3PLQ5v@n4PYQ5v@n5PJQ5v@n6RGQ5v@n7RGQ5v@n8TMQ5v@n9TfQ5v@nATKQ5v@nBUYQ5v@nCU@19Q5v@nDU@18Q5v@nEUWQ5v@nFVKQ5v@nGVdQ5v@nHVaQ5v@nIVKQ5v@nJWgQ5v@nKWaQ5v@nLXzQ5v@nMX@1IQ5v@nNXyQ5v@nOXTQ5v@nPY@10Q5v@nQY@1JQ5v@nRYzQ5v@nSYUQ5v@nTZKQ5v@nUZiQ5v@nVZgQ5v@nWaKQ5v@nXajQ5v@nYahQ5v@nZbzQ5v@nab@1cQ5v@nbb@1mQ5v@ncb@1bQ5v@ndbUQ5v@nebOQ5v@nfc@1BQ5v@ngc@1UQ5v@nhc@1cQ5v@nic@1vQ5v@njc@24Q5v@nkciQ5v@nlccQ5v@nmdKQ5v@nnduQ5v@nodsQ5v@npeKQ5v@nqeSQ5v@nrfKQ5v@nsfTQ5v@ntfmQ5v@nufSQ5v@nvgKQ5v@nwgUQ5v@nxh@11Q5v@nyh@1IQ5v@nzh@1OQ5v@o0hKQ5v@o1iKQ5v@o2irQ5v@o3iyQ5v@o4iwQ5v@o5kKQ5v@o6kXQ5v@o7kIQ5v@o8lKQ5v@o9lXQ5v@oAlIQ5v@oBmMQ5v@oCmbQ5v@oDmkQ5v@oEmiQ5v@oFmKQ5v@oGnMQ5v@oHnbQ5v@oInlQ5v@oJnjQ5v@oKnKQ5v@oLoXQ5v@oMobQ5v@oNoZQ5v@oOogQ5v@oPokQ5v@oQoiQ5v@oRoqQ5v@oSouQ5v@oTosQ5v@oUo@13Q5v@oVo@11Q5v@oWo@19Q5v@oXo@1DQ5v@oYo@1BQ5v@oZo@1NQ5v@oao@1LQ5v@oboWQ5v@ocoUQ5v@oervQ5v@ofr@1YQ5v@ogr@1fQ5v@ohr@1XQ5v@oirQQ5v@ojrKQ5v@oksGQ5v@olsOQ5v@omtGQ5v@ontPQ5v@ootfQ5v@optsQ5v@oqteQ5v@ortyQ5v@ost@1BQ5v@ottxQ5v@outOQ5v@ovuGQ5v@owuQQ5v@oxvcQ5v@oyvWQ5v@ozwGQ5v@p0weQ5v@p1wcQ5v@p2xGQ5v@p3xfQ5v@p4xdQ5v@p5yxQ5v@p6y@1EQ5v@p7y@1KQ5v@p8yGQ5v@p9zXQ5v@pAzcQ5v@pBzhQ5v@pCzmQ5v@pDzWQ5v@pEzUQ5v@pF@11gQ5v@pG@11xQ5v@pH@11@14Q5v@pI@11QQ5v@pJ@11KQ5v@pK@12lQ5v@pL@12uQ5v@pM@12@1BQ5v@pN@12@1QQ5v@pO@12@1XQ5v@pP@12CQ5v@pQ@13JQ5v@pR@13CQ5v@pS@16FQ5v@pT@17HQ5v@pU@17OQ5v@pV@17UQ5v@pW@17SQ5v@pX@17LQ5v@pY@17bQ5v@pZ@17YQ5v@pa@17HQ5v@pb@17lQ5v@pc@17eQ5v@pd@18QQ5v@pe@18WQ5v@pf@18UQ5v@pg@18OQ5v@ph@18ZQ5v@pi@18iQ5v@pj@18gQ5v@pk@18ZQ5v@pl@19GQ5v@pm@19NQ5v@pn@19KQ5v@po@19GQ5v@pp@18lQ5v@pq@18vQ5v@pr@18sQ5v@ps@18lQ5v@pu@1BJQ5v@pv@1BPQ5v@pw@1BNQ5v@px@1BCQ5v@py@1q8Q5v@pz@1sGQ5v@q0@1seQ5v@q1@1tGQ5v@q2@1wGQ5v@q3@1wJQ5v@q4@1xGQ5v@q5@1rJQ5v@q6@1rJQ5v@q7@1yLQ5v@q9LT25v@qA@1ycQ5v@qBLj25v@qC@1ybQ5v@qD@1rCQ5v@qE@218Q5v@qF@23GQ5v@qG@23eQ5v@qH@24GQ5v@qI@27GQ5v@qJ@27JQ5v@qK@28GQ5v@qL@29GQ5v@qM@22JQ5v@qN@22JQ5v@qO@29PQ5v@qQLT25v@qR@29gQ5v@qSLj25v@qT@29fQ5v@qU@22CQ5v@qV@2C8Q5v@qW@2DGQ5v@qX@2DPQ5v@qY@2DMQ5v@qZ@2DRQ5v@qa@2DUQ5v@qb@2DeQ5v@qc@2DbQ5v@qd@2DGQ5v@qe@2DhQ5v@qf@2FGQ5v@qg@2FeQ5v@qh@2GGQ5v@qi@2HGQ5v@qj@2HKQ5v@qk@2HOQ5v@ql@2HVQ5v@qm@2IGQ5v@qn@2JGQ5v@qo@2JJQ5v@qp@2KGQ5v@qq@2EJQ5v@qr@2EJQ5v@qs@2LLQ5v@quLT25v@qv@2LcQ5v@qwLj25v@qx@2LbQ5v@qy@2ECQ5v@qz@2O8Q5v@r0@2PGQ5v@r1@2PPQ5v@r2@2PMQ5v@r3@2PRQ5v@r4@2PUQ5v@r5@2PeQ5v@r6@2PbQ5v@r7@2PGQ5v@r8@2PhQ5v@r9@2RGQ5v@rA@2ReQ5v@rB@2SGQ5v@rC@2UGQ5v@rD@2UNQ5v@rE@2VGQ5v@rF@2VJQ5v@rG@2WGQ5v@rH@2QJQ5v@rI@2QJQ5v@rJ@2XLQ5v@rLLT25v@rM@2XcQ5v@rNLj25v@rO@2XbQ5v@rP@2QCQ5v@rQ@2a8Q5v@rR@2bGQ5v@rS@2bMQ5v@rT@2bJQ5v@rU@2bOQ5v@rV@2bRQ5v@rW@2bXQ5v@rX@2bUQ5v@rY@2bZQ5v@rZ@2bcQ5v@ra@2biQ5v@rb@2bfQ5v@rc@2bkQ5v@rd@2bnQ5v@re@2btQ5v@rf@2bqQ5v@rg@2bGQ5v@rh@2bwQ5v@ri@2dGQ5v@rj@2deQ5v@rk@2eGQ5v@rl@2fGQ5v@rm@2fKQ5v@rn@2fOQ5v@ro@2fSQ5v@rp@2gGQ5v@rq@2gKQ5v@rr@2hGQ5v@rs@2hKQ5v@rt@2iGQ5v@ru@2cJQ5v@rv@2cJQ5v@rw@2jLQ5v@ryLT25v@rz@2jcQ5v@s0Lj25v@s1@2jbQ5v@s2@2cCQ5v@s3@2m8Q5v@s4@2oGQ5v@s5@2oeQ5v@s6@2pGQ5v@s7@2qGQ5v@s8@2qKQ5v@s9@2qOQ5v@sA@2qSQ5v@sB@2rGQ5v@sC@2rKQ5v@sD@2sGQ5v@sE@2sKQ5v@sF@2tGQ5v@sG@2nJQ5v@sH@2nJQ5v@sI@2uLQ5v@sKLT25v@sL@2ucQ5v@sMLj25v@sN@2ubQ5v@sO@2nCQ5v@sP@2x8Q5v@sQ@2zGQ5v@sR@2zeQ5v@sS@30GQ5v@sT@33GQ5v@sU@33JQ5v@sV@34GQ5v@sW@35GQ5v@sX@2yJQ5v@sY@2yJQ5v@sZ@35LQ5v@sbLT25v@sc@35cQ5v@sdLj25v@se@35bQ5v@sf@2yCQ5v@sg@388Q5v@sh@3AGQ5v@si@3AeQ5v@sj@3BGQ5v@sk@3EGQ5v@sl@3EJQ5v@sm@3FGQ5v@sn@3GGQ5v@so@39JQ5v@sp@39JQ5v@sq@3GPQ5v@ssLT25v@st@3GgQ5v@suLj25v@sv@3GfQ5v@sw@39CQ5v@sx@3J8Q5v@sy@3LGQ5v@sz@3LeQ5v@t0@3MGQ5v@t1@3NGQ5v@t2@3NKQ5v@t3@3NOQ5v@t4@3NSQ5v@t5@3OGQ5v@t6@3OKQ5v@t7@3PGQ5v@t8@3PKQ5v@t9@3QGQ5v@tA@3RGQ5v@tB@3KJQ5v@tC@3KJQ5v@tD@3RPQ5v@tFLT25v@tG@3RgQ5v@tHLj25v@tI@3RfQ5v@tJ@3KCQ5v@tK@3W8Q5v@tL@3XMQ5v@tM@3XRQ5v@tN@3XLQ5v@tO@3XJQ5v@tP@3YHQ5v@tQ@3YGQ5v@tR@3YGQ5v@tS@3aTQ5v@tT@3aNQ5v@tU@3bGQ5v@tV@3bVQ5v@tW@3bYQ5v@tX@3bTQ5v@tY@3cGQ5v@tZ@3cWQ5v@ta@3cZQ5v@tb@3cUQ5v@tc@3dxQ5v@td@3d@15Q5v@te@3d@1CQ5v@tf@3dGQ5v@tg@3eGQ5v@th@3eNQ5v@ti@3eSQ5v@tj@3eQQ5v@tk@3gJQ5v@tl@3gCQ5v@tm@3j8Q5v@tn@3kIQ5v@to@3kKQ5v@tp@3kNQ5v@tq@3kGQ5v@tr@3kGQ5v@ts@3kYQ5v@tt@3kRQ5v@tu@3lcQ5v@tv@3lbQ5v@tw@3lGQ5v@tx@3mfQ5v@ty@3mjQ5v@tz@3miQ5v@u0@3mnQ5v@u1@3mzQ5v@u2@3mPQ5v@u3@3mJQ5v@u4@3nfQ5v@u5@3nlQ5v@u6@3ntQ5v@u7@3nwQ5v@u8@3nzQ5v@u9@3n@13Q5v@uA@3n@12Q5v@uB@3n@17Q5v@uC@3n@1BQ5v@uD@3n@1AQ5v@uE@3nJQ5v@uF@3nCQ5v@uG@3u8Q5v@uH@3wWQ5v@uI@3wIQ5v@uJ@3wsQ5v@uK@3xYQ5v@uL@3xKQ5v@uM@3wGQ5v@uN@3xvQ5v@uO@3yGQ5v@uP@3yLQ5v@uQ@3yIQ5v@uR@3yNQ5v@uS@3zGQ5v@uT@3zLQ5v@uU@3zIQ5v@uV@3wGQ5v@uWLT25v@uX@40QQ5v@uYLj25v@uZ@40PQ5v@ua@42IQ5v@ub@42MQ5v@uc@42KQ5v@ud@42GQ5v@ue@43IQ5v@uf@43MQ5v@ug@43KQ5v@uh@43GQ5v@ui@44GQ5v@uj@44KQ5v@uk@44NQ5v@ul@44GQ5v@um@45WQ5v@un@45bQ5v@uo@45VQ5v@up@45KQ5v@uq@46VQ5v@ur@46KQ5v@us@46IQ5v@ut@47VQ5v@uu@47KQ5v@uv@47IQ5v@ux@49MQ5v@uy@49KQ5v@uz@4BGQ5v@v0@4BLQ5v@v1@4BIQ5v@v2@4BWQ5v@v3@4BZQ5v@v4@4BeQ5v@v5@4BbQ5v@v6@4BGQ5v@v7@4ByQ5v@v8@4BrQ5v@v9@4CcQ5v@vA@4CbQ5v@vB@4CGQ5v@vC@4DfQ5v@vD@4DjQ5v@vE@4DiQ5v@vF@4DnQ5v@vG@4DqQ5v@vH@4DPQ5v@vI@4DJQ5v@vJ@4EZQ5v@vK@4EeQ5v@vL@4EmQ5v@vM@4EpQ5v@vN@4EsQ5v@vO@4EwQ5v@vP@4EvQ5v@vQ@4E@10Q5v@vR@4E@14Q5v@vS@4E@13Q5v@vT@4ECQ5v@vU@4FJQ5v@vV@4FCQ5v@vW@1F8Q5v@vX@1GiQ5v@vY@1GgQ5v@vZ@1HPQ5v@va@1HNQ5v@vb@1IQQ5v@vc@1IOQ5v@ve44Q5v@vg3WZ5v@vh3LZ5v@vjL8Z5v@vl14Z5v@vm38h5v@vn3Vh5v@vo3Yh5v@vp3Ph5v@vr24h5v@vtLbi5v@vuLLi5v@vwV8i5v@vxXNi5v@vyXLi5v@vzYPi5v@w0YNi5v@w1ZOi5v@w2ZMi5v@w3aRi5v@w4aPi5v@w5bWi5v@w6bUi5v@w7cJi5v@w8cCi5v@w9f8i5v@wAhOi5v@wBhMi5v@wCiRi5v@wDiPi5v@wEjWi5v@wFjUi5v@wGkJi5v@wHkCi5v@wIn8i5v@wJpPi5v@wKpNi5v@wLqRi5v@wMqPi5v@wNrWi5v@wOrUi5v@wPsJi5v@wQsCi5v@wRv8i5v@wSwGi5v@wTwWi5v@wUwTi5v@wVwGi5v@wWyKi5v@wXyTi5v@wYyhi5v@wZyqi5v@wazKi5v@wbzVi5v@wczhi5v@wdzri5v@wez@13i5v@wfxji5v@wgxTi5v@wh@16Oi5v@wi@16Xi5v@wj@16li5v@wk@16ui5v@wl@17Oi5v@wm@18Oi5v@wn@19Oi5v@wo@19Yi5v@wp@19ki5v@wq@15Ki5v@wr@1ARi5v@ws@1AQi5v@wt@14Yi5v@wu@1CKi5v@wv@1CKi5v@ww@1Dsi5v@wx@1D@11i5v@wy@1D@1Fi5v@wz@1D@1Oi5v@x0@1D@1Yi5v@x1@1D@1ji5v@x2@1D@1vi5v@x3@1Dri5v@x4@1Dbi5v@x5@1HPi5v@x6@1Hji5v@x7@1Hhi5v@x8@1Hqi5v@x9@1Hoi5v@xA@1HNi5v@xB@1IMi5v@xC@1Iri5v@xD@1Iqi5v@xE@1IKi5v@xF@1JGi5v@xG@1JRi5v@xH@1JOi5v@xI@1JGi5v@xJ@1Kgi5v@xK@1Kmi5v@xL@1Kti5v@xM@1Kri5v@xN@1KUi5v@xO@1KOi5v@xP@1LGi5v@xQ@1Lhi5v@xR@1Lvi5v@xS@1Lti5v@xT@1OJi5v@xU@1OCi5v@xVQ8i5v@xWRIi5v@xXRNi5v@xYRGi5v@xZRGi5v@xaR@1Ti5v@xbR@14i5v@xcRui5v@xdSOi5v@xeSMi5v@xg54i5v@xiGUj5v@xjGLj5v@xlC8j5v@xmDaj5v@xnDNj5v@xoDCj5v@xpIFj5v@xqJJj5v@xrJWj5v@xsJUj5v@xtJCj5v@xuMFj5v@xvNIj5v@xwNVj5v@xxNTj5v@xyNGj5v@xzOJj5v@y0Ohj5v@y1Ogj5v@y2OHj5v@y3PGj5v@y4POj5v@y5PLj5v@y6PGj5v@y7Qej5v@y8Qqj5v@y9QRj5v@yAQLj5v@yBRGj5v@yCRaj5v@yDRhj5v@yERfj5v@yFTJj5v@yGTCj5v@yHWFj5v@yIXwj5v@yJXHj5v@yKXGj5v@yLXGj5v@yMYmj5v@yNY@1Hj5v@yOY@1Fj5v@yPY@1Oj5v@yQY@1Mj5v@yRYQj5v@ySYGj5v@yTabj5v@yUa@10j5v@yVaaj5v@yWaCj5v@yXdFj5v@yYeMj5v@yZeCj5v@yadFj5v@ybhFj5v@ycioj5v@ydinj5v@yeiGj5v@yfiGj5v@ygjmj5v@yhj@1Cj5v@yij@1Aj5v@yjj@1Jj5v@ykj@1Hj5v@yljQj5v@ymjGj5v@ynlbj5v@yolyj5v@yplaj5v@yqlCj5v@yroFj5v@yspyj5v@ytpJj5v@yupCj5v@yvtFj5v@ywubj5v@yxuaj5v@yyuCj5v@yzyFj5v@z0zbj5v@z1zaj5v@z2zCj5v@z3@13Fj5v@z4@14bj5v@z5@14aj5v@z6@14Cj5v@z778j5v@z88Vj5v@z98Tj5v@zA9Rj5v@zB9Pj5v@zD24j5v@zFTZk5v@zGTLk5v@zHUak5v@zIULk5v@zKWFk5v@zLXJk5v@zMXVk5v@zNXfk5v@zOXlk5v@zPXIk5v@zQXxk5v@zRXwk5v@zSXGk5v@zTYNk5v@zUYok5v@zVYnk5v@zWYLk5v@zXZGk5v@zYZSk5v@zZZPk5v@zaZGk5v@zbagk5v@zcask5v@zdaVk5v@zeaPk5v@zfbGk5v@zgbdk5v@zhbkk5v@zibik5v@zjdJk5v@zkdCk5v@zlo8k5v@zmpKk5v@znpIk5v@zoqLk5v@zpqJk5v@zqrNk5v@zrrLk5v@zssMk5v@ztsKk5v@zutHk5v@zvtFk5v@zwuHk5v@zxuFk5v@zyvNk5v@zzvLk5v#102wLk5v#103wLk5v#104wCk5v#105xYk5v#106xXk5v#107xNk5v#108yKk5v#109yPk5v#10AyMk5v#10ByKk5v#10CzKk5v#10DzTk5v#10EzQk5v#10FzKk5v#10H@10Rk5v#10I@10Wk5v#10J@10Tk5v#10K@10bk5v#10L@10ek5v#10M@10jk5v#10N@10gk5v#10O@10Rk5v#10P@11Uk5v#10Q@11Kk5v#10S@13Kk5v#10T@13Wk5v#10U@13Vk5v#10V@14Rk5v#10W@14nk5v#10X@14mk5v#10Y@14Pk5v#10Z@15Ok5v#10a@15Wk5v#10b@15Tk5v#10c@15Ok5v#10d@16Wk5v#10e@16Uk5v#10f@17gk5v#10g@17mk5v#10h@17Zk5v#10i@17Tk5v#10j@18Sk5v#10k@18ek5v#10l@18bk5v#10m@18Sk5v#10n@18vk5v#10o@18tk5v#10p@19Ok5v#10q@19bk5v#10r@19ak5v#10s@1BVk5v#10t@1BTk5v#10u@1CKk5v#10v@1CRk5v#10w@1CZk5v#10x@1Cdk5v#10y@1CXk5v#10z@1CQk5v#110@1DKk5v#111@1DRk5v#112@1DQk5v#113@1EKk5v#114@1EXk5v#115@1EWk5v#116@1Fck5v#117@1Fkk5v#118@1Fok5v#119@1Fbk5v#11A@1FRk5v#11B@1GKk5v#11C@1GTk5v#11D@1GXk5v#11E@1GQk5v#11F@1GKk5v#11K@1JCk5v#11L@1JMk5v#11M@1JUk5v#11N@1Jdk5v#11O@1Jlk5v#11P@1Jbk5v#11Q@1J@13k5v#11R@1J@17k5v#11S@1J@11k5v#11T@1J@1Mk5v#11U@1J@1Kk5v#11V@1J@1Qk5v#11W@1J@1Ok5v#11X@1JIk5v#11Y@1JCk5v#11Z@1LGk5v#11a@1LSk5v#11b@1LPk5v#11c@1LGk5v#11d@1Opk5v#11e@1Ook5v#11f@1ONk5v#11i@1PTk5v#11j@1PTk5v#11k@1PGk5v#11l@1QKk5v#11m@1Qak5v#11n@1QZk5v#11q@1RWk5v#11r@1Rbk5v#11s@1RWk5v#11t@1RKk5v#11u@1SOk5v#11v@1Shk5v#11w@1Slk5v#11x@1Swk5v#11y@1Suk5v#11z@1TOk5v#120@1Tgk5v#121@1Tkk5v#122@1Tvk5v#123@1Ttk5v#12C@1Yvk5v#12D@1Y@1Mk5v#12E@1Y@1Pk5v#12F@1YCk5v#12G@1Zvk5v#12H@1Z@1Mk5v#12I@1Z@1Pk5v#12J@1ZCk5v#12K@1avk5v#12L@1a@1Mk5v#12M@1a@1Pk5v#12N@1aCk5v#12O@1bXk5v#12P@1byk5v#12Q@1b@11k5v#12R@1b@18k5v#12S@1bCk5v#12T@1dCk5v#12U@1dKk5v#12V@1dPk5v#12W@1dNk5v#12X@1eCk5v#12Y@1eKk5v#12Z@1ePk5v#12a@1eNk5v#12bo8k5v#12c@1n8k5v#12d@1oMk5v#12e@1oCk5v#12f@1n8k5v#12gh8k5v#12hiUk5v#12iiSk5v#12jjUk5v#12kjbk5v#12ljZk5v#12mjfk5v#12njdk5v#12ojSk5v#12pkZk5v#12qkfk5v#12rkCk5v#12slXk5v#12tldk5v#12ulgk5v#12vlCk5v#12xE4k5v#12ybFl5v#12zgLl5v#130gJl5v#131hQl5v#132hVl5v#133hOl5v#134iOl5v#135iMl5v#136jGl5v#137jLl5v#138jVl5v#139jTl5v#13AjGl5v#13BkPl5v#13CkVl5v#13DkUl5v#13EkXl5v#13FkNl5v#13GlRl5v#13HlYl5v#13IlWl5v#13JlPl5v#13KmGl5v#13LmRl5v#13MmQl5v#13NnNl5v#13OnLl5v#13PoNl5v#13QoRl5v#13Robl5v#13SoZl5v#13Tokl5v#13Uonl5v#13Vozl5v#13Woxl5v#13XoNl5v#13YpQl5v#13ZpOl5v#13aqKl5v#13bqTl5v#13cqSl5v#13drSl5v#13erQl5v#13ftRl5v#13gtdl5v#13htbl5v#13itpl5v#13jtsl5v#13kt@10l5v#13lt@16l5v#13mt@15l5v#13nt@1Gl5v#13otyl5v#13pt@1Pl5v#13qt@1Nl5v#13rtRl5v#13suVl5v#13tubl5v#13uukl5v#13vukl5v#13wukl5v#13xubl5v#13yual5v#13zuTl5v#140vOl5v#141vWl5v#142vVl5v#143wOl5v#144wXl5v#145wbl5v#146wUl5v#147wOl5v#149zRl5v#14Azdl5v#14Bzbl5v#14Czpl5v#14Dzsl5v#14Ez@10l5v#14Fz@16l5v#14Gz@1Kl5v#14Hz@1Il5v#14Iz@15l5v#14Jz@1Ml5v#14Kzyl5v#14Lz@1Vl5v#14Mz@1Tl5v#14NzRl5v#14O@10Vl5v#14P@10dl5v#14Q@10bl5v#14R@10bl5v#14S@10bl5v#14T@10dl5v#14U@10al5v#14V@10Tl5v#14W@11Ol5v#14X@11Wl5v#14Y@11Vl5v#14Z@12Ol5v#14a@12Xl5v#14b@12bl5v#14c@12Ul5v#14d@12Ol5v#14g@15Gl5v#14h@15kl5v#14i@15Vl5v#14j@15Ql5v#14k@17Jl5v#14l@17Cl5v#14m@1AFl5v#14n@1BJl5v#14o@1BNl5v#14p@1BCl5v#14q98l5v#14rAGl5v#14sAEl5v#14tBLl5v#14uBQl5v#14vBPl5v#14wBTl5v#14xBSl5v#14yBVl5v#14zBJl5v#150CHl5v#151CFl5v#152DHl5v#153DFl5v#154EKl5v#155EIl5v#158FNl5v#159FNl5v#15AFCl5v#15BGGl5v#15CGYl5v#15DGXl5v#15EHKl5v#15FHIl5v#15IISl5v#15JISl5v#15KIGl5v#15LJKl5v#15MJdl5v#15NJhl5v#15OJsl5v#15PJql5v#15QKKl5v#15RKYl5v#15SKWl5v#15TLKl5v#15ULYl5v#15VLWl5v#15WMKl5v#15XMXl5v#15YMVl5v#15ZNKl5v#15aNil5v#15bNgl5v#15cOKl5v#15dORl5v#15eOQl5v#15fPKl5v#15gPRl5v#15hPQl5v#15iQKl5v#15jQUl5v#15kQTl5v#15lRKl5v#15mRPl5v#15nRTl5v#15oRMl5v#15pRKl5v#15uTGl5v#15vTLl5v#15wTIl5v#15xTGl5v#162Ywl5v#163Y@10l5v#164Y@14l5v#165Y@1Bl5v#166YCl5v#16854l5v#169Y8m5v#16AZQm5v#16BZOm5v#16CaSm5v#16DaQm5v#16EbZm5v#16Fbfm5v#16GbCm5v#16HcKm5v#16IcNm5v#16JcQm5v#16KcTm5v#16LcJm5v#16McHm5v#16Ndtm5v#16Od@11m5v#16Pd@1Em5v#16Qd@1Km5v#16Rd@1Sm5v#16SdHm5v#16TdGm5v#16UdGm5v#16Vepm5v#16We@1Mm5v#16Xe@1Km5v#16Ye@1Vm5v#16Ze@1Tm5v#16aeQm5v#16beGm5v#16cgPm5v#16dgUm5v#16egTm5v#16fgNm5v#16ghQm5v#16hhVm5v#16ihUm5v#16jhOm5v#16kiUm5v#16liZm5v#16miYm5v#16niSm5v#16ojYm5v#16pjdm5v#16qjcm5v#16rjWm5v#16tL4m5v#16vLin5v#16wLLn5v#16yoFn5v#16zpgn5v#170pmn5v#171pqn5v#172pwn5v#173pzn5v#174p@12n5v#175p@15n5v#176pfn5v#177pGn5v#178qPn5v#179qzn5v#17Aqyn5v#17BqNn5v#17CrGn5v#17DrUn5v#17ErRn5v#17FrGn5v#17Gsin5v#17Hson5v#17Issn5v#17Jsyn5v#17Ks@15n5v#17Ls@18n5v#17Ms@1Bn5v#17NsXn5v#17OsRn5v#17PtGn5v#17Qtmn5v#17Rttn5v#17Strn5v#17TvJn5v#17UvCn5v#17VyFn5v#17WzLn5v#17XzJn5v#17Y@12Gn5v#17Z@12Nn5v#17a@12Ln5v#17b@12Rn5v#17c@12Wn5v#17d@12Un5v#17e@12an5v#17f@12hn5v#17g@12fn5v#17h@12ln5v#17i@12pn5v#17j@12nn5v#17k@12tn5v#17l@12xn5v#17m@12vn5v#17n@12@11n5v#17o@12@15n5v#17p@12@13n5v#17q@12@19n5v#17r@12@1Hn5v#17s@12@1Fn5v#17t@13Gn5v#17u@10Cn5v#17v@14Jn5v#17w@14Vn5v#17x@14Un5v#17y@14Cn5v#17zO8n5v#180Tln5v#181Trn5v#182Tvn5v#183T@11n5v#184T@14n5v#185T@17n5v#186T@1An5v#187Tkn5v#188TLn5v#189VZn5v#18AVfn5v#18BVCn5v#18CWMn5v#18DWLn5v#18EWJn5v#18FYxn5v#18GY@13n5v#18HY@19n5v#18IY@1Dn5v#18JY@1Jn5v#18KY@1Mn5v#18LY@1Pn5v#18MY@1Sn5v#18NYLn5v#18OYJn5v#18PZGn5v#18QZan5v#18RZdn5v#18SZln5v#18TZin5v#18UZGn5v#18VaKn5v#18WaIn5v#18XbOn5v#18YbNn5v#18ZbNn5v#18acQn5v#18bcOn5v#18ccOn5v#18dcOn5v#18ecQn5v#18fcUn5v#18gcSn5v#18hcOn5v#18ic@17n5v#18jcln5v#18kcbn5v#18ldVn5v#18mdUn5v#18ogKn5v#18pgCn5v#18qhOn5v#18riun5v#18si@1Kn5v#18ti@1In5v#18ui@1Pn5v#18vi@1Nn5v#18wiYn5v#18xiOn5v#18yjun5v#18zj@1Pn5v#190j@1Nn5v#191j@1Un5v#192j@1Sn5v#193jYn5v#194jOn5v#195kZn5v#196kPn5v#198H4n5v#199@128o5v#19A@13Mo5v#19B@13Co5v#19C@128o5v#19D@168o5v#19E@17co5v#19F@17fo5v#19G@17io5v#19H@17bo5v#19I@17Co5v#19J@1A8o5v#19K@1BGo5v#19L@1BGo5v#19M@1C@12o5v#19N@1C@18o5v#19O@1C@1Ko5v#19P@1C@1io5v#19Q@1C@1lo5v#19R@1C@1oo5v#19S@1CNo5v#19T@1CGo5v#19V@1wgC5v#19W@1xGC5v#19X@1Ego5v#19Y@1Ejo5v#19Z@1Emo5v#19a@1Eqo5v#19b@1Euo5v#19c@1Ezo5v#19d@1E@12o5v#19e@1v@1BC5v#19f@1Efo5v#19g@1Fto5v#19h@1Fzo5v#19i@1F@1No5v#19j@1F@1Qo5v#19k@1F@1To5v#19l@1FNo5v#19m@1FGo5v#19n@1A8o5v#19oH8o5v#19pIOo5v#19qIMo5v#19rZNo5v#19sZQo5v#19tZMo5v#19uZKo5v#19vaGo5v#19waGo5v#19xbTo5v#19ybRo5v#19zcdo5v#1A0cjo5v#1A1cGo5v#1A2dZo5v#1A3dlo5v#1A4dXo5v#1A5eGo5v#1A6eio5v#1A7eoo5v#1A8exo5v#1A9e@13o5v#1AAeho5v#1ABfbo5v#1ACfho5v#1ADfko5v#1AEfwo5v#1AFfGo5v#1AGgbo5v#1AHgho5v#1AIgko5v#1AJgwo5v#1AKgGo5v#1ALhbo5v#1AMhho5v#1ANhko5v#1AOhwo5v#1APhGo5v#1AQiTo5v#1ARiRo5v#1ATkdo5v#1AUkjo5v#1AVkGo5v#1AWmKo5v#1AXnKo5v#1AYoKo5v#1AZoWo5v#1AapKo5v#1AbpWo5v#1Acpbo5v#1AdqKo5v#1AeqWo5v#1Afqbo5v#1AgrKo5v#1AhrWo5v#1AisKo5v#1AjsWo5v#1AktKo5v#1AltWo5v#1AmuKo5v#1AnuWo5v#1AovKo5v#1ApvWo5v#1AqwKo5v#1ArlGo5v#1AsyPo5v#1AtyXo5v#1AuyWo5v#1AvyNo5v#1AwzQo5v#1AxzYo5v#1AyzXo5v#1AzzOo5v#1B194o5v#1B2V8S5v#1B3WqS5v#1B4W@14S5v#1B5WpS5v#1B6WGS5v#1B7XKS5v#1B8XfS5v#1B9XjS5v#1BAXiS5v#1BBXeS5v#1BCXIS5v#1BDYGS5v#1BEYPS5v#1BFYMS5v#1BGYGS5v#1BHa@12S5v#1BIa@1pS5v#1BJaQS5v#1BKaGS5v#1BLdJS5v#1BMdYS5v#1BNdXS5v#1BOdCS5v#1BPg8S5v#1BQhGS5v#1BRhGS5v#1BShdS5v#1BThWS5v#1BWjPS5v#1BXjPS5v#1BYjCS5v#1BZkLS5v#1BakXS5v#1BbkKS5v#1BckKS5v#1BdlRS5v#1BelKS5v#1BjpTS5v#1BkpRS5v#1BlqJS5v#1BmqCS5v#1Bnt8S5v#1BouGS5v#1BpuGS5v#1BqudS5v#1BruWS5v#1BswNS5v#1BtwLS5v#1BwxPS5v#1BxxPS5v#1ByxCS5v#1BzyGS5v#1C0ySS5v#1C1yjS5v#1C2yoS5v#1C3ytS5v#1C4ymS5v#1C5yPS5v#1C6yGS5v#1CB@11JS5v#1CC@11US5v#1CD@11SS5v#1CE@11CS5v#1CF@148S5v#1CG@15LS5v#1CH@15JS5v#1CK@16PS5v#1CL@16PS5v#1CM@16CS5v#1CN@17GS5v#1CO@17US5v#1CP@17iS5v#1CQ@17TS5v#1CV@19CS5v#1CW@19NS5v#1CX@1AJS5v#1CY@1ACS5v#1CZH8S5v#1CaIYS5v#1CbIkS5v#1CcIWS5v#1CdJGS5v#1CeJMS5v#1CfJXS5v#1CgJUS5v#1ChJGS5v#1CiKXS5v#1CjKVS5v#1CnMTS5v#1CoMTS5v#1CpMGS5v#1CqNPS5v#1CrNUS5v#1CsNNS5v#1CtOKS5v#1CuObS5v#1CvOhS5v#1CwOfS5v#1CxPKS5v#1CyPYS5v#1CzPXS5v#1D0QKS5v#1D1QaS5v#1D2QfS5v#1D3QXS5v#1D4QXS5v#1DA84S5v#1DB68T5v#1DC6hT5v#1DD6yT5v#1DE6@15T5v#1DF6xT5v#1DG6cT5v#1DH7OT5v#1DI7MT5v#1DK14T5v#1DLG8T5v#1DMGfT5v#1DNGwT5v#1DOG@13T5v#1DPGvT5v#1DQGaT5v#1DRHMT5v#1DSHKT5v#1DUB4T5v#1DVM8T5v#1DWMWT5v#1DXMRT5v#1DZL4T5v#1DbzjU5v#1DcziU5v#1DdzLU5v#1Dfn8U5v#1DgoGU5v#1DhoWU5v#1DioTU5v#1DjoGU5v#1DkojU5v#1DlocU5v#1DmpHU5v#1DnpGU5v#1DopGU5v#1Dpp@1AU5v#1DqpfU5v#1DrpVU5v#1DsqGU5v#1DtqbU5v#1DuqYU5v#1DvqGU5v#1DwrvU5v#1DxrQU5v#1DyrGU5v#1DztaU5v#1E0trU5v#1E1tzU5v#1E2t@1GU5v#1E3t@1PU5v#1E4tMU5v#1E5tGU5v#1E6uCU5v#1E7uYU5v#1E8uWU5v#1E9vRU5v#1EAvPU5v#1EBwJU5v#1ECwCU5v#1ED@108U5v#1EE@11GU5v#1EF@11GU5v#1EG@12NU5v#1EH@12GU5v#1EI@19pU5v#1EJ@19vU5v#1EK@19@1EU5v#1EL@19CU5v#1EM@1BLU5v#1EN@1BsU5v#1EO@1BrU5v#1EP@1BJU5v#1EQ@1CGU5v#1ER@1CPU5v#1ES@1CNU5v#1ET@1CGU5v#1EU@1DVU5v#1EV@1DTU5v#1EW@1EJU5v#1EX@1ETU5v#1EY@1EQU5v#1EZ@1EJU5v#1Ea@1E@1FU5v#1Eb@1EgU5v#1Ec@1EWU5v#1Ed@1FNU5v#1Ee@1FGU5v#1Ef@1IGU5v#1Eg@1IGU5v#1Eh@1MrU5v#1Ei@1MIU5v#1Ej@1NKU5v#1Ek@1NPU5v#1El@1NMU5v#1Em@1NKU5v#1En@1OqU5v#1Eo@1OoU5v#1Ep@1PqU5v#1Eq@1PoU5v#1Es@1RKU5v#1Et@1RnU5v#1Eu@1RnU5v#1Ev@1RnU5v#1Ew@1WKU5v#1Ex@1WqU5v#1Ey@1WoU5v#1Ez@1WKU5v#1F0@1XVU5v#1F1@1XUU5v#1F2@1bJU5v#1F3@1bCU5v#1F4@1eFU5v#1F5@1ffU5v#1F6@1fpU5v#1F7@1feU5v#1F8@1fCU5v#1F9@1iFU5v#1FA@1jfU5v#1FB@1jpU5v#1FC@1jeU5v#1FD@1jCU5v#1FE@1mFU5v#1FF@1nHU5v#1FG@1nGU5v#1FH@1nGU5v#1FI@1okU5v#1FJ@1ojU5v#1FK@1oLU5v#1FL@1pRU5v#1FM@1pWU5v#1FN@1pVU5v#1FO@1pPU5v#1FP@1qOU5v#1FQ@1qTU5v#1FR@1qSU5v#1FS@1qMU5v#1FT@1rPU5v#1FU@1rUU5v#1FV@1rTU5v#1FW@1rNU5v#1FX@1tkU5v#1FY@1tUU5v#1FZ@1tOU5v#1Fa@1uCU5v#1Fb@1uWU5v#1Fc@1uUU5v#1Fd@1vCU5v#1Fe@1vXU5v#1Ff@1vVU5v#1Fg@1xGU5v#1Fh@1xGU5v#1Fi@1yTU5v#1Fj@1yNU5v#1Fk@1zGU5v#1Fl@1zcU5v#1Fm@1zaU5v#1Fn@21KU5v#1Fo@22KU5v#1Fp@23KU5v#1Fq@20GU5v#1Fr@24NU5v#1Fs@24GU5v#1Ft@27PU5v#1Fu@27WU5v#1Fv@27OU5v#1Fw@27MU5v#1Fx@28GU5v#1Fy@28GU5v#1Fz@29TU5v#1G0@29NU5v#1G1@2AGU5v#1G2@2AcU5v#1G3@2AaU5v#1G4@2CKU5v#1G5@2DKU5v#1G6@2EKU5v#1G7@2BGU5v#1G8@2GRU5v#1G9@2GQU5v#1GA@2HOU5v#1GB@2HMU5v#1GC@2IOU5v#1GD@2IbU5v#1GE@2INU5v#1GF@2INU5v#1GG@2JVU5v#1GH@2JUU5v#1GI@2KKU5v#1GJ@2KTU5v#1GK@2KQU5v#1GL@2KKU5v#1GM@2LOU5v#1GN@2LWU5v#1GO@2LUU5v#1GP@2LOU5v#1GQ@2LhU5v#1GR@2LfU5v#1GT@2NGU5v#1GU@2NXU5v#1GW@2QKU5v#1GX@2RKU5v#1GY@2SKU5v#1GZ@2PGU5v#1Ga@2WHU5v#1Gb@2WRU5v#1Gc@2WQU5v#1Gd@2WGU5v#1Ge@2WGU5v#1Gf@2W@1EU5v#1Gg@2WfU5v#1Gh@2WVU5v#1Gi@2YrU5v#1Gj@2YyU5v#1Gk@2Y@16U5v#1Gl@2YOU5v#1Gm@2YIU5v#1Gn@2ZCU5v#1Go@2ZaU5v#1Gp@2ZYU5v#1Gq@2aJU5v#1Gr@2aCU5v#1Gs@2dFU5v#1Gt@2erU5v#1Gu@2eqU5v#1Gv@2eHU5v#1Gw@2fGU5v#1Gx@2fOU5v#1Gy@2fLU5v#1Gz@2fGU5v#1H0@2f@1GU5v#1H1@2f@1pU5v#1H2@2feU5v#1H3@2fUU5v#1H4@2gGU5v#1H5@2gLU5v#1H6@2gKU5v#1H7@2gRU5v#1H8@2gOU5v#1H9@2gGU5v#1HA@2g@1XU5v#1HB@2g@1dU5v#1HC@2g@1bU5v#1HD@2g@1oU5v#1HE@2g@1mU5v#1HF@2gyU5v#1HG@2goU5v#1HH@2hJU5v#1HI@2hCU5v#1HJS8U5v#1HL84U5v#1HML8V5v#1HNLbV5v#1HOLUV5v#1HPM8V5v#1HQMcV5v#1HRMVV5v#1HSC8V5v#1HTCgV5v#1HUCZV5v#1HVDQV5v#1HWDOV5v#1HXERV5v#1HYEPV5v#1HZFGV5v#1HaFGV5v#1HbGxV5v#1HcG@1aV5v#1HdG@1hV5v#1HeG@1ZV5v#1HfGhV5v#1HgGbV5v#1Hi14V5v#1HkEbW5v#1HlELW5v#1HmFcW5v#1HnFLW5v#1HpHFW5v#1HqHwW5v#1HrHkW5v#1HsIpW5v#1HtJLW5v#1HuJyW5v#1HvJxW5v#1HwJJW5v#1HxKGW5v#1HyKQW5v#1HzKNW5v#1I0KGW5v#1I1LNW5v#1I2LaW5v#1I3LlW5v#1I4LkW5v#1I5LLW5v#1I6MPW5v#1I7M@12W5v#1I8M@11W5v#1I9MNW5v#1IANKW5v#1IBNUW5v#1ICNRW5v#1IDNKW5v#1IEOKW5v#1IFOtW5v#1IGO@15W5v#1IHO@13W5v#1IISGW5v#1IJSQW5v#1IKSNW5v#1ILSGW5v#1IMT@12W5v#1INT@1aW5v#1IOTQW5v#1IPTGW5v#1IQWGW5v#1IRWQW5v#1ISWTW5v#1ITWaW5v#1IUWZW5v#1IVWgW5v#1IWWdW5v#1IXWGW5v#1IYX@12W5v#1IZX@28W5v#1IaXQW5v#1IbXGW5v#1IcaJW5v#1IdaCW5v#1IedFW5v#1IfepW5v#1IgfSW5v#1IhfRW5v#1IifbW5v#1IjfYW5v#1IkfGW5v#1Ilf@1XW5v#1Imf@13W5v#1InftW5v#1IogHW5v#1IpgvW5v#1IqguW5v#1IrgFW5v#1IshGW5v#1IthMW5v#1IuhJW5v#1IvhGW5v#1Iwh@1EW5v#1Ixh@1vW5v#1IyhcW5v#1IzhSW5v#1J0iJW5v#1J1ipW5v#1J2ioW5v#1J3iCW5v#1J4lFW5v#1J5mGW5v#1J6msW5v#1J7mpW5v#1J8mGW5v#1J9myW5v#1JAnRW5v#1JBnPW5v#1JCoOW5v#1JDoMW5v#1JEpnW5v#1JFplW5v#1JGqkW5v#1JHqiW5v#1JIsNW5v#1JJsLW5v#1JKtSW5v#1JLtQW5v#1JMuSW5v#1JNuQW5v#1JQvOW5v#1JRvdW5v#1JSvcW5v#1JTvOW5v#1JUvCW5v#1JVwOW5v#1JWwZW5v#1JXwYW5v#1JYwMW5v#1JZxOW5v#1JaxUW5v#1JbxTW5v#1JcxbW5v#1JdxGW5v#1Je@10cW5v#1Jf@10iW5v#1Jg@10hW5v#1Jh@10aW5v#1Ji@11gW5v#1Jj@11mW5v#1Jk@11lW5v#1Jl@11fW5v#1Jm@11QW5v#1Jn@12gW5v#1Jo@12mW5v#1Jp@12lW5v#1Jq@12fW5v#1Jr@12QW5v#1Js@13ZW5v#1Jt@13fW5v#1Ju@13eW5v#1Jv@13oW5v#1Jw@13nW5v#1Jx@13xW5v#1Jy@13XW5v#1Jz@14OW5v#1K0@14bW5v#1K1@14oW5v#1K2@14@1GW5v#1K3@14@1TW5v#1K4@14@1WW5v#1K5@14nW5v#1K6@14lW5v#1K7@15OW5v#1K8@18eW5v#1K9@18kW5v#1KA@18jW5v#1KB@18cW5v#1KC@19VW5v#1KD@19bW5v#1KE@19aW5v#1KF@19kW5v#1KG@19jW5v#1KH@19tW5v#1KI@19TW5v#1KJ@1AOW5v#1KK@1AYW5v#1KL@1BSW5v#1KM@1BaW5v#1KN@1CSW5v#1KO@1CYW5v#1KP@1DSW5v#1KQ@1DcW5v#1KR@1ApW5v#1KS@1AnW5v#1KT@1FOW5v#1KU@1FyW5v#1KV@1F@16W5v#1KW@1F@14W5v#1KX@1GOW5v#1KY@1JQW5v#1KZ@1JOW5v#1Ka@1JOW5v#1Kb@1JQW5v#1Kc@1KkW5v#1Kd@1KqW5v#1Ke@1KpW5v#1Kf@1KjW5v#1Kg@1KUW5v#1Kh@1LlW5v#1Ki@1LrW5v#1Kj@1LqW5v#1Kk@1LkW5v#1Kl@1LVW5v#1Km@1MSW5v#1Kn@1MbW5v#1Ko@1MYW5v#1Kp@1MdW5v#1Kq@1MgW5v#1Kr@1MqW5v#1Ks@1MnW5v#1Kt@1MSW5v#1Ku@1NaW5v#1Kv@1NYW5v#1Kw@1ObW5v#1Kx@1OZW5v#1Ky@1QOW5v#1Kz@1QYW5v#1L0@1QXW5v#1L1@1QnW5v#1L2@1QmW5v#1L3@1QxW5v#1L4@1RSW5v#1L5@1RbW5v#1L6@1SSW5v#1L7@1ScW5v#1L8@1TSW5v#1L9@1TbW5v#1LA@1Q@1EW5v#1LB@1Q@1CW5v#1LC@1VOW5v#1LD@1YcW5v#1LE@1YiW5v#1LF@1YhW5v#1LG@1YaW5v#1LH@1ZgW5v#1LI@1ZmW5v#1LJ@1ZlW5v#1LK@1ZfW5v#1LL@1ZQW5v#1LM@1agW5v#1LN@1amW5v#1LO@1alW5v#1LP@1afW5v#1LQ@1aQW5v#1LR@1bkW5v#1LS@1bqW5v#1LT@1bpW5v#1LU@1bjW5v#1LV@1bUW5v#1LW@1clW5v#1LX@1crW5v#1LY@1cqW5v#1LZ@1ckW5v#1La@1cVW5v#1Lb@1dkW5v#1Lc@1dqW5v#1Ld@1dpW5v#1Le@1djW5v#1Lf@1dUW5v#1Lg@1eOW5v#1Lh@1eYW5v#1Li@1eXW5v#1Lj@1enW5v#1Lk@1emW5v#1Ll@1exW5v#1Lm@1ewW5v#1Ln@1e@1CW5v#1Lo@1e@1BW5v#1Lp@1fTW5v#1Lq@1fgW5v#1Lr@1fjW5v#1Ls@1fmW5v#1Lt@1ftW5v#1Lu@1f@11W5v#1Lv@1fSW5v#1Lw@1e@1OW5v#1Lx@1gOW5v#1Ly@1igW5v#1Lz@1imW5v#1M0@1ilW5v#1M1@1ifW5v#1M2@1iQW5v#1M3@1jgW5v#1M4@1jmW5v#1M5@1jlW5v#1M6@1jfW5v#1M7@1jQW5v#1M8@1kkW5v#1M9@1kqW5v#1MA@1kpW5v#1MB@1kjW5v#1MC@1kUW5v#1MD@1llW5v#1ME@1lrW5v#1MF@1lqW5v#1MG@1lkW5v#1MH@1lVW5v#1MI@1mZW5v#1MJ@1mfW5v#1MK@1meW5v#1ML@1moW5v#1MM@1mnW5v#1MN@1mxW5v#1MO@1mXW5v#1MP@1nOW5v#1MQ@1nbW5v#1MR@1noW5v#1MS@1n@1BW5v#1MT@1n@1QW5v#1MU@1n@1fW5v#1MV@1n@1iW5v#1MW@1n@1lW5v#1MX@1n@1sW5v#1MY@1nnW5v#1MZ@1nlW5v#1Ma@1oWW5v#1Mb@1o@1BW5v#1Mc@1o@1AW5v#1Md@1oWW5v#1Me@1o@1TW5v#1Mf@1oUW5v#1Mg@1pOW5v#1Mh@1pzW5v#1Mi@1p@1GW5v#1Mj@1p@1EW5v#1Mk@1qOW5v#1Ml@1qYW5v#1Mm@1qXW5v#1Mn@1rOW5v#1Mo@1ucW5v#1Mp@1uiW5v#1Mq@1uhW5v#1Mr@1uaW5v#1Ms@1vkW5v#1Mt@1vqW5v#1Mu@1vpW5v#1Mv@1vjW5v#1Mw@1vUW5v#1Mx@1wlW5v#1My@1wrW5v#1Mz@1wqW5v#1N0@1wkW5v#1N1@1wVW5v#1N2@1xkW5v#1N3@1xqW5v#1N4@1xpW5v#1N5@1xjW5v#1N6@1xUW5v#1N7@1yZW5v#1N8@1yfW5v#1N9@1yeW5v#1NA@1yoW5v#1NB@1ynW5v#1NC@1yxW5v#1ND@1yXW5v#1NE@20QW5v#1NF@20OW5v#1NG@20OW5v#1NH@20QW5v#1NI@21OW5v#1NJ@21YW5v#1NK@21XW5v#1NL@21nW5v#1NM@21mW5v#1NN@21xW5v#1NO@22SW5v#1NP@22bW5v#1NQ@23SW5v#1NR@23cW5v#1NS@24SW5v#1NT@25XW5v#1NU@25kW5v#1NV@25nW5v#1NW@25qW5v#1NX@25xW5v#1NY@25@15W5v#1NZ@25WW5v#1Na@24bW5v#1Nb@21@1EW5v#1Nc@21@1CW5v#1Nd@28WW5v#1Ne@28@1BW5v#1Nf@28@1AW5v#1Ng@28WW5v#1Nh@28@1TW5v#1Ni@28UW5v#1Nj@29OW5v#1Nk@29zW5v#1Nl@29@1GW5v#1Nm@29@1EW5v#1Nn@2AOW5v#1No@2AYW5v#1Np@2AXW5v#1Nq@2BOW5v#1Nr@2BbW5v#1Ns@2BoW5v#1Nt@2B@1BW5v#1Nu@2B@1QW5v#1Nv@2B@1fW5v#1Nw@2B@1iW5v#1Nx@2B@1lW5v#1Ny@2B@1sW5v#1Nz@2BnW5v#1O0@2BlW5v#1O1@2COW5v#1O2@2ISW5v#1O3@2JSW5v#1O4@2JYW5v#1O5@2JXW5v#1O6@2JfW5v#1O7@2JhW5v#1O8@2HiW5v#1O9@2HYW5v#1OA@2HOW5v#1OH@2OPW5v#1OI@2O@16W5v#1OJ@2OPW5v#1OK@2OCW5v#1OL@2PGW5v#1OM@2PQW5v#1ORlFW5v#1OUA4W5v#1OW@1chX5v#1OX@1cnX5v#1OY@1cgX5v#1OZ@1cLX5v#1OboFX5v#1OcpeX5v#1OdpkX5v#1OepdX5v#1OfpCX5v#1OgsFX5v#1OhteX5v#1OitkX5v#1OjtdX5v#1OktCX5v#1OlwFX5v#1Om@10GX5v#1On@10RX5v#1Oo@10gX5v#1Op@10fX5v#1Oq@10pX5v#1Or@10mX5v#1Os@10GX5v#1Ot@11PX5v#1Ou@11NX5v#1Ox@12PX5v#1Oy@12PX5v#1Oz@12GX5v#1P0@13KX5v#1P1@13qX5v#1P2@13tX5v#1P3@13@12X5v#1P4@13pX5v#1P5@13UX5v#1PA@15mX5v#1PB@15RX5v#1PC@15GX5v#1PD@19sX5v#1PE@19rX5v#1PF@19HX5v#1PG@1BYX5v#1PH@1BeX5v#1PI@1BNX5v#1PJ@1BCX5v#1PK@1E8X5v#1PL@1FHX5v#1PM@1FGX5v#1PN@1FGX5v#1PO@1F@1GX5v#1PP@1FhX5v#1PQ@1FXX5v#1PR@1JGX5v#1PS@1JWX5v#1PT@1JTX5v#1PU@1JGX5v#1PV@1KfX5v#1PW@1KrX5v#1PX@1KeX5v#1PY@1LVX5v#1PZ@1LTX5v#1Pa@1OqX5v#1Pb@1O@14X5v#1Pc@1OpX5v#1Pd@1OGX5v#1Pe@1PGX5v#1Pf@1PKX5v#1Pg@1PJX5v#1Ph@1PQX5v#1Pi@1PNX5v#1Pj@1PGX5v#1Pk@1Q@12X5v#1Pl@1Q@1KX5v#1Pm@1Q@1IX5v#1Pn@1Q@1XX5v#1Po@1Q@1VX5v#1Pp@1Q@29X5v#1Pq@1QQX5v#1Pr@1QGX5v#1Ps@1TIX5v#1Pt@1TVX5v#1Pu@1TZX5v#1Pv@1TYX5v#1Pw@1TUX5v#1Px@1TGX5v#1Py@1VsX5v#1Pz@1VwX5v#1Q0@1VvX5v#1Q1@1V@10X5v#1Q2@1V@14X5v#1Q3@1V@13X5v#1Q4@1V@18X5v#1Q5@1VPX5v#1Q6@1VJX5v#1Q7@1WCX5v#1Q8@1WbX5v#1Q9@1WeX5v#1QA@1WZX5v#1QB@1XCX5v#1QC@1XOX5v#1QD@1XSX5v#1QE@1XRX5v#1QF@1XMX5v#1QG@1YCX5v#1QH@1YOX5v#1QI@1YSX5v#1QJ@1YRX5v#1QK@1YMX5v#1QL@1ZJX5v#1QM@1ZCX5v#1QN@1d8X5v#1QO@1eGX5v#1QP@1eGX5v#1QQ@1edX5v#1QR@1eWX5v#1QS@1fCX5v#1QT@1fZX5v#1QU@1fYX5v#1QV@1gGX5v#1QW@1gkX5v#1QX@1gjX5v#1QY@1gGX5v#1QZ@1hXX5v#1Qa@1hVX5v#1Qb@1jJX5v#1Qc@1jCX5v#1Qd@1m8X5v#1Qe@1nGX5v#1Qf@1nGX5v#1Qg@1ndX5v#1Qh@1nWX5v#1Qi@1oCX5v#1Qj@1oZX5v#1Qk@1oYX5v#1Ql@1pGX5v#1Qm@1pkX5v#1Qn@1pjX5v#1Qo@1pGX5v#1Qp@1qXX5v#1Qq@1qVX5v#1Qr@1rNX5v#1Qs@1rGX5v#1Qt@1tJX5v#1Qu@1tnX5v#1Qv@1tmX5v#1Qw@1tCX5v#1Qx@1w8X5v#1Qy@1xSX5v#1Qz@1xdX5v#1R0@1xcX5v#1R1@1xQX5v#1R2@1yLX5v#1R3@1yJX5v#1R6@1zRX5v#1R7@1zjX5v#1R8@1zRX5v#1R9@1zCX5v#1RA@20OX5v#1RB@20cX5v#1RC@20bX5v#1RD@20MX5v#1RE@21tX5v#1RF@21zX5v#1RG@21yX5v#1RH@21@19X5v#1RI@21@1FX5v#1RJ@21@1EX5v#1RK@21QX5v#1RL@21KX5v#1RM@22MX5v#1RN@22PX5v#1RO@22KX5v#1RP@23GX5v#1RQ@23OX5v#1RT@24SX5v#1RU@24YX5v#1RV@24XX5v#1RW@24SX5v#1RX@24GX5v#1RY@25RX5v#1RZ@25WX5v#1Ra@25VX5v#1Rb@25PX5v#1Rc@26OX5v#1Rd@26TX5v#1Re@26SX5v#1Rf@26MX5v#1Rg@27OX5v#1Rh@27TX5v#1Ri@27SX5v#1Rj@27MX5v#1Rk@28KX5v#1Rl@28TX5v#1Rm@28fX5v#1Rn@28eX5v#1Ro@28mX5v#1Rp@28pX5v#1Rq@28SX5v#1Rv@2AGX5v#1Rw@2AQX5v#1Rx@2BNX5v#1Ry@2BTX5v#1Rz@2BeX5v#1S0@2BbX5v#1S1@2BNX5v#1S2@2BpX5v#1S3@2B@10X5v#1S4@2BzX5v#1S6@2CGX5v#1S7@2CNX5v#1S8@2CYX5v#1S9@2CWX5v#1SE@2ERX5v#1SF@2EPX5v#1SG@2FTX5v#1SH@2FRX5v#1SI@2GPX5v#1SJ@2GNX5v#1SK@1w8X5v#1SL@2J8X5v#1SM@2KJX5v#1SN@2KuX5v#1SO@2KtX5v#1SP@2K@19X5v#1SQ@2KCX5v#1SRJ8X5v#1SSKPX5v#1STKNX5v#1SULPX5v#1SVLUX5v#1SWLTX5v#1SXLNX5v#1SYMNX5v#1SZMSX5v#1SaMRX5v#1SbMLX5v#1ScOLX5v#1SdOQX5v#1SeOPX5v#1SfOJX5v#1SgPKX5v#1ShPIX5v#1SkQPX5v#1SlQcX5v#1SmQPX5v#1SnQCX5v#1SoRGX5v#1SpRTX5v#1SqRZX5v#1SrRYX5v#1SsRSX5v#1SxURX5v#1SyUWX5v#1SzUPX5v#1T0WGX5v#1T1WGX5v#1T2X@1AX5v#1T3XZX5v#1T4X@1LX5v#1T5XTX5v#1T7ZPX5v#1T8ZNX5v#1TBaSX5v#1TCaSX5v#1TDaGX5v#1TEbUX5v#1TFbZX5v#1TGbYX5v#1THbSX5v#1TIcSX5v#1TJcXX5v#1TKcWX5v#1TLcQX5v#1TMdTX5v#1TNdYX5v#1TOdXX5v#1TPdRX5v#1TQeKX5v#1TReRX5v#1TSfOX5v#1TTgOX5v#1TUiOX5v#1TViVX5v#1TWexX5v#1TXeaX5v#1TckfX5v#1TdkeX5v#1Tf14X5v#1Tg@2X8X5v#1Tj@2YOX5v#1Tk@2YOX5v#1Tl@2YCX5v#1Tm@2ZQX5v#1Tn@2ZVX5v#1To@2ZUX5v#1Tp@2ZOX5v#1Tq@2aOX5v#1Tr@2aTX5v#1Ts@2aSX5v#1Tt@2aMX5v#1Tu@2bPX5v#1Tv@2bUX5v#1Tw@2bTX5v#1Tx@2bNX5v#1Ty@2cGX5v#1Tz@2cWX5v#1U0@2dKX5v#1U1@2eKX5v#1U2@2gKX5v#1U3@2gRX5v#1U4@2c@12X5v#1U5@2cfX5v#1UA@2iJX5v#1UB@2iCX5v#1UC@2l8X5v#1UD@2mGX5v#1UE@2mVX5v#1UF@2mfX5v#1UG@2mdX5v#1UH@2mGX5v#1UK@2nRX5v#1UL@2nlX5v#1UM@2nRX5v#1UN@2nGX5v#1UO@2oOX5v#1UP@2oeX5v#1UQ@2odX5v#1UR@2opX5v#1US@2oOX5v#1UT@2pOX5v#1UU@2pdX5v#1UV@2pkX5v#1UW@2p@10X5v#1UX@2pzX5v#1UY@2p@1DX5v#1UZ@2piX5v#1Ua@2qOX5v#1Ub@2qlX5v#1Uc@2qkX5v#1Uh@2vGX5v#1Ui@2vVX5v#1Uj@2vgX5v#1Uk@2vdX5v#1Ul@2vGX5v#1Um@2wGX5v#1Un@2wKX5v#1Uo@2wPX5v#1Up@2wNX5v#1Uq@2xGX5v#1Ur@2xKX5v#1Us@2xPX5v#1Ut@2xNX5v#1Uv@2zGX5v#1Uw@2zKX5v#1Ux@2zPX5v#1Uy@2zNX5v#1Uz@30GX5v#1V0@30KX5v#1V1@30PX5v#1V2@30VX5v#1V3@30jX5v#1V4@30TX5v#1V5@30tX5v#1V6@30@13X5v#1V7@30rX5v#1V8@30NX5v#1V9@2l8X5v#1VA@2T8X5v#1VB@2UPX5v#1VC@2UNX5v#1VE@2O4X5v#1VG8XY5v#1VH8LY5v#1VJp8Y5v#1VKqdY5v#1VLqvY5v#1VMqtY5v#1VNq@11Y5v#1VOqzY5v#1VPqbY5v#1VQp8Y5v#1VRt8Y5v#1VSuRY5v#1VTuPY5v#1VUvCY5v#1VVvRY5v#1VWvRY5v#1VXvRY5v#1VYwgY5v#1VZt8Y5v#1Vaz8Y5v#1Vb@10pY5v#1Vc@10CY5v#1Vd@11RY5v#1Ve@11PY5v#1Vfz8Y5v#1Vg@148Y5v#1Vh@15KY5v#1Vi@15PY5v#1Vj@15IY5v#1Vk@16CY5v#1Vl@16WY5v#1Vm@17TY5v#1Vn@19PY5v#1Vo@19NY5v#1Vp@1AOY5v#1Vq@1AMY5v#1Vr@1BQY5v#1Vs@1BUY5v#1Vt@1BZY5v#1Vu@1BSY5v#1Vv@1BOY5v#1Vw@1CRY5v#1Vx@1CVY5v#1Vy@1CaY5v#1Vz@1CTY5v#1W0@1CPY5v#1W1@1DPY5v#1W2@1DNY5v#1W3@1EOY5v#1W4@1EMY5v#1W5@1FQY5v#1W6@1FVY5v#1W7@1FOY5v#1W8@1GRY5v#1W9@1GWY5v#1WA@1GPY5v#1WB@1HGY5v#1WC@1HUY5v#1WD@1HSY5v#1WE@1HWY5v#1WF@1IGY5v#1WG@1IVY5v#1WH@1ITY5v#1WI@1IXY5v#1WJ@1JGY5v#1WK@1JTY5v#1WL@1JQY5v#1WM@1JfY5v#1WN@1KGY5v#1WO@1KUY5v#1WP@1KRY5v#1WQ@1HGY5v#1WR@1KgY5v#1WS@1MGY5v#1WT@1MVY5v#1WU@1MSY5v#1WV@1MGY5v#1WW@1NNY5v#1WX@1NbY5v#1WY@1NZY5v#1WZ@1NLY5v#1Wa@1OGY5v#1Wb@1OVY5v#1Wc@1OSY5v#1Wd@1OGY5v#1We@1PGY5v#1Wf@1PVY5v#1Wg@1PSY5v#1Wh@1PGY5v#1Wi@1RGY5v#1Wj@1RWY5v#1Wk@1RTY5v#1Wl@1RGY5v#1Wm@1SNY5v#1Wn@1ScY5v#1Wo@1SaY5v#1Wp@1SLY5v#1Wq@1TGY5v#1Wr@1TWY5v#1Ws@1TTY5v#1Wt@1TGY5v#1Wu@1UGY5v#1Wv@1UWY5v#1Ww@1UTY5v#1Wx@1UGY5v#1Wy@1WGY5v#1Wz@1WTY5v#1X0@1WRY5v#1X1@1WGY5v#1X2@1XOY5v#1X3@1XNY5v#1X4@1XLY5v#1X5@1YTY5v#1X6@1YRY5v#1X7@1ZGY5v#1X8@1ZUY5v#1X9@1ZRY5v#1XA@1ZGY5v#1XB@1bGY5v#1XC@1bSY5v#1XD@1bQY5v#1XE@1bGY5v#1XF@1cOY5v#1XG@1cNY5v#1XH@1cLY5v#1XI@1dSY5v#1XJ@1dQY5v#1XK@1eGY5v#1XL@1eTY5v#1XM@1eQY5v#1XN@1eGY5v#1XO@1gGY5v#1XP@1gUY5v#1XQ@1gSY5v#1XR@1gEY5v#1XS@1hGY5v#1XT@1hVY5v#1XU@1hTY5v#1XV@1hEY5v#1XW@1iGY5v#1XX@1iLY5v#1XY@1iIY5v#1XZ@1iNY5v#1Xa@1iQY5v#1Xb@1iVY5v#1Xc@1iSY5v#1Xd@1iGY5v#1Xe@1iYY5v#1Xf@1lcY5v#1Xg@1liY5v#1Xh@1lpY5v#1Xi@1l@11Y5v#1Xj@1l@1CY5v#1Xk@1l@1OY5v#1Xl@1l@1ZY5v#1Xm@1l@1cY5v#1Xn@1lCY5v#1Xo@148Y5v#1Xp@1o8Y5v#1Xq@1pGY5v#1Xr@1pGY5v#1Xs@1p@19Y5v#1Xt@1peY5v#1Xu@1pUY5v#1Xv@1o8Y5v#1Xw@1s8Y5v#1Xx@1tHY5v#1Xy@1tGY5v#1Xz@1tGY5v#1Y0@1t@1AY5v#1Y1@1tfY5v#1Y2@1tVY5v#1Y3@1s8Y5v#1Y4M8Y5v#1Y5IRY5v#1Y6IqY5v#1Y7IqY5v#1Y8IqY5v#1Y9IRY5v#1YAI8Y5v#1YBOKY5v#1YCOCY5v#1YDQXY5v#1YEQcY5v#1YFQbY5v#1YGQVY5v#1YHRYY5v#1YIRdY5v#1YJRcY5v#1YKRWY5v#1YLSKY5v#1YMUSY5v#1YNUXY5v#1YOUWY5v#1YPUQY5v#1YQVXY5v#1YRVcY5v#1YSVVY5v#1YTWYY5v#1YUWdY5v#1YVWWY5v#1YWXKY5v#1YXZKY5v#1YYcGY5v#1YZcVY5v#1YacSY5v#1YbcGY5v#1YcdvY5v#1Ydd@11Y5v#1Yed@1DY5v#1YfdGY5v#1YgeKY5v#1YheZY5v#1YieWY5v#1YjeKY5v#1YkfKY5v#1YlfZY5v#1YmfZY5v#1YnfZY5v#1YogTY5v#1YphUY5v#1YqhbY5v#1YrhTY5v#1YsiVY5v#1YtmgY5v#1Yv64Y&J0source/Agent.cry~0A// Interface for an agent, which controls a character.~0D~0Aclass Agent {~0D~0A~09field env;~0D~0A~0D~0A~09constructor(env) {~0D~0A~09@1this.env = env;~0D~0A~09}~0D~0A~0D~0A~09// Exerts control over the given character.~0D~0A~09function control(character) {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A~0D~0A~09// Whether this agent controls the time step.~0D~0A~09function controlsTime() {~0D~0A~09@1throw new Exception(~0YAbstract method not overridden!~0Y);~0D~0A~09}~0D~0A}~0D~0A%&J1[Core]~0A%&J2[Core:core.cry]~0Anamespace Core {~0A @3const CRAYON_VERSION = ~0Y0.2.0~0Y;~0A@1 @3enum Type {~0A @7NULL = 0,~0A @7BOOLEAN = 1,~0A @7INTEGER = 2,~0A @7FLOAT = 3,~0A @7STRING = 4,~0A @7LIST = 5,~0A @7DICTIONARY = 6,~0A @7OBJECT = 7,~0A @7FUNCTION = 8,~0A @7CLASS = 9,~0A @3}~0A@1 @3function assert(condition, message = null) {~0A @7return $@2(~0dassert~0d, condition, message, true);~0A @3}~0A@1 @3function fail(message) {~0A @7return $@2(~0dassert~0d, false, message, false);~0A @3}~0A@1 @3function chr(value) {~0A @7return $@2(~0dchr~0d, value);~0A @3}~0A@1 @3function currentTime() {~0A @7return $@2(~0dcurrentTime~0d);~0A @3}~0A@1 @3function ord(value) {~0A @7return $@2(~0dord~0d, value);~0A @3}~0A@1 @3function parseFloat(value) {~0A @7return $@2(~0dparseFloat~0d, value);~0A @3}~0A@1 @3function parseInt(value) {~0A @7return $@2(~0dparseInt~0d, value);~0A @3}~0A@1 @3function print(value) {~0A @7return $@2(~0dprint~0d, value);~0A @3}~0A@1 @3function sleep(seconds) {~0A @7Core.assert(~0A @B$@2(~0dtypeis~0d, seconds, Core.Type.INTEGER, Core.Type.FLOAT) &&~0A @Bseconds >= 0, ~0YInvalid argument.~0Y);~0A @7return $@2(~0dsleep~0d, seconds);~0A @3}~0A@1 @3function typeof(value) {~0A @7return $@2(~0dtypeof~0d,value);~0A @3}~0A@1 @3function isString(value) {~0A @7return $@2(~0dtypeis~0d, value, Core.Type.STRING);~0A @3}~0A@1 @3function isNumber(value) {~0A @7return $@2(~0dtypeis~0d, value, Core.Type.INTEGER, Core.Type.FLOAT);~0A @3}~0A@1 @3function _LIB_CORE_list_sort_by_key(fp, list) {~0A @7if (list.length > 1) {~0A @B$@2(~0dsortList~0d, list, _LIB_CORE_list_map(fp, list));~0A @7}~0A @3}~0A@1 @3function _LIB_CORE_list_map(fp, list) {~0A @7output = [];~0A @7for (t : list) {~0A @Boutput.add(fp(t));~0A @7}~0A @7return output;~0A @3}~0A@1 @3function _LIB_CORE_list_filter(fp, list) {~0A @7output = [];~0A @7for (t : list) {~0A @Bb = fp(t);~0A @Bif (!$@2(~0dtypeis~0d, b, Core.Type.BOOLEAN)) {~0A @FCore.fail(~0YFilter function returned a non-boolean value.~0Y);~0A @B}~0A @Bif (b) {~0A @Foutput.add(t);~0A @B}~0A @7}~0A @7return output;~0A @3}~0A@1 @3function getCurrentExecutionToken() {~0A @7return $@2(~0dexecId~0d);~0A @3}~0A@1 @3function getExecutionIterationCounter() {~0A @7return $@2(~0dexecCounter~0d);~0A @3}~0A@1 @3function getProjectId() {~0A @7return $@2(~0dprojectId~0d);~0A @3}~0A@1 @3// Interanlly called by fp.invoke(args)~0A @3function _LIB_CORE_invoke(fp, args) {~0A @7// MAGIC ALERT: There is a special compiler hack that checks specifically for this line (based on parent~0A @7// function name) and compiles this function invocation with a special flag to treat the args list as~0A @7// individually passed arguments.~0A @7return fp(args);~0A @3}~0A@1 @3// A simple dummy object.~0A @3// The VM supports attaching native data to any object instance, and so this generally serves as~0A @3// the canonical object to use for that purpose.~0A @3class Object { }~0A}~0A%&J3[Core:exceptions.cry]~0Anamespace Core {~0A @3enum _LIB_CORE_ExType {~0A @7// These must be kept in sync with CoreExceptionTypes in Constants.cry in the interpreter.~0A @7FATAL = 0,~0A @7GENERIC_EXCEPTION = 1,~0A @7ASSERTION_FAILED = 2,~0A @7DIVISION_BY_ZERO = 3,~0A @7INDEX_OUT_OF_RANGE = 4,~0A @7INVALID_ARGUMENT = 5,~0A @7INVALID_ASSIGNMENT = 6,~0A @7INVALID_INVOCATION = 7,~0A @7INVALID_KEY = 8,~0A @7KEY_NOT_FOUND = 9,~0A @7NULL_REFERENCE = 10,~0A @7UNASSIGNED_VARIABLE = 11,~0A @7UNKNOWN_FIELD = 12,~0A @7UNSUPPORTED_OPERATION = 13,~0A @3}~0A@1 @3/*~0A @7When there are VM-generated exceptions (as opposed to exceptions thrown directly from code with the~0A @7throw keyword) the easiest way to go about this is to simply treat it as a function invocation to this~0A @7particular function which itself just uses the throw keyword.~0A @3*/~0A @3function _LIB_CORE_generateException(type, message) {~0A @7switch (type) {~0A @Bcase _LIB_CORE_ExType.FATAL: throw new FatalException(message);~0A @Bcase _LIB_CORE_ExType.ASSERTION_FAILED: throw new AssertionFailedException(message);~0A @Bcase _LIB_CORE_ExType.DIVISION_BY_ZERO: throw new DivisionByZeroException(message);~0A @Bcase _LIB_CORE_ExType.INDEX_OUT_OF_RANGE: throw new IndexOutOfRangeException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_ARGUMENT: throw new InvalidArgumentException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_ASSIGNMENT: throw new InvalidAssignmentException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_INVOCATION: throw new InvalidInvocationException(message);~0A @Bcase _LIB_CORE_ExType.INVALID_KEY: throw new InvalidKeyException(message);~0A @Bcase _LIB_CORE_ExType.KEY_NOT_FOUND: throw new KeyNotFoundException(message);~0A @Bcase _LIB_CORE_ExType.NULL_REFERENCE: throw new NullReferenceException(message);~0A @Bcase _LIB_CORE_ExType.UNASSIGNED_VARIABLE: throw new UnassignedVariableException(message);~0A @Bcase _LIB_CORE_ExType.UNKNOWN_FIELD: throw new UnknownFieldException(message);~0A @Bcase _LIB_CORE_ExType.UNSUPPORTED_OPERATION: throw new UnsupportedOperationException(message);~0A @Bdefault: throw new Exception(message);~0A @7}~0A @3}~0A@1 @3class Exception {~0A @7/*~0A @BnativeData[0] -> (boolean) is fatal exception?~0A @BnativeData[1] -> (List<int>) list of PC~0ds this exception bubbles through~0A @FPC trace is only set when throw is invoked.~0A @7*/~0A@1 @7// Do not re-order these.~0A @7// .message field position within the class is assumed at compile time.~0A @7field cause;~0A @7field message;~0A@1 @7constructor(message = null, cause = null) {~0A @B$@2(~0dallocNativeData~0d, this, 2);~0A @B$@2(~0dsetNativeData~0d, this, 0, false); // is fatal?~0A @Bthis.message = message;~0A @Bthis.cause = cause;~0A @7}~0A@1 @7function getTrace() {~0A @Breturn $@2(~0dgetExceptionTrace~0d, this);~0A @7}~0A @3}~0A@1 @3class FatalException : Exception {~0A @7constructor(m = null, c = null) : base(m, c) {~0A @B$@2(~0dsetNativeData~0d, this, 0, true); // is fatal?~0A @7}~0A @3}~0A@1 @3class AssertionFailedException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class DivisionByZeroException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class IndexOutOfRangeException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidArgumentException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidAssignmentException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidInvocationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidKeyException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class InvalidOperationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class KeyNotFoundException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class NotImplementedException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class NullReferenceException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnassignedVariableException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnknownFieldException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A @3class UnsupportedOperationException : Exception { constructor(m = null, c = null) : base(m, c) { } }~0A}~0A%&J4[Core:reflection.cry]~0Anamespace Core {~0A@1 @3namespace Reflection {~0A@1 @7function getClassFromInstance(instance) {~0A @B// TODO: document what happens when instance is not an instance.~0A @Breturn $@2(~0dreflectGetClass~0d, instance);~0A @7}~0A@1 @7function getClasses(commonBaseClass = null) {~0A @Boutput = $@2(~0dreflectAllClasses~0d);~0A @Bif (commonBaseClass != null) {~0A @Ffiltered = [];~0A @Ffor (c : output) {~0A @Jif (c.isA(commonBaseClass)) {~0A @Nfiltered.add(c);~0A @J}~0A @F}~0A @Freturn filtered;~0A @B}~0A @Breturn output;~0A @7}~0A@1 @7function getMethods(instanceOrClass) {~0A @Bswitch (Core.typeof(instanceOrClass)) {~0A @F// TODO: verify that static methods are returned only from class inputs.~0A @Fcase Core.Type.OBJECT:~0A @Fcase Core.Type.CLASS:~0A @Jreturn $@2(~0dreflectGetMethods~0d, instanceOrClass);~0A @Fdefault:~0A @Jthrow new Core.InvalidArgumentException(~0YCan only get methods from an instance or class reference.~0Y);~0A @B}~0A @7}~0A @3}~0A}~0A%&J5source/AI.cry~0Aimport Math;~0D~0Aimport Random;~0D~0A~0D~0Aconst AI_TURN_CHANCE = 0.02;~0D~0Aconst AI_TOGGLE_MOVE_CHANCE = 0.02;~0D~0Aconst AI_SHOOT_CHANCE = 0.02;~0D~0A~0D~0A// A computer-controlled agent.~0D~0Aclass AI : Agent {~0D~0A~09field direction = 2.0 * Math.PI * Random.randomFloat();~0D~0A~09field speed = CHARACTER_SPEED;~0D~0A~0D~0A~09constructor(env) : base(env) {}~0D~0A~0D~0A~09function control(character) {~0D~0A~09@1if (Random.randomFloat() < AI_TURN_CHANCE) {~0D~0A~09@2this.direction = 2.0 * Math.PI * Random.randomFloat();~0D~0A~09@1}~0D~0A~09@1if (Random.randomFloat() < AI_TOGGLE_MOVE_CHANCE) {~0D~0A~09@2this.speed = this.speed > 0.0 ? 0.0 : CHARACTER_SPEED;~0D~0A~09@1}~0D~0A~09@1if (Random.randomFloat() < AI_SHOOT_CHANCE) {~0D~0A~09@2bulletHeading = this.getTarget().minus(character.pos).normalize();~0D~0A~09@2bulletPos = character.pos.plus(bulletHeading.times(BULLET_SPAWN_DISTANCE));~0D~0A~09@2bulletVel = bulletHeading.times(BULLET_SPEED);~0D~0A~09@2this.env.bullets.add(new Bullet(character, bulletPos, bulletVel));~0D~0A~09@1}~0D~0A~0D~0A~09@1character.vel = new Vec2(Math.cos(this.direction), Math.sin(this.direction)).times(this.speed);~0D~0A~09}~0D~0A~0D~0A~09function controlsTime() { return false; }~0D~0A~0D~0A~09function getTarget() {~0D~0A~09@1for (i = 0; i < this.env.characters.length; ++i) {~0D~0A~09@2if (this.env.characters[i].agent.controlsTime()) {~0D~0A~09@3return this.env.characters[i].pos.clone();~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09@1return new Vec2(Random.randomInt(0, X_RES), Random.randomInt(0, Y_RES));~0D~0A~09}~0D~0A}~0D~0A%&J6[Math]~0Anamespace Math {~0A@1 @3const PI = 3.141592653589793238462;~0A @3const E = 2.718281828459045235360;~0A@1 @3function arccos(ratio) {~0A @7// range is checked in translated code.~0A @7return $@2(~0darcCos~0d, ratio);~0A @3}~0A@1 @3function arcsin(ratio) {~0A @7// range is checked in translated code.~0A @7return $@2(~0darcSin~0d, ratio);~0A @3}~0A@1 @3function arctan(ratio_or_y, x = 1) {~0A @7return $@2(~0darcTan~0d, ratio_or_y, x);~0A @3}~0A@1 @3function cos(theta) {~0A @7return $@2(~0dcos~0d, theta);~0A @3}~0A@1 @3function floor(value) {~0A @7return $@2(~0dfloor~0d, value);~0A @3}~0A@1 @3function sin(theta) {~0A @7return $@2(~0dsin~0d, theta);~0A @3}~0A@1 @3function tan(theta) {~0A @7return $@2(~0dtan~0d, theta);~0A @3}~0A@1 @3// All logarithms are just implemented with natural log and divided by a constant value to change base.~0A @3// An attempt is made to prevent floating point arithmetic from giving bogus values like log10(10@5) -> 5.9@5.@2~0A @3// (see fixFuzzyFloatPrecision in ValueUtil.cry)~0A @3function log10(value) {~0A @7return $@2(~0dln~0d, value, 1 / 2.302585092994046);~0A @3}~0A @3function ln(value) {~0A @7return $@2(~0dln~0d, value, 1.0);~0A @3}~0A @3function log2(value) {~0A @7return $@2(~0dln~0d, value, 1 / 0.6931471805599453);~0A @3}~0A@1 @3// Despite the fact that the following functions are relatively simple and could be implemented in~0A @3// non-translated code, they are relatively common and the native code should be inlined if possible.~0A @3function abs(value) {~0A @7return $@2(~0dabs~0d, value);~0A @3}~0A@1 @3function max(a, b) {~0A @7return $@2(~0dmax~0d, a, b);~0A @3}~0A@1 @3function min(a, b) {~0A @7return $@2(~0dmin~0d, a, b);~0A @3}~0A@1 @3function ensureRange(value, minBound, maxBound) {~0A @7return $@2(~0densureRange~0d, value, minBound, maxBound);~0A @3}~0A@1 @3function sign(num) {~0A @7return $@2(~0dsign~0d, num);~0A @3}~0A}~0A%&J7[Random]~0A%&J8[Random:Random.cry]~0Aimport Math;~0A@1namespace Random {~0A @3function randomFloat() {~0A @7return $$lib_random_random_float();~0A @3}~0A@1 @3// When one argument is provided, it is the max exclusive upper bound and the min is 0.~0A @3function randomInt(minIncl, maxExcl = null) {~0A @7return (maxExcl == null)~0A @B? ($$lib_random_random_int(0, minIncl)~0A @F?? Random._randomIntErrorHelper(~0YFirst argument must be a positive integer.~0Y))~0A @B: ($$lib_random_random_int(minIncl, maxExcl)~0A @F?? Random._randomIntErrorHelper(~0YrandomInt requires two integers, where the latter is larger.~0Y));~0A @3}~0A@1 @3function _randomIntErrorHelper(msg) {~0A @7throw new Core.InvalidArgumentException(msg);~0A @3}~0A@1 @3function randomBool() {~0A @7// could write this as $$lib_random_random_float() < .5, but this way it can get inlined.~0A @7// performance of this function may potentially be important to the user.~0A @7return $$lib_random_random_bool();~0A @3}~0A@1 @3/*~0A @7Returns a boolean that~0ds weighted~0A @72 args: n in d chance that true is returned~0A @71 arg: a float from 0 to 1 that indicates the ratio of trues.~0A @3*/~0A @3function randomChance(n, d = 1) {~0A @7return $$lib_random_random_float() * d < n;~0A @3}~0A}~0A%&J9source/Body.cry~0A// Represents a circular body that can interact with other bodies.~0D~0Aclass Body {~0D~0A~09field pos;~0D~0A~09field vel;~0D~0A~09field radius;~0D~0A~0D~0A~09constructor(pos, vel, radius) {~0D~0A~09@1this.pos = pos;~0D~0A~09@1this.vel = vel;~0D~0A~09@1this.radius = radius;~0D~0A~09}~0D~0A~0D~0A~09// Tests for collision between this and that over the given time step.~0D~0A~09// that: Another Body object.~0D~0A~09// timeStep: The upper bound of the time interval to check. (Lower bound is 0.0.)~0D~0A~09function collidesWith(that, timeStep) {~0D~0A~09@1// Use relative velocity to simplify the math.~0D~0A~09@1v = that.vel.minus(this.vel);~0D~0A~09@1if (v.isZero()) {~0D~0A~09@2return false;~0D~0A~09@1}~0D~0A~0D~0A~09@1collisionRadiusSquared = (this.radius + that.radius) ** 2;~0D~0A~0D~0A~09@1// Quadratic coefficients to solve for the time when the distance between the bodies is equal to the collision radius.~0D~0A~09@1p1 = this.pos;~0D~0A~09@1p2 = that.pos;~0D~0A~09@1a = v.x ** 2 + v.y ** 2;~0D~0A~09@1b = 2 * (p1.x * v.x - v.x * p2.x + p1.y * v.y - v.y * p2.y);~0D~0A~09@1c = p1.x ** 2 + p2.x ** 2 - 2 * p1.x * p2.x + p1.y ** 2 + p2.y ** 2 - 2 * p1.y * p2.y - collisionRadiusSquared;~0D~0A~0D~0A~09@1// Valid collision if a root occurs within the time interval.~0D~0A~09@1roots = Util.getQuadraticRoots(a, b, c);~0D~0A~09@1if (roots.length == 0) {~0D~0A~09@2return false;~0D~0A~09@1} else if (roots.length == 1) {~0D~0A~09@2return 0.0 <= roots[0] && roots[0] <= timeStep;~0D~0A~09@1} else {~0D~0A~09@2return (0.0 <= roots[0] && roots[0] <= timeStep) || (0.0 <= roots[1] && roots[1] <= timeStep);~0D~0A~09@1}~0D~0A~09}~0D~0A}~0D~0A%&JAsource/Bullet.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst BULLET_RADIUS = 3.0;~0D~0Aconst BULLET_DIAMETER = 2 * BULLET_RADIUS;~0D~0Aconst BULLET_SPEED = 15.0;~0D~0Aconst BULLET_TRAIL_FACTOR = 5.0;~0D~0Aconst BULLET_SPAWN_DISTANCE = CHARACTER_RADIUS + BULLET_RADIUS;~0D~0A~0D~0A// A deadly projectile.~0D~0Aclass Bullet : Body {~0D~0A~09field source;~0D~0A~09field initialPos;~0D~0A~0D~0A~09constructor(source, pos, vel) : base(pos, vel, BULLET_RADIUS) {~0D~0A~09@1this.source = source;~0D~0A~09@1this.initialPos = pos.clone();~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1this.pos = this.pos.plus(this.vel.times(timeStep));~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1trail = this.pos.minus(this.vel.times(BULLET_TRAIL_FACTOR));~0D~0A~09@1if (this.pos.minus(this.initialPos).lengthSquared() < this.pos.minus(trail).lengthSquared()) {~0D~0A~09@2trail = this.initialPos;~0D~0A~09@1}~0D~0A~09@1Graphics2D.Draw.line~0D~0A~09@2( Math.floor(this.pos.x + 0.5)~0D~0A~09@2, Math.floor(this.pos.y + 0.5)~0D~0A~09@2, Math.floor(trail.x + 0.5)~0D~0A~09@2, Math.floor(trail.y + 0.5)~0D~0A~09@2, BULLET_DIAMETER~0D~0A~09@2, 255, 0, 0~0D~0A~09@2);~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 0, 0, 0~0D~0A~09@2);~0D~0A~09}~0D~0A}~0D~0A%&JB[Graphics2D]~0A@1%&JC[Graphics2D:Draw.cry]~0Aimport Game;~0A@1namespace Graphics2D {~0A@1 @3enum _DrawCommands {~0A @7RECTANGLE = 1,~0A @7ELLIPSE = 2,~0A @7LINE = 3,~0A @7TRIANGLE = 4,~0A @7QUAD = 5,~0A @7IMAGE = 6,~0A@1 @7TEXT = 7, // Not used directly in Graphics2D. Injected by GraphicsText~0A @3}~0A@1 @3static class Draw {~0A@1 @7static field _queueOld = new Core.Object();~0A @7static field _queue = new Core.Object();~0A @7static field _text_queueOld = null;~0A @7static field _text_queue = null;~0A@1 @7static constructor() {~0A @B// essentially no-ops, but runs the queue initializers.~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queueOld, Graphics2D.Draw._text_queueOld, 0);~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 0);~0A@1 @BGame.GameWindow._frameEndHandlers.add(Graphics2D.Draw._renderer);~0A @BGame.GameWindow._frameBeginHandlers.add(Graphics2D.Draw._rendererReset);~0A @7}~0A@1 @7static function _renderer() {~0A @B// Go through and cap the color arguments to a proper range.~0A @B// Doing this here is two-fold:~0A @B// - only one function call. User-facing draw calls are unencumbered with extra logic.~0A @B// - This is done in Pastel code. Platform-specific renders will get canonicalized data.~0A @B$$lib_graphics2d_renderQueueValidateArgs(Graphics2D.Draw._queue);~0A@1 @B// send the render queue to the platform renderer~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 1);~0A@1 @B// Swap the buffers. The old buffer stays in memory, in tact, while new events get drawn to [text]queue.~0A @Bt = Graphics2D.Draw._queue;~0A @BGraphics2D.Draw._queue = Graphics2D.Draw._queueOld;~0A @BGraphics2D.Draw._queueOld = t;~0A@1 @Bt = Graphics2D.Draw._text_queue;~0A @BGraphics2D.Draw._text_queue = Graphics2D.Draw._text_queueOld;~0A @BGraphics2D.Draw._text_queueOld = t;~0A @7}~0A@1 @7static function _rendererReset() {~0A @B// clear the render queue~0A @BDraw._text_queue = null;~0A @Breturn $$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 2);~0A @7}~0A@1 @7static function ellipse(left, top, width, height, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.ELLIPSE,~0A @Fleft, top, width, height, r, g, b, a);~0A @7}~0A@1 @7static function line(startX, startY, endX, endY, strokeWidth, r, g, b, a = 255) {~0A @Bif (strokeWidth < 1) return;~0A@1 @B// casts all locals that are floats into ints.~0A @B// This is needed because ints are needed for the next two if statements and~0A @B// intQueueWrite16 runs too late.~0A @B$@2(~0dconvertFloatArgsToInts~0d);~0A@1 @B// If the line is horizontal or vertical, use the rectangle drawing code instead.~0A @B// This guarantees clean crisp 1-pixel lines across platforms which is actually~0A @B// probably the most common use case.~0A@1 @Bif (startY == endY) { // horizontal~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.RECTANGLE,~0A @J$@2(~0dmin~0d, startX, endX), // left~0A @JstartY - strokeWidth / 2, // top~0A @J$@2(~0dabs~0d, endX - startX), // width~0A @JstrokeWidth, // height~0A @Jr, g, b, a);~0A @B}~0A@1 @Bif (startX == endX) { // vertical~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.RECTANGLE,~0A @JstartX - strokeWidth / 2, // left~0A @J$@2(~0dmin~0d, startY, endY), // top~0A @JstrokeWidth, // width~0A @J$@2(~0dabs~0d, endY - startY), // height~0A @Jr, g, b, a);~0A @B}~0A@1 @B/*~0A @FGL-based platforms use the quadrilateral method to draw lines.~0A @FFor other platforms, the capping behavior of lines tends to vary~0A @Fso only use the native line drawing method when the line is skinny~0A @Fand different caps aren~0dt noticeable. (1 or 2 pixels wide)~0A@1 @FFor everything else, calculate the coordinates of the quadrilateral~0A @Fthat represents this line and use the platform~0ds polygon drawing method~0A @Finstead.~0A @B*/~0A @Bif (strokeWidth < 3 && !$$lib_graphics2d_isOpenGlBased()) {~0A @Freturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @J_DrawCommands.LINE,~0A @JstartX, startY, endX, endY, strokeWidth, r, g, b, a);~0A @B}~0A@1 @B$@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.QUAD,~0A @FstartX, startY, endX, endY, strokeWidth, 0, 0, 0, r, g, b, a);~0A @B// The above command is just a placeholder. Do the rest of the~0A @B// transformation in translated code.@2~0A @Breturn $$lib_graphics2d_lineToQuad(Graphics2D.Draw._queue);~0A @7}~0A@1 @7static function rectangle(left, top, width, height, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.RECTANGLE,~0A @Fleft, top, width, height, r, g, b, a);~0A @7}~0A@1 @7static function triangle(ax, ay, bx, by, cx, cy, r, g, b, a = 255) {~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.TRIANGLE,~0A @Fax, ay, bx, by, cx, cy, r, g, b, a);~0A @7}~0A@1 @7static function quad(ax, ay, bx, by, cx, cy, dx, dy, r, g, b, a = 255) {~0A @B// TODO: if this makes a bowtime, and this is an OpenGL based platform,~0A @B// decompose this into two triangle draws.~0A @Breturn $@2(~0dintQueueWrite16~0d, Graphics2D.Draw._queue,~0A @F_DrawCommands.QUAD,~0A @Fax, ay, bx, by, cx, cy, dx, dy, r, g, b, a);~0A @7}~0A@1 @7static function fill(r, g, b) {~0A @Bt = Game.GameWindow.instance;~0A @B$$lib_graphics2d_renderQueueAction(Graphics2D.Draw._queue, Graphics2D.Draw._text_queue, 2);~0A @Breturn Graphics2D.Draw.rectangle(0, 0, t._w, t._h, r, g, b);~0A @7}~0A @3}~0A}~0A%&JD[Game]~0A%&JE[Game:Event.cry]~0Anamespace Game {~0A@1 @3// TODO: mark as abstract.~0A @3// This can be extended in other libraries, such as Gamepad~0A @3class Event {~0A @7field type;~0A @7constructor(type) {~0A @Bthis.type = type;~0A @7}~0A @3}~0A}~0A%&JF[Game:EventButton.cry]~0Anamespace Game {~0A @3enum EventButton {~0A @7LEFT = 0,~0A @7// MIDDLE = 1, // TODO~0A @7RIGHT = 2,~0A @3}~0A}~0A%&JG[Game:EventQuitType.cry]~0Anamespace Game {~0A@1 @3enum EventQuitType {~0A @7ALT_F4 = 0,~0A @7CLOSE_BUTTON = 1,~0A @7BACK_BUTTON = 2,~0A @3}~0A}~0A%&JH[Game:EventType.cry]~0Anamespace Game {~0A@1 @3// WARNING: These magic numbers are used throughout the stack~0A @3// GameLibHelper.cry and platform specific code.~0A @3enum EventType {~0A @7QUIT = 0x1,~0A@1 @7KEY_DOWN = 0x10,~0A @7KEY_UP = 0x11,~0A@1 @7MOUSE_MOVE = 0x20,~0A @7MOUSE_LEFT_DOWN = 0x21,~0A @7MOUSE_LEFT_UP = 0x22,~0A @7MOUSE_RIGHT_DOWN = 0x23,~0A @7MOUSE_RIGHT_UP = 0x24,~0A @7MOUSE_SCROLL = 0x25,~0A@1 @7GAMEPAD_HARDWARE = 0x30,~0A @7GAMEPAD = 0x31,~0A@1 @3}~0A}~0A%&JI[Game:GameWindow.cry]~0Aimport Math;~0A@1namespace Game {~0A@1 @3class GameWindow {~0A@1 @7static field instance;~0A@1 @7field _w;~0A @7field _h;~0A@1 @7static field _reusable_list = [];~0A@1 @7// These are static and not associated with the actual GameWindow instance.~0A @7// That means static initializers (such as the GamePad event pump) can register events without the~0A @7// window being open yet. Also, becuase they are static, they can be guarded against unauthorized~0A @7// access from user code (TODO: make that last statement true by adding the library access annotation)~0A @7static field _eventPumpHandlers = [];~0A @7static field _frameBeginHandlers = [];~0A @7static field _frameEndHandlers = [];~0A@1 @7field fps;~0A@1 @7constructor(title, fps, width, height, screenWidth = null, screenHeight = null) {~0A @BCore.assert(Core.isString(title), ~0YTitle must be a string.~0Y);~0A @Bt = ~0Y must be a number.~0Y;~0A @Bw = ~0Ywidth~0Y;~0A @Bh = ~0Yheight~0Y;~0A @BCore.assert(Core.isNumber(fps), ~0YFPS~0Y + t);~0A @BCore.assert(Core.isNumber(width), ~0Ywidth~0Y + t);~0A @BCore.assert(Core.isNumber(height), ~0Yheight~0Y + t);~0A @BCore.assert(screenWidth == null || Core.isNumber(screenWidth), ~0Yscreen ~0Y + w + t);~0A @BCore.assert(screenHeight == null || Core.isNumber(screenHeight), ~0Yscreen ~0Y + h + t);~0A@1 @BCore.assert(GameWindow.instance == null, ~0YCannot create multiple GameWindows.~0Y);~0A @BGameWindow.instance = this;~0A@1 @Bthis.fps = fps;~0A@1 @BscreenWidth = screenWidth ?? width;~0A @BscreenHeight = screenHeight ?? height;~0A@1 @Bwidth = Math.floor(width);~0A @Bheight = Math.floor(height);~0A @BscreenWidth = Math.floor(screenWidth);~0A @BscreenHeight = Math.floor(screenHeight);~0A@1 @Bthis._w = width;~0A @Bthis._h = height;~0A@1 @Bt = ~0Y must be positive.~0Y;~0A @BCore.assert(width > 0, w + t);~0A @BCore.assert(height > 0, h + t);~0A @BCore.assert(screenWidth > 0, ~0Yscreen ~0Y + w + t);~0A @BCore.assert(screenHeight > 0, ~0Yscreen ~0Y + h + t);~0A @BCore.assert(fps > 0, ~0YFPS~0Y + t);~0A@1 @B$$lib_game_initialize(fps);~0A @B$$lib_game_initialize_screen(width, height, screenWidth, screenHeight);~0A @B$$lib_game_set_title(title);~0A @7}~0A@1 @7// returns a list [isAspectRatioForced, screenWidth, screenHeight]~0A @7// can be called before game is created~0A @7// may possibly return 0 x 0 for the screen size if the underlying API can~0dt tell~0A @7// will never return [true, 0, 0]~0A @7static function getScreenInfo() {~0A @Breturn $$lib_game_getScreenInfo([false, 0, 0]);~0A @7}~0A@1 @7function clockTick() {~0A @Bfor (t : Game.GameWindow._frameEndHandlers) {~0A @Ft();~0A @B}~0A@1 @B$$lib_game_clock_tick();~0A@1 @Bfor (t : Game.GameWindow._frameBeginHandlers) {~0A @Ft();~0A @B}~0A @7}~0A@1 @7function pumpEvents() {~0A @Boutput = [];~0A @Bt = $$lib_game_pump_events(GameWindow._reusable_list);~0A @Blen = t.length;~0A @Bi = 0;~0A @Bwhile (i < len) {~0A @Fswitch (t[i++]) {~0A @J// for all mouse events: t[1] -> x, t[2] -> y~0A @Jcase EventType.MOUSE_MOVE: e = new MouseMoveEvent(t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_LEFT_DOWN: e = new MouseClickEvent(t[i - 1], EventButton.LEFT, true, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_LEFT_UP: e = new MouseClickEvent(t[i - 1], EventButton.LEFT, false, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_RIGHT_DOWN: e = new MouseClickEvent(t[i - 1], EventButton.RIGHT, true, t[i++], t[i++]); break;~0A @Jcase EventType.MOUSE_RIGHT_UP: e = new MouseClickEvent(t[i - 1], EventButton.RIGHT, false, t[i++], t[i++]); break;~0A@1 @J// for mouse scroll events: t[3] -> scroll amount~0A @Jcase EventType.MOUSE_SCROLL: e = new MouseScrollEvent(t[i++], t[i++], t[i++]); break;~0A@1 @J// for key events: t[1] -> key code (see enum)~0A @Jcase EventType.KEY_DOWN: e = new KeyEvent(t[i++], true); break;~0A @Jcase EventType.KEY_UP: e = new KeyEvent(t[i++], false); break;~0A@1 @J// for quit events: t[1] -> quit subtype~0A @Jcase EventType.QUIT: e = new QuitEvent(t[i++]); break;~0A@1 @Jdefault: assert(false); break;~0A @F}~0A@1 @Foutput.add(e);~0A @B}~0A@1 @B// Things like gamepad events are added here~0A @Bif (GameWindow._eventPumpHandlers.length > 0) {~0A @Ffor (t : GameWindow._eventPumpHandlers) {~0A @Jt(output);~0A @F}~0A @B}~0A@1 @Breturn output;~0A @7}~0A@1 @7function setTitle(title) {~0A @Btitle += ~0d@1;~0A @Bif (title.length == 0) throw new Core.InvalidArgumentException(~0YTitle cannot be empty.~0Y);~0A @Breturn $$lib_game_set_title(title);~0A @7}~0A @3}~0A}~0A%&JJ[Game:KeyboardKey.cry]~0A@1namespace Game {~0A@1 @3// These keycodes are consistent with the JavaScript key codes.~0A @3// Because why not.~0A @3enum KeyboardKey {~0A@1 @7BACKSPACE = 8,~0A @7TAB = 9,~0A @7ENTER = 13,~0A @7SHIFT = 16,~0A @7CTRL = 17,~0A @7ALT = 18,~0A @7PAUSE = 19,~0A @7CAPS_LOCK = 20,~0A @7ESCAPE = 27,~0A @7SPACE = 32,~0A @7PAGE_UP = 33,~0A @7PAGE_DOWN = 34,~0A @7END = 35,~0A @7HOME = 36,~0A @7LEFT = 37,~0A @7UP = 38,~0A @7RIGHT = 39,~0A @7DOWN = 40,~0A @7PRINT_SCREEN = 44,~0A @7INSERT = 45,~0A @7DELETE = 46,~0A@1 @7NUM_0 = 48 + 0,~0A @7NUM_1 = 48 + 1,~0A @7NUM_2 = 48 + 2,~0A @7NUM_3 = 48 + 3,~0A @7NUM_4 = 48 + 4,~0A @7NUM_5 = 48 + 5,~0A @7NUM_6 = 48 + 6,~0A @7NUM_7 = 48 + 7,~0A @7NUM_8 = 48 + 8,~0A @7NUM_9 = 48 + 9,~0A@1 @7A = 64 + 1,~0A @7B = 64 + 2,~0A @7C = 64 + 3,~0A @7D = 64 + 4,~0A @7E = 64 + 5,~0A @7F = 64 + 6,~0A @7G = 64 + 7,~0A @7H = 64 + 8,~0A @7I = 64 + 9,~0A @7J = 64 + 10,~0A @7K = 64 + 11,~0A @7L = 64 + 12,~0A @7M = 64 + 13,~0A @7N = 64 + 14,~0A @7O = 64 + 15,~0A @7P = 64 + 16,~0A @7Q = 64 + 17,~0A @7R = 64 + 18,~0A @7S = 64 + 19,~0A @7T = 64 + 20,~0A @7U = 64 + 21,~0A @7V = 64 + 22,~0A @7W = 64 + 23,~0A @7X = 64 + 24,~0A @7Y = 64 + 25,~0A @7Z = 64 + 26,~0A@1 @7// In the JS keycodes, left Window key is 91 and right Window key is 92.~0A @7// But Crayon doesn~0dt care which one you press.~0A @7OS_COMMAND = 91,~0A @7CONTEXT_MENU = 93,~0A@1 @7F1 = 1@2 + 1,~0A @7F2 = 1@2 + 2,~0A @7F3 = 1@2 + 3,~0A @7F4 = 1@2 + 4,~0A @7F5 = 1@2 + 5,~0A @7F6 = 1@2 + 6,~0A @7F7 = 1@2 + 7,~0A @7F8 = 1@2 + 8,~0A @7F9 = 1@2 + 9,~0A @7F10 = 1@2 + 10,~0A @7F11 = 1@2 + 11,~0A @7F12 = 1@2 + 12,~0A@1 @7NUM_LOCK = 144,~0A @7SCROLL_LOCK = 145,~0A@1 @7SEMICOLON = 186,~0A @7EQUALS = 187,~0A @7COMMA = 188,~0A @7HYPHEN = 189,~0A @7PERIOD = 190,~0A @7SLASH = 191,~0A @7BACKTICK = 192,~0A @7OPEN_BRAKET = 219,~0A @7BACKSLASH = 220,~0A @7CLOSE_BRACKET = 221,~0A @7APOSTROPHE = 2@2,~0A @3}~0A}~0A%&JK[Game:KeyEvent.cry]~0Anamespace Game {~0A@1 @3class KeyEvent : Event {~0A @7field key;~0A @7field down;~0A@1 @7constructor(key, down) : base(down ? EventType.KEY_DOWN : EventType.KEY_UP) {~0A @Bthis.key = key;~0A @Bthis.down = down;~0A @7}~0A @3}~0A}~0A%&JL[Game:MouseClickEvent.cry]~0Anamespace Game {~0A@1 @3class MouseClickEvent : MouseEvent {~0A @7field button;~0A @7field down;~0A @7constructor(type, button, down, x, y) : base(type, x, y) {~0A @Bthis.button = button;~0A @Bthis.down = down;~0A @7}~0A @3}~0A}~0A%&JM[Game:MouseEvent.cry]~0Anamespace Game {~0A@1 @3class MouseEvent : Event {~0A @7field x;~0A @7field y;~0A @7constructor(type, x, y) : base(type) {~0A @Bthis.x = x;~0A @Bthis.y = y;~0A @7}~0A @3}~0A}~0A%&JN[Game:MouseMoveEvent.cry]~0Anamespace Game {~0A@1 @3class MouseMoveEvent : MouseEvent {~0A @7constructor(x, y) : base(EventType.MOUSE_MOVE, x, y) { }~0A @3}~0A}~0A%&JO[Game:MouseScrollEvent.cry]~0Anamespace Game {~0A@1 @3class MouseScrollEvent : MouseEvent {~0A @7field amount;~0A @7constructor(x, y, amount) : base(EventType.MOUSE_SCROLL, x, y) {~0A @Bthis.amount = amount;~0A @7}~0A @3}~0A}~0A%&JP[Game:QuitEvent.cry]~0Anamespace Game {~0A@1 @3class QuitEvent : Event {~0A @7field quitType;~0A @7constructor(quitType) : base(EventType.QUIT) {~0A @Bthis.quitType = quitType;~0A @7}~0A @3}~0A}~0A%&JQ[Graphics2D:GraphicsTexture.cry]~0Aimport Math;~0Aimport ImageResources;~0A@1namespace Graphics2D {~0A @3class GraphicsTexture {~0A @7/*~0A @BnativeData[0] -> weak reference to GraphicsTextureResource~0ds nativeData~0A@1 @BnativeData[1] -> texture left~0A @BnativeData[2] -> texture top~0A @BnativeData[3] -> texture right~0A @BnativeData[4] -> texture button~0A @BnativeData[5] -> width~0A @BnativeData[6] -> height~0A @7*/~0A@1 @7field _graphicsTextureResource;~0A @7field width;~0A @7field height;~0A@1 @7static field REUSABLE_WIDTH_HEIGHT_OUT = [0, 0];~0A @7static function load(imageResource) {~0A @BatlasNativeResource = imageResource._nativeResource;~0A @BatlasNativeResource.verifyUnlocked();~0A @Bwidth = imageResource._width;~0A @Bheight = imageResource._height;~0A@1 @Bif ($$lib_graphics2d_isPlatformUsingTextureAtlas()) { // TODO: compile time constant functions~0A @F// only create a new texture resource if one doesn~0dt exist that already has the same atlas backing it~0A @Fkey = atlasNativeResource.resourceFingerprint;~0A @FtextureResource = GraphicsTextureResource.database.get(key);~0A @Fif (textureResource == null) {~0A @JtextureResource = new GraphicsTextureResource();~0A @JnewWidth = GraphicsTexture._nextPowerOf2(atlasNativeResource.width);~0A @JnewHeight = GraphicsTexture._nextPowerOf2(atlasNativeResource.height);~0A @JtextureResource.width = newWidth;~0A @JtextureResource.height = newHeight;~0A @Jimg = new ImageResources.NativeImageData(NativeImageDataConstructionType.SIZE, [newWidth, newHeight]);~0A @JatlasDummyWrapper = new ImageResources.ImageResource(atlasNativeResource.width, atlasNativeResource.height, false);~0A @JatlasDummyWrapper._nativeResource = atlasNativeResource;~0A @Jimg.lock();~0A @Jimg.blit(atlasDummyWrapper, 0, 0);~0A @Jimg.unlock();~0A @J$$lib_graphics2d_initializeTextureResource(textureResource, true, img);~0A @JGraphicsTextureResource.database[key] = textureResource;~0A @F}~0A @Fx = imageResource._x;~0A @Fy = imageResource._y;~0A @Ftfw = textureResource.width + 0.0;~0A @Ftfh = textureResource.height + 0.0;~0A @FtextureCoords = [x / tfw, y / tfh, (x + width) / tfw, (y + height) / tfh];~0A @B} else {~0A @F// create a new texture each time.~0A @Fimg = new ImageResources.NativeImageData(NativeImageDataConstructionType.SIZE, [width, height]);~0A @Fimg.lock();~0A @Fimg.blit(imageResource, -imageResource._x, -imageResource._y);~0A @Fimg.unlock();~0A @FtextureResource = new GraphicsTextureResource();~0A @FtextureResource.width = width;~0A @FtextureResource.height = height;~0A @F$$lib_graphics2d_initializeTextureResource(textureResource, true, img);~0A @FtextureCoords = [0.0, 0.0, 1.0, 1.0];~0A @B}~0A @Btexture = new GraphicsTexture(textureResource, width, height);~0A @B$$lib_graphics2d_initializeTexture(texture, textureResource, textureCoords, width, height);~0A @Breturn texture;~0A @7}~0A@1 @7static function _nextPowerOf2(num) {~0A @Bif ((num & (num - 1)) == 0) return num;~0A @Bfor (walker = num / 2; walker > 0; walker /= 2) {~0A @Fnum |= walker;~0A @B}~0A @Breturn num + 1;~0A @7}~0A@1 @7// TODO: make this private~0A @7constructor(ref, width, height) {~0A @Bthis._graphicsTextureResource = ref;~0A @Bthis.width = width;~0A @Bthis.height = height;~0A @7}~0A@1 @7/*~0A @B[0] -> Graphics2D._DrawCommands.IMAGE,~0A@1 @B[1] -> optionFlagsBitMask {~0A @F1 - slice,~0A @F2 - stretch,~0A @F4 - rotate,~0A @F8 - alpha~0A @B}~0A@1 @B// used if slice is enabled~0A @B[2] -> sourceX,~0A @B[3] -> sourceY,~0A @B[4] -> sourceWidth,~0A @B[5] -> sourceHeight,~0A@1 @B// used if stretch is enabled~0A @B[6] -> drawWidth,~0A @B[7] -> drawHeight~0A@1 @B// these are top left corner unless rotate flag is enabled~0A @B[8] -> targetX,~0A @B[9] -> targetY,~0A@1 @B// used if rotate is enabled~0A @B[10] -> theta * 1048576,~0A@1 @B// used if alpha is enabled~0A @B[11] -> alpha value~0A@1 @7*/~0A @7function draw(x, y) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F0,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawWithAlpha(x, y, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F8,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegion(x, y, sx, sy, width, height) {~0A @Bif (width == 0 || height == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1,~0A @Fsx, sy, width, height,~0A @F0, 0,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawStretched(x, y, width, height) {~0A @Bif (width == 0 || height == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F2,~0A @F0, 0, 0, 0,~0A @Fwidth, height,~0A @Fx, y,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegionStretched(tx, ty, tw, th, sx, sy, sw, sh) {~0A @Bif (tw == 0 || th == 0 || sw == 0 || sh == 0) return;~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRegionStretchedWithAlpha(tx, ty, tw, th, sx, sy, sw, sh, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2 | 8,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @F0,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRotated(x, y, theta) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F4,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @Ftheta,~0A @F0) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawRotatedWithAlpha(x, y, theta, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F4 | 8,~0A @F0, 0, 0, 0,~0A @F0, 0,~0A @Fx, y,~0A @Ftheta,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7function drawWithOptions(tx, ty, tw, th, sx, sy, sw, sh, theta, alpha) {~0A @Breturn $$lib_graphics2d_addImageRenderEvent(~0A @FGraphics2D.Draw._queue, this,~0A @F1 | 2 | 4 | 8,~0A @Fsx, sy, sw, sh,~0A @Ftw, th,~0A @Ftx, ty,~0A @Ftheta,~0A @Falpha) ? null : Core.fail(~0YInvalid arguments~0Y);~0A @7}~0A@1 @7// TODO: 90 degree rotations would be nice and simple.~0A@1 @7function _createResCopy(res) {~0A @Boutput = [res, res];~0A @Bif (!$$lib_graphics2d_isPlatformUsingTextureAtlas()) {~0A @F// for non-atlas platforms, create a copy of the texture resource.~0A @FnewRes = new GraphicsTextureResource();~0A @FnewRes.width = res.width;~0A @FnewRes.height = res.height;~0A @F$$lib_graphics2d_initializeTextureResource(newRes, false, res);~0A @Foutput[1] = newRes;~0A @B}~0A @Breturn output;~0A @7}~0A@1 @7function flip(h, v) {~0A @Bif (!(h || v)) return this;~0A @Bres = this._createResCopy(this._graphicsTextureResource);~0A @Boutput = new GraphicsTexture(res[1], this.width, this.height);~0A @Breturn $$lib_graphics2d_flip(this, output, h, v, res[0], res[1]);~0A @7}~0A@1 @7/*~0A @Bw and h are the final size as integers, not the scale ratio.~0A @BNegative integers are allowed and flip will be automatically called.~0A @7*/~0A @7function scale(w, h) {~0A @Bif (~0A @F!($@2(~0dtypeis~0d, w, Core.Type.INTEGER) &&~0A @J$@2(~0dtypeis~0d, h, Core.Type.INTEGER)) ||~0A @Fw == 0 ||~0A @Fh == 0) {~0A @FCore.fail(~0YImage dimensions must be non-zero integers.~0Y);~0A @B}~0A @Bhor = w < 0;~0A @Bver = h < 0;~0A @Bif (hor || ver) {~0A @Fimg = this.flip(hor, ver);~0A @Fw = $@2(~0dabs~0d, w);~0A @Fh = $@2(~0dabs~0d, h);~0A @B} else {~0A @Fimg = this;~0A @B}~0A @Bif (w == this.width && h == this.height) return img;~0A @Bres = this._createResCopy(this._graphicsTextureResource);~0A @Boutput = new GraphicsTexture(res[1], w, h);~0A @B$$lib_graphics2d_scale(img, output, w, h, res[0], res[1]);~0A @Breturn output;~0A @7}~0A @3}~0A}~0A%&JR[ImageResources]~0A%&JS[ImageResources:AggregatedImageSheet.cry]~0Anamespace ImageResources {~0A @3/*~0A @7Aggregated image sheets are collections of image sheets and behave just like~0A @7one giant image sheet. This class is not exposed to users through documentation~0A @7as it implements the same interface as a normal ImageSheet. These are created by~0A @7the user by passing in a list of sheet names to the ImageSheet.loadFromResources~0A @7functions instead of a single name.~0A @3*/~0A @3class AggregatedImageSheet {~0A@1 @7field _sheetsById = {};~0A @7field _orderedSheets;~0A @7field _ids = [];~0A @7field _weight = 0;~0A@1 @7field _isLoaded = false;~0A@1 @7constructor(sheets) {~0A @Bthis._orderedSheets = sheets.clone();~0A @Bif (sheets.length == 0) {~0A @Fthis._isLoaded = true;~0A @B} else {~0A @Ffor (sheet : sheets) {~0A @Jid = sheet._id;~0A @Jthis._sheetsById[id] = sheet;~0A @Jthis._ids.add(id);~0A @Jthis._weight += sheet._weight;~0A @F}~0A @B}~0A @7}~0A@1 @7function getImage(resourcePath) {~0A @Bres = ImageResourceManifest.getFileInfo(resourcePath, true);~0A @Bsheet = this._sheetsById.get(res[1]);~0A @Bif (sheet == null) {~0A @F// TODO: show the ID~0ds of the loaded ones?~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d is not included in this sheet.~0Y, resourcePath);~0A @B}~0A@1 @Breturn sheet.getImage(resourcePath);~0A @7}~0A@1 @7function isDone() {~0A @Bif (this._isLoaded) return true;~0A@1 @Bfor (sheet : this._orderedSheets) {~0A @Fif (!sheet.isDone()) {~0A @Jreturn false;~0A @F}~0A @B}~0A@1 @Bthis._isLoaded = true;~0A @Breturn true;~0A @7}~0A@1 @7function getProgress() {~0A @Bif (this._isLoaded) return 1.0;~0A@1 @Bprogress = 0.0;~0A @Bfor (sheet : this._orderedSheets) {~0A @Fprogress += sheet.getProgress() * sheet._weight;~0A @B}~0A@1 @Breturn progress / this._weight;~0A @7}~0A@1 @7function getFiles() {~0A @Boutput = [];~0A @Bfor (sheet : this._orderedSheets) {~0A @Foutput.concat(sheet.getFiles());~0A @B}~0A @Boutput.sort();~0A @Breturn output;~0A @7}~0A @3}~0A}~0A%&JT[ImageResources:Exceptions.cry]~0Anamespace ImageResources {~0A @3class ImageNotFoundException : Core.Exception {~0A@1 @7field path;~0A@1 @7// TODO: actual string.format support. Till then.@2~0A @7constructor(template, path) : base(template.replace(~0d{0}~0d, path)) {~0A @Bthis.path = path;~0A @7}~0A @3}~0A@1 @3class SheetNotFoundException : Core.Exception {~0A@1 @7field id;~0A@1 @7// TODO: string.format here as well.@2~0A @7constructor(template, id) : base(template.replace(~0d{0}~0d, id)) {~0A @Bthis.id = id;~0A @7}~0A @3}~0A@1 @3class LoadFailedException : Core.Exception {~0A @7constructor(msg) : base(msg) { }~0A @3}~0A}~0A%&JU[ImageResources:ImageLoader.cry]~0Anamespace ImageResources {~0A@1 @3enum ImageLoaderType {~0A @7RESOURCE,~0A @7WEB,~0A @7FILE,~0A @3}~0A@1 @3class ImageLoader {~0A@1 @7/*~0A @BnativeData[0] -> asynchronous loader reference~0A @FC# loader -> pointer to background worker~0A @FPython loader -> pointer to daemon thread~0A @FJavaScript loader -> some sort of data structure whose reference was passed to the async loader.~0A @FJava -> also a background thread worker.~0A @FPHP -> load image synchronously always. isDone() will just say true.~0A@1 @BnativeData[1] -> actual image data~0A @BnativeData[2] -> status code~0A @F0 -> not done~0A @F1 -> done~0A @F2 -> load failed~0A@1 @BnativeData[3] -> mutex (if the platform needs one)~0A @7*/~0A@1 @7~12private~0A @7constructor() { }~0A@1 @7/*~0A @BIt~0ds possible the user may not yield execution and check for isDone() in a while loop.~0A @BThis is reasonable if the user is simply trying to take advantage of the multithreading~0A @Bof loading images. For example.@2~0A@1 @Bloader = ImageLoader.loadFromResourcesAsync(~0dfoo.png~0d); // load image in parallel with task below~0A @BsomeSortOfExpensiveTask();~0A @Bwhile (!loader.isDone()) { }~0A @Bimage = loader.getImage();~0A@1 @BIf they do, go ahead and yield the execution if they call isDone() enough times in one~0A @Biteration of the interpreter without waiting for a yield.~0A @7*/~0A @7field _executionIterationCount = 0; // current interpreter execution counter for this execution context ID~0A @7field _isDoneChecksOnThisFrame = 0; // number of times isDone() has been called during this execution counter.~0A @7field _isDone = false;~0A @7field _nativeImage;~0A @7field _output = null;~0A@1 @7function getImage() {~0A @Bif (this._output != null) return this._output;~0A @Bif (!this._isDone) throw new Core.InvalidOperationException(~0YLoading is not finished.~0Y);~0A @Bif (this._nativeImage == null) {~0A @Fthrow new Core.InvalidOperationException(~0YImage has already been constructed.~0Y);~0A @B}~0A @Bimg = new ImageResource(this._nativeImage.width, this._nativeImage.height, false);~0A @Bimg._nativeResource = this._nativeImage;~0A @Bthis._output = img;~0A @Breturn img;~0A @7}~0A@1 @7static field REUSABLE_IS_DONE_OUT = [null];~0A @7function isDone() {~0A @Bif (this._isDone) {~0A @Freturn true;~0A @B}~0A@1 @B// There are 2 possible places where the final result of the loading is copied to~0A @B// the NativeImageData instance~0ds nativeData:~0A @B// - at the end of the asynchronous loader, using the mutex in nativeData[3]~0A @B// - as a result of this next function. It will never be called twice on a successfully loaded image.~0A @B$$lib_imageresources_checkLoaderIsDone(this, this._nativeImage, ImageLoader.REUSABLE_IS_DONE_OUT);~0A@1 @Bstatus = ImageLoader.REUSABLE_IS_DONE_OUT[0];~0A @Bif (status > 0) {~0A @Fthis._isDone = true;~0A @Fif(status != 1) throw new ImageResources.LoadFailedException(~0YError encountered while loading image.~0Y);~0A @Freturn true;~0A @B}~0A@1 @Bif ($$lib_imageresources_yieldRequiredByPlatform()) {~0A @F// Keep track of how many times this has been called without a yield.~0A @F// If it~0ds more than a couple times, then it~0ds likely this person is checking~0A @F// inside a blocking loop and the handler hasn~0dt had a chance to fire.~0A @Fc = Core.getExecutionIterationCounter();~0A @Fif (c != this._executionIterationCount) {~0A @Jthis._isDoneChecksOnThisFrame = 1;~0A @Jthis._executionIterationCount = c;~0A @F} else {~0A @Jthis._isDoneChecksOnThisFrame++;~0A @F}~0A@1 @F// If they~0dve called this function 10 times without a yield, do a thread sleep~0A @F// to potentially let the image load handler run.~0A @Fif (this._isDoneChecksOnThisFrame > 10) {~0A @JCore.sleep(.01);~0A @F}~0A @B}~0A@1 @Breturn false;~0A @7}~0A@1 @7static function loadFromResourcesAsync(filename) {~0A @Breturn ImageLoader._loadImpl(filename, false, true, null, null);~0A @7}~0A@1 @7static function loadFromResources(filename) {~0A @Breturn ImageLoader._loadImpl(filename, false, false, null, null);~0A @7}~0A@1 @7static function _loadImpl(filename, isGen, isAsync, width, height) {~0A @Bif (!isGen) {~0A @Fdata = ImageLoader.getGenName(filename);~0A @Ffilename = data[1];~0A @Fwidth = data[2];~0A @Fheight = data[3];~0A @B}~0A @BnativeImage = new NativeImageData(NativeImageDataConstructionType.BLANK, null);~0A @BnativeImage.width = width;~0A @BnativeImage.height = height;~0A@1 @Bif (isAsync) {~0A @Floader = new ImageResources.ImageLoader();~0A @Floader._nativeImage = nativeImage;~0A @F$$lib_imageresources_loadAsynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @Jloader);~0A @Freturn loader;~0A @B}~0A@1 @BstatusOut = [false, true];~0A @Bif ($$lib_imageresources_yieldRequiredByPlatform()) {~0A @Floader = new ImageResources.ImageLoader();~0A @Floader._nativeImage = nativeImage;~0A @F$$lib_imageresources_loadAsynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @Jloader);~0A@1 @FCore.sleep(.005);~0A @Fdelay = .01;~0A @Fwhile (!loader.isDone()) {~0A @JCore.sleep(delay);~0A @Jdelay *= 1.2;~0A @Jif (delay > 1) delay = 1;~0A @F}~0A @FstatusOut.reverse();~0A @B} else {~0A @F$$lib_imageresources_loadSynchronous(~0A @JnativeImage,~0A @Jfilename,~0A @JstatusOut);~0A @B}~0A@1 @B// TODO: include filename in LoadFailedException. filename in this function can potentially be a generated name which is not useful.~0A @Bif (!statusOut[0]) throw new ImageResources.LoadFailedException(~0YImage load failed~0Y);~0A@1 @Bimage = new ImageResources.ImageResource(width, height, false);~0A @Bimage._nativeResource = nativeImage;~0A @Breturn image;~0A @7}~0A@1 @7static function getGenName(filename) {~0A @Binfo = ImageResourceManifest.getFileInfo(filename);~0A @Bif (info == null) throw new ImageResources.ImageNotFoundException(~0YImage resource ~0d{0}~0d not found.~0Y, filename);~0A @Bif (info[0] == ImgResourceType.SHEET) throw new ImageResources.LoadFailedException(~0Y~0d~0Y + filename + ~0Y~0d must be loaded as an ImageSheet.~0Y);~0A @Breturn info;~0A @7}~0A @3}~0A}~0A%&JV[ImageResources:ImageResource.cry]~0Anamespace ImageResources {~0A @3class ImageResource {~0A@1 @7field _nativeResource;~0A @7field _width;~0A @7field _height;~0A@1 @7// top-left location within the _nativeResource~0A @7field _x = 0;~0A @7field _y = 0;~0A@1 @7// Do not document init. Only used internally.~0A @7constructor(width, height, init = true) {~0A @Bthis._width = width;~0A @Bthis._height = height;~0A @Bif (init) {~0A @Fthis._nativeResource = new NativeImageData(NativeImageDataConstructionType.SIZE, [width, height]);~0A @B}~0A @7}~0A@1 @7// TODO: support immutable fields. I~0dd much rather expose these as .width and .height.~0A @7function getWidth() { return this._width; }~0A @7function getHeight() { return this._height; }~0A @3}~0A}~0A%&JW[ImageResources:ImageResourceManifest.cry]~0A/*~0A @3See notes.txt~0A*/~0A@1namespace ImageResources {~0A @3enum ImgResourceType {~0A @7STANDALONE,~0A @7SHEET,~0A @3}~0A@1 @3class ImageResourceManifest {~0A@1 @7static field resourceInfo = null;~0A @7static field sheetInfo = null;~0A @7static field sheetIdByName = {};~0A @7static field filesBySheetId = {};~0A@1 @7static function getFileInfo(filename, sheetOnly = false) {~0A @BImageResourceManifest.ensureInitialized();~0A @Boutput = ImageResourceManifest.resourceInfo.get(filename);~0A @Bif (output == null) {~0A @Fnkey = filename.trim().replace(~0d~1U@1~0d, ~0d/~0d);~0A @Foutput = ImageResourceManifest.resourceInfo.get(nkey);~0A @Fif (output != null) {~0A @JImageResourceManifest.resourceInfo[filename] = output;~0A @F}~0A @B}~0A@1 @Bif (output == null) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d does not exist.~0Y, filename);~0A @B}~0A@1 @Bif (sheetOnly && output[0] != ImgResourceType.SHEET) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YResource ~0d{0}~0d is standalone and not included in an image sheet.~0Y, filename);~0A @B}~0A@1 @Breturn output;~0A @7}~0A@1 @7static function getSheetInfo(name) {~0A @BImageResourceManifest.ensureInitialized();~0A @Bif (Core.typeof(name) != Core.Type.STRING) throw new Core.InvalidArgumentException(~0YImage sheet ID must be a string~0Y);~0A @Bid = ImageResourceManifest.sheetIdByName.get(name);~0A @Bif (id == null) throw new ImageResources.SheetNotFoundException(~0YImage sheet with ID of ~0d{0}~0d not found.~0Y, name);~0A @Breturn ImageResourceManifest.sheetInfo[id];~0A @7}~0A@1 @7static function ensureInitialized() {~0A @Bif (ImageResourceManifest.resourceInfo != null) return;~0A @BresourceInfo = {};~0A @BsheetInfo = {};~0A @BImageResourceManifest.resourceInfo = resourceInfo;~0A @BImageResourceManifest.sheetInfo = sheetInfo;~0A@1 @Bmanifest = $$lib_imageresources_getManifestString();~0A @BactiveSheetId = null;~0A @BactiveChunkId = 0;~0A @Bfor (line : manifest.split(~0d~1Un~0d)) {~0A @Fparts = line.split(~0d,~0d);~0A @Fswitch (parts[0].trim()) {~0A@1 @Jcase ~0dA~0d: // A standalone file~0A @NgenFilename = parts[1];~0A @Nw = Core.parseInt(parts[2]);~0A @Nh = Core.parseInt(parts[3]);~0A @Nfilename = parts[4:].join(~0d,~0d).trim();~0A @NresourceInfo[filename] = [ImgResourceType.STANDALONE, genFilename, w, h];~0A @Nbreak;~0A@1 @Jcase ~0dS~0d: // declare a new sheet~0A @NactiveSheetId = parts[1];~0A @Nname = parts[2:].join(~0d,~0d).trim();~0A @NsheetInfo[activeSheetId] = {~0A @R~0dname~0d: name,~0A @R~0did~0d: activeSheetId,~0A @R~0dchunks~0d: {},~0A @N};~0A @NImageResourceManifest.sheetIdByName[name] = activeSheetId;~0A @Nbreak;~0A@1 @Jcase ~0dC~0d: // declare a new chunk~0A @N++activeChunkId;~0A @Nwidth = Core.parseInt(parts[1]);~0A @Nheight = Core.parseInt(parts[2]);~0A @Nif (width == 0 && height == 0) {~0A @Rwidth = 1024;~0A @Rheight = 1024;~0A @N}~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId] = {~0A @R~0dwidth~0d: width,~0A @R~0dheight~0d: height,~0A @R~0dtiles~0d: [],~0A @N};~0A @Nbreak;~0A@1 @Jcase ~0dT~0d: // tile in the active chunk~0A @NgenFilename = parts[1];~0A @Nx = Core.parseInt(parts[2]);~0A @Ny = Core.parseInt(parts[3]);~0A @Nwidth = Core.parseInt(parts[4]);~0A @Nheight = Core.parseInt(parts[5]);~0A @Nbytes = Core.parseInt(parts[6]);~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId][~0dtiles~0d].add(~0A @R[genFilename, x, y, width, height, bytes]);~0A @Nbreak;~0A @Jcase ~0dI~0d: // image in the active sheet/chunk~0A @Nx = Core.parseInt(parts[1]);~0A @Ny = Core.parseInt(parts[2]);~0A @Nwidth = Core.parseInt(parts[3]);~0A @Nheight = Core.parseInt(parts[4]);~0A @Nfilename = parts[5:].join(~0d,~0d).trim();~0A @NresourceInfo[filename] = [ImgResourceType.SHEET, activeSheetId, activeChunkId, x, y, width, height];~0A @Nfiles = ImageResourceManifest.filesBySheetId.get(activeSheetId) ?? [];~0A @NImageResourceManifest.filesBySheetId[activeSheetId] = files;~0A @Nfiles.add(filename);~0A @Nbreak;~0A@1 @Jcase ~0dJ~0d: // A JPEG that is a member of a sheet logically but is its own chunk~0A @NgenFilename = parts[1];~0A @Nwidth = Core.parseInt(parts[2]);~0A @Nheight = Core.parseInt(parts[3]);~0A @Nbytes = Core.parseInt(parts[4]);~0A @Nfilename = parts[5:].join(~0d,~0d).trim();~0A@1 @N++activeChunkId;~0A @NsheetInfo[activeSheetId][~0dchunks~0d][activeChunkId] = {~0A @R~0dwidth~0d: width,~0A @R~0dheight~0d: height,~0A @R~0dtiles~0d: [~0A @V[genFilename, 0, 0, width, height, bytes],~0A @R],~0A @N};~0A @Nfiles = ImageResourceManifest.filesBySheetId.get(activeSheetId) ?? [];~0A @NImageResourceManifest.filesBySheetId[activeSheetId] = files;~0A @Nfiles.add(filename);~0A @NresourceInfo[filename] = [ImgResourceType.SHEET, activeSheetId, activeChunkId, 0, 0, width, height];~0A @Nbreak;~0A@1 @Jdefault:~0A @N// This should not happen.~0A @N// If it does, there~0ds a good chance that it~0ds the BOM in the file.~0A @Nthrow new Exception([~0A @Rparts,~0A @Rparts[0].trim().length // this value should be 1~0A @N]);~0A @F}~0A @B}~0A@1 @Bfor (files : ImageResourceManifest.filesBySheetId.values()) {~0A @Ffiles.sort();~0A @B}~0A @7}~0A @3}~0A}~0A%&JX[ImageResources:ImageSheet.cry]~0Anamespace ImageResources {~0A @3class ImageSheet {~0A@1 @7field _isLoaded = false;~0A @7field _info;~0A @7field _loader;~0A @7field _name;~0A @7field _id;~0A@1 @7// List where the chunk ID is the index and the value is an ImageResource instance.~0A @7field _chunks;~0A@1 @7// essentially this amounts to the tile count (as of now)~0A @7// For aggregated image sheets, this represents a relative weight of how much ~0Ystuff~0Y~0A @7// this sheet loads so that the overall percentage can be shown as a function of all~0A @7// sheets more accurately.~0A @7field _weight;~0A@1 @7~12private~0A @7constructor(info, isAsync) {~0A @Bthis._info = info;~0A @Bthis._name = info[~0dname~0d];~0A @Bthis._id = info[~0did~0d];~0A@1 @Bchunks = info[~0dchunks~0d];~0A @Btiles = [];~0A @Bfor (chunk : chunks.values()) {~0A @Ftiles.concat(chunk[~0dtiles~0d]);~0A @B}~0A@1 @Bthis._weight = tiles.length;~0A@1 @Bif (isAsync) {~0A @Fthis._loader = new ImageResources.ImageSheetLoaderAsync(tiles).load();~0A @B} else {~0A @Flookup = {};~0A @Ffor (tile : tiles) {~0A @JgenName = tile[0];~0A @Jwidth = tile[3];~0A @Jheight = tile[4];~0A @Jlookup[genName] = ImageLoader._loadImpl(~0A @NgenName,~0A @Ntrue, // is generated name~0A @Nfalse, // is asynchronous~0A @Nwidth, height);~0A @F}~0A @Fthis._turnTilesIntoSheet(lookup);~0A @B}~0A @7}~0A@1 @7static function loadFromResources(name) {~0A @Breturn ImageSheet._initImpl(name, false, true);~0A @7}~0A@1 @7static function loadFromResourcesAsync(name) {~0A @Breturn ImageSheet._initImpl(name, true, true);~0A @7}~0A@1 @7static function _initImpl(name, isAsync, allowLists) {~0A@1 @B// If name is actually a LIST of names, then the user actually wants an~0A @B// aggregated image sheet.~0A @Bif (allowLists && Core.typeof(name) == Core.Type.LIST) {~0A @Fsheets = [];~0A @Ffor (t : name) {~0A @Jsheets.add(ImageSheet._initImpl(t, isAsync, false));~0A @F}~0A @Freturn new AggregatedImageSheet(sheets);~0A @B}~0A@1 @B// asserts on not found, so info is always non-null/valid~0A @Binfo = ImageResourceManifest.getSheetInfo(name);~0A@1 @Breturn new ImageSheet(info, isAsync);~0A @7}~0A@1 @7function getImage(resourcePath) {~0A @Bif (!this._isLoaded) throw new ImageResources.LoadFailedException(~0YCannot load image from sheet that is not finished loading.~0Y);~0A@1 @B// Convert the _loader object into a finalized sheet and GC the loader~0A @B// if present.~0A @Bif (this._loader != null) {~0A @Fthis._turnTilesIntoSheet(this._loader.completed);~0A @Fthis._loader = null;~0A @B}~0A@1 @Bres = ImageResourceManifest.getFileInfo(resourcePath, true);~0A @Bif (res[1] != this._id) {~0A @Fthrow new ImageResources.ImageNotFoundException(~0YImage sheet ~0d~0Y + this._name + ~0Y~0d does not contain resource: ~0d{0}~0d~0Y, resourcePath);~0A @B}~0A@1 @Bimg = this._chunks[res[2]];~0A@1 @Boutput = new ImageResources.ImageResource(res[5], res[6], false);~0A @Boutput._nativeResource = img._nativeResource;~0A @Boutput._x = res[3];~0A @Boutput._y = res[4];~0A @Breturn output;~0A @7}~0A@1 @7static field _reusableStatusOut = [null, null];~0A @7function isDone() {~0A @Bif (this._isLoaded) return true;~0A @Bthis._loader.getStatus(ImageSheet._reusableStatusOut);~0A @Bif (ImageSheet._reusableStatusOut[0]) {~0A @Fthis._isLoaded = true;~0A @B}~0A @Breturn this._isLoaded;~0A @7}~0A@1 @7function getProgress() {~0A @Bif (this._isLoaded) return 1.0;~0A @Bthis._loader.getStatus(ImageSheet._reusableStatusOut);~0A @Bif (ImageSheet._reusableStatusOut[0]) {~0A @Fthis._isLoaded = true;~0A @Freturn 1.0;~0A @B}~0A @Breturn ImageSheet._reusableStatusOut[1];~0A @7}~0A@1 @7function _turnTilesIntoSheet(tilesByName) {~0A @BchunkMetadata = this._info[~0dchunks~0d];~0A @Bchunks = [];~0A @Bfor (chunkId : chunkMetadata.keys()) {~0A @Fchunk = chunkMetadata[chunkId];~0A @Fimg = new ImageResources.ImageResource(chunk[~0dwidth~0d], chunk[~0dheight~0d]);~0A @Fres = img._nativeResource;~0A @Fres.lock();~0A @Ffor (tile : chunk[~0dtiles~0d]) {~0A @Jname = tile[0];~0A @Jx = tile[1];~0A @Jy = tile[2];~0A @Jres.blit(tilesByName[name], x, y);~0A @F}~0A @Fres.unlock();~0A @Fwhile (chunks.length <= chunkId) { chunks.add(null); }~0A @Fchunks[chunkId] = img;~0A @B}~0A @Bthis._chunks = chunks;~0A @Bthis._isLoaded = true;~0A @Bthis._info = null; // no longer needed. feed to the GC.~0A @7}~0A@1 @7function getFiles() {~0A @Breturn ImageResourceManifest.filesBySheetId[this._id].clone();~0A @7}~0A @3}~0A@1 @3class ImageSheetLoaderAsync {~0A @7field tiles;~0A @7field completed = {};~0A @7field inProgress = {};~0A@1 @7constructor(tiles) {~0A @Bthis.tiles = tiles;~0A @7}~0A@1 @7function load() {~0A @Bfor (tile : this.tiles) {~0A @FgenName = tile[0];~0A @Fwidth = tile[3];~0A @Fheight = tile[4];~0A @Fthis.inProgress[genName] = ImageLoader._loadImpl(~0A @JgenName,~0A @Jtrue, // is generated filename~0A @Jtrue, // is asynchronous~0A @Jwidth, height);~0A @B}~0A @Breturn this;~0A @7}~0A@1 @7function getStatus(out) {~0A @Bif (this.inProgress.length > 0) {~0A @Ffor (key : this.inProgress.keys()) {~0A @Jif (this.inProgress[key].isDone()) {~0A @Nthis.completed[key] = this.inProgress[key].getImage();~0A @Nthis.inProgress.remove(key);~0A @J}~0A @F}~0A @B}~0A@1 @Bif (this.inProgress.length == 0) {~0A @Fout[0] = true;~0A @Fout[1] = 1.0;~0A @B} else {~0A @Fout[0] = false;~0A @Fout[1] = 1.0 * this.completed.length / this.tiles.length;~0A @B}~0A @7}~0A @3}~0A}~0A%&JY[ImageResources:NativeImageData.cry]~0Anamespace ImageResources {~0A @3enum NativeImageDataConstructionType {~0A @7SIZE,~0A @7BLANK,~0A @7CLONE,~0A @3}~0A @3class NativeImageData {~0A@1 @7static field GLOBAL_ID = 0;~0A@1 @7// nativeData[0] -> native bitmap resource~0A @7// nativeData[1] -> bitmap width~0A @7// nativeData[2] -> bitmap height~0A @7// nativeData[3] -> pixel edit session~0A@1 @7field width;~0A @7field height;~0A @7field revisionId = 0;~0A @7field resourceId = NativeImageData.GLOBAL_ID++;~0A @7field resourceFingerprint;~0A @7field _locked = false;~0A@1 @7constructor(instruction, args) {~0A@1 @Bswitch (instruction) {~0A @Fcase NativeImageDataConstructionType.SIZE:~0A @Jthis.width = args[0];~0A @Jthis.height = args[1];~0A @Jbreak;~0A @Fcase NativeImageDataConstructionType.CLONE:~0A @Jother = args[0];~0A @Jthis.width = other.width;~0A @Jthis.height = other.height;~0A @Jbreak;~0A @Fcase NativeImageDataConstructionType.BLANK:~0A @Jbreak;~0A @B}~0A@1 @Bif (instruction != NativeImageDataConstructionType.BLANK) {~0A @F$$lib_imageresources_nativeImageDataInit(this, this.width, this.height);~0A @Fif (instruction == NativeImageDataConstructionType.CLONE) {~0A @Jthis.revisionId--; // since this is the constructor prevent the first revision ID from being 1.~0A @Jthis.lock();~0A @Jthis.blit(other, 0, 0);~0A @Jthis.unlock();~0A @F}~0A @B}~0A@1 @Bthis.updateResourceFingerprint();~0A @7}~0A@1 @7function updateResourceFingerprint() {~0A @Bthis.resourceFingerprint = this.resourceId + ~0d,~0d + this.revisionId;~0A @7}~0A@1 @7function lock() {~0A @Bthis._locked = true;~0A @Bthis.revisionId++;~0A @Bthis.updateResourceFingerprint();~0A @7}~0A@1 @7function unlock() {~0A @B$$lib_imageresources_flushImageChanges(this);~0A @Bthis._locked = false;~0A @7}~0A@1 @7function blit(image, x, y) {~0A @Bother = image._nativeResource;~0A @Bother.verifyUnlocked();~0A @Bthis.verifyLocked();~0A@1 @BtargetLeft = x;~0A @BtargetTop = y;~0A @BtargetRight = x + other.width;~0A @BtargetBottom = y + other.height;~0A @BsourceLeft = 0;~0A @BsourceTop = 0;~0A @BsourceRight = other.width;~0A @BsourceBottom = other.height;~0A @Bif (targetRight < 0 ||~0A @FtargetBottom < 0 ||~0A @FtargetTop >= this.height ||~0A @FtargetLeft >= this.width) return;~0A@1 @Bif (targetRight >= this.width) {~0A @Fdiff = targetRight - this.width;~0A @FtargetRight -= diff;~0A @FsourceRight -= diff;~0A @B}~0A @Bif (targetBottom >= this.height) {~0A @Fdiff = targetBottom - this.height;~0A @FtargetBottom -= diff;~0A @FsourceBottom -= diff;~0A @B}~0A @Bif (targetLeft < 0) {~0A @Fdiff = -targetLeft;~0A @FtargetLeft = 0;~0A @FsourceLeft += diff;~0A @B}~0A @Bif (targetTop < 0) {~0A @Fdiff = -targetTop;~0A @FtargetTop = 0;~0A @FsourceTop += diff;~0A @B}~0A @Bw = sourceRight - sourceLeft;~0A @Bh = sourceBottom - sourceTop;~0A @Bif (w == 0 || h == 0) return;~0A@1 @B// initializes the pixel edit session in nativeData[3] if not present~0A @B$$lib_imageresources_blit(this, other, targetLeft, targetTop, sourceLeft, sourceTop, w, h);~0A @7}~0A@1 @7function verifyUnlocked() {~0A @Bif (this._locked) throw new Core.InvalidOperationException(~0YImage resource is locked and cannot be used.~0Y);~0A @7}~0A@1 @7function verifyLocked() {~0A @Bif (!this._locked) throw new Core.InvalidOperationException(~0YImage resource must be locked.~0Y);~0A @7}~0A @3}~0A}~0A%&JZ[Graphics2D:GraphicsTextureResource.cry]~0Anamespace Graphics2D {~0A @3class GraphicsTextureResource {~0A@1 @7static field database = {}; // mapping of ImageResource version keys to GraphicsTextureResource instances.~0A@1 @7/*~0A @BnativeData[0] -> boolean if this is GL-based~0A @BnativeData[1] -> boolean if this texture is loaded.~0A @BnativeData[2] -> texture ID for OpenGL-based platforms~0A @BnativeData[3] -> a _COPY_ of the actual native image resource~0A @Ffor OpenGL platforms this is a power-of-2 sized image~0A @Ffor non-GL platforms this is a simple image of just the image desired, which could be a single~0A @Jmember of an image sheet.~0A @BnativeData[4] -> width~0A @BnativeData[5] -> height~0A @7*/~0A@1 @7// set externally~0A @7field width;~0A @7field height;~0A@1 @7constructor() { }~0A @3}~0A}~0A%&Jasource/Character.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0Aconst CHARACTER_RADIUS = 15.0;~0D~0Aconst CHARACTER_SPEED = 5.0;~0D~0A~0D~0A// A computer- or human-controlled game character.~0D~0Aclass Character : Body {~0D~0A~09field agent;~0D~0A~09field health = 5;~0D~0A~0D~0A~09constructor(agent, pos) : base(pos, Vec2.zero(), CHARACTER_RADIUS) {~0D~0A~09@1this.agent = agent;~0D~0A~09}~0D~0A~0D~0A~09function update(timeStep) {~0D~0A~09@1this.pos = this.pos.plus(this.vel.times(timeStep));~0D~0A~0D~0A~09@1// Clamp character to boundaries.~0D~0A~09@1if (this.pos.x < this.radius) {~0D~0A~09@2this.pos.x = this.radius;~0D~0A~09@1} else if (this.pos.x > X_RES - this.radius) {~0D~0A~09@2this.pos.x = X_RES - this.radius;~0D~0A~09@1}~0D~0A~09@1if (this.pos.y < this.radius) {~0D~0A~09@2this.pos.y = this.radius;~0D~0A~09@1} else if (this.pos.y > Y_RES - this.radius) {~0D~0A~09@2this.pos.y = Y_RES - this.radius;~0D~0A~09@1}~0D~0A~0D~0A~09@1this.agent.control(this);~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1color = this.agent.controlsTime() ? Color.black() : Color.red();~0D~0A~09@1Graphics2D.Draw.ellipse~0D~0A~09@2( Math.floor(this.pos.x - this.radius + 0.5)~0D~0A~09@2, Math.floor(this.pos.y - this.radius + 0.5)~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, 2.0 * this.radius~0D~0A~09@2, color.r, color.g, color.b~0D~0A~09@2);~0D~0A~09}~0D~0A}~0D~0A%&Jbsource/Color.cry~0A// Represents an RGBA color.~0D~0Aclass Color {~0D~0A~09field r; // red~0D~0A~09field g; // green~0D~0A~09field b; // blue~0D~0A~09field a; // alpha~0D~0A~0D~0A~09constructor(r, g, b, a = 255) {~0D~0A~09@1this.r = r;~0D~0A~09@1this.g = g;~0D~0A~09@1this.b = b;~0D~0A~09@1this.a = a;~0D~0A~09}~0D~0A~0D~0A~09static function black(a = 255) { return new Color(0, 0, 0, a); }~0D~0A~09static function gray(a = 255) { return new Color(128, 128, 128, a); }~0D~0A~09static function silver(a = 255) { return new Color(192, 192, 192, a); }~0D~0A~09static function white(a = 255) { return new Color(255, 255, 255, a); }~0D~0A~09static function red(a = 255) { return new Color(255, 0, 0, a); }~0D~0A}~0D~0A%&Jcsource/Drawing.cry~0Aimport Graphics2D;~0D~0Aimport Math;~0D~0A~0D~0A// Helper class for slightly more advanced/flexible image drawing.~0D~0Aclass Drawing {~0D~0A~09field x = 0;~0D~0A~09field y = 0;~0D~0A~09field hAlign = 0.0;~0D~0A~09field vAlign = 0.0;~0D~0A~09field bgColor = null;~0D~0A~09field image = null;~0D~0A~0D~0A~09function setPos(x, y) {~0D~0A~09@1this.x = x;~0D~0A~09@1this.y = y;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function alignLeft() {~0D~0A~09@1this.hAlign = 0.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignCenter() {~0D~0A~09@1this.hAlign = 0.5;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignRight() {~0D~0A~09@1this.hAlign = 1.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function alignTop() {~0D~0A~09@1this.vAlign = 0.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignMiddle() {~0D~0A~09@1this.vAlign = 0.5;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~09function alignBottom() {~0D~0A~09@1this.vAlign = 1.0;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function setBgColor(color) {~0D~0A~09@1this.bgColor = color;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function setImage(image) {~0D~0A~09@1this.image = image;~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1left = this.x - Math.floor(this.image.width * this.hAlign);~0D~0A~09@1top = this.y - Math.floor(this.image.height * this.vAlign);~0D~0A~09@1if (this.bgColor != null) {~0D~0A~09@2Graphics2D.Draw.rectangle~0D~0A~09@3( left~0D~0A~09@3, top~0D~0A~09@3, this.image.width~0D~0A~09@3, this.image.height~0D~0A~09@3, this.bgColor.r, this.bgColor.g, this.bgColor.b, this.bgColor.a~0D~0A~09@3);~0D~0A~09@1}~0D~0A~09@1if (this.image != null) {~0D~0A~09@2this.image.draw(left, top);~0D~0A~09@1}~0D~0A~09}~0D~0A}~0D~0A%&Jdsource/Environment.cry~0Aimport Graphics2D;~0D~0A~0D~0Aconst MIN_TIME_STEP = 0.05;~0D~0Aconst MAX_TIME_STEP = 1.0;~0D~0Aconst TIME_STEP_STEP = 0.05;~0D~0A~0D~0A// Represents a set of objects in a common environment.~0D~0Aclass Environment {~0D~0A~09field characters = [];~0D~0A~09field bullets = [];~0D~0A~09field timeStep = MIN_TIME_STEP;~0D~0A~09field totalTime = 0.0;~0D~0A~0D~0A~09constructor() {}~0D~0A~0D~0A~09// Updates all the objects in this environment.~0D~0A~09function update() {~0D~0A~09@1// Update characters.~0D~0A~09@1for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@2this.characters[i].update(this.timeStep);~0D~0A~09@1}~0D~0A~0D~0A~09@1// Update bullets.~0D~0A~09@1for (i = 0; i < this.bullets.length; ++i) {~0D~0A~09@2this.bullets[i].update(this.timeStep);~0D~0A~0D~0A~09@2// Bullet-character collisions.~0D~0A~09@2for (j = 0; j < this.characters.length; ++j) {~0D~0A~09@3if (this.bullets[i].collidesWith(this.characters[j], this.timeStep)) {~0D~0A~09@4this.bullets.remove(i);~0D~0A~09@4--i;~0D~0A~0D~0A~09@4--this.characters[j].health;~0D~0A~09@4if (this.characters[j].health <= 0) {~0D~0A~09@5this.characters.remove(j);~0D~0A~09@4}~0D~0A~09@4break;~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1}~0D~0A~0D~0A~09@1// Speed up time the longer the player has been moving, up to real time.~0D~0A~09@1if (this.characters.length > 0) {~0D~0A~09@2for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@3if (this.characters[i].agent.controlsTime()) {~0D~0A~09@4if (this.characters[i].vel.isZero()) {~0D~0A~09@5this.timeStep = MIN_TIME_STEP;~0D~0A~09@4} else {~0D~0A~09@5this.timeStep += TIME_STEP_STEP;~0D~0A~09@5if (this.timeStep > MAX_TIME_STEP) {~0D~0A~09@6this.timeStep = MAX_TIME_STEP;~0D~0A~09@5}~0D~0A~09@4}~0D~0A~09@3}~0D~0A~09@2}~0D~0A~09@1} else {~0D~0A~09@2this.timeStep = MAX_TIME_STEP;~0D~0A~09@1}~0D~0A~09@1this.totalTime += this.timeStep;~0D~0A~09}~0D~0A~0D~0A~09function draw() {~0D~0A~09@1Graphics2D.Draw.fill(255, 255, 255);~0D~0A~0D~0A~09@1// Draw bullets.~0D~0A~09@1for (i = 0; i < this.bullets.length; ++i) {~0D~0A~09@2this.bullets[i].draw();~0D~0A~09@1}~0D~0A~0D~0A~09@1// Draw characters.~0D~0A~09@1for (i = 0; i < this.characters.length; ++i) {~0D~0A~09@2this.characters[i].draw();~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Whether the given body is out of the environment bounds.~0D~0A~09function outOfBounds(body) {~0D~0A~09@1return body.pos.x < -2.0 * body.radius~0D~0A~09@2|| body.pos.x > X_RES + 2.0 * body.radius~0D~0A~09@2|| body.pos.y < -2.0 * body.radius~0D~0A~09@2|| body.pos.y > Y_RES + 2.0 * body.radius;~0D~0A~09}~0D~0A~0D~0A~09// Shoots a bullet (with no source) from from to to.~0D~0A~09function shoot(from, to) {~0D~0A~09@1bulletPos = from.clone();~0D~0A~09@1bulletVel = to.minus(from).normalize().times(BULLET_SPEED);~0D~0A~09@1this.bullets.add(new Bullet(null, bulletPos, bulletVel));~0D~0A~09}~0D~0A}~0D~0A%&Jesource/Font.cry~0Aimport Graphics2DText;~0D~0A~0D~0A// Shared font resources.~0D~0Aclass Font {~0D~0A~09static field title = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 0, 0).setSize(48);~0D~0A~09static field white = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 255, 255).setSize(16);~0D~0A~09static field black = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 0, 0).setSize(16);~0D~0A~09static field red = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 0, 0).setSize(16);~0D~0A~09static field lime = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 255, 0).setSize(16);~0D~0A~09static field yellow = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(255, 255, 0).setSize(16);~0D~0A~09static field green = FontResource.fromResource(~0dfonts/Lato-Bold.ttf~0d).getRenderer().setColor(0, 128, 0).setSize(16);~0D~0A}~0D~0A%&Jf[Graphics2DText]~0A%&Jg[Graphics2DText:enums.cry]~0A/*~0A @3On some level, some sort of font resource needs to be cached.~0A @3What is defined as a font resource varies from platform to platform~0A@1 @3For Python, it~0ds the font face, size, style~0A@1 @3For Java, it~0ds just the font~0A@1 @3For JavaScript, there~0ds nothing. You pass the font name as a string to the draw context for each use~0A @3- although, for JS, the process for checking if a font is a little weird.~0A@1 @3For OpenGL a collection of texture atlases are created.~0A @3- first each character is rendered at size 36 in individual images~0A @3- these characters are stored in a several layer cache~0A @3- each time a character is used it~0ds moved to the top cache~0A @3- every minute or so each cache layer is demoted~0A @3- every once in a while a series of textures are created~0A @3- if there are less than 200 characters rendered by the font, no cache churning occurs~0A @3- each cache/texture system is keyed off font face, size, and style~0A @3- coloring is handled by the fragment shader~0A @3- note that rendering rapidly changing characters (of something like chinese) at size 72 could kill performance, but that~0ds an edge case~0A@1*/~0Anamespace Graphics2DText {~0A@1 @3enum FontSourceType {~0A @7DEFAULT = 0,~0A @7RESOURCE = 1,~0A @7FILE = 2,~0A @7SYSTEM = 3,~0A @3}~0A@1 @3enum FontClass {~0A @7SERIF = 1,~0A @7SANS_SERIF = 2,~0A @7MONOSPACE = 3,~0A @3}~0A@1 @3enum FontStyle {~0A @7NORMAL = 0,~0A @7BOLD = 1,~0A @7ITALIC = 2,~0A @7BOLD_ITALIC = 3, // bit mask of BOLD | ITALIC~0A @3}~0A}~0A%&Jh[Graphics2DText:FontNotFoundException.cry]~0Anamespace Graphics2DText {~0A@1 @3class FontNotFoundException : Core.Exception {~0A @7constructor(m) : base (m, null) { }~0A @3}~0A}~0A%&Ji[Graphics2DText:FontRenderer.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7Renders a specific font face, style, size, and color.~0A @3*/~0A @3class FontRenderer {~0A@1 @7field font; // a FontResource instance~0A@1 @7field size = 12;~0A @7field style = FontStyle.NORMAL;~0A @7field red = 255;~0A @7field green = 255;~0A @7field blue = 255;~0A@1 @7// These are cleared every time an attribute is updated.~0A @7// These are repopulated when you call render(text).~0A @7field _native = null; // NativeFont~0A @7field _settingsKey = null; // A string key that uniquely identifies text appearance encompasing all attributes. Used as part of the texture cache~0A @7field _glRenderer = null;~0A@1 @7static field _textureCache = {}; // A cache of previously rendered images so that drawing the same text in multiple frames is done quickly~0A@1 @7// TODO: make the texture cache a layered dictionary where the first key is the the settings key and the secondary key is the text itself~0A @7// That will reduce memory churn of concatenating these two strings every time it~0ds rendered.~0A@1 @7constructor(font) {~0A @Bif (!(font is Graphics2DText.FontResource)) throw new InvalidArgumentException(~0YExpected a FontResource instance~0Y);~0A @Bthis.font = font;~0A @7}~0A@1 @7function setColor(red, green, blue) {~0A @B// TODO: verify args~0A @Bthis.red = red;~0A @Bthis.green = green;~0A @Bthis.blue = blue;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function setSize(size) {~0A @B// TODO: verify args~0A @Bthis.size = size;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function setStyle(style) {~0A @B// TODO: verify args~0A @Bthis.style = style;~0A @Bthis._native = null;~0A @Bthis._settingsKey = null;~0A @Breturn this;~0A @7}~0A@1 @7function render(text) {~0A @Bif (this._native == null) {~0A @Fthis._native = NativeFont.get(~0A @Jthis.font._sourceType, this.font._source,~0A @Jthis.size, this.style, this.red, this.green, this.blue);~0A@1 @F// don~0dt recycle the native font key for this since the native key will~0A @F// drop attributes that aren~0dt part of an allocated font face instance.~0A @F// We need all attributes in this key.~0A @Fthis._settingsKey =~0A @J[~0A @Nthis.font._sourceType, this.font._source,~0A @Nthis.size,~0A @Nthis.style,~0A @Nthis.red, this.green, this.blue~0A @J].join(~0d:~0d);~0A@1 @Fif ($$lib_graphics2dtext_isGlRenderer()) {~0A @Jthis._glRenderer = GLRenderer.get(this.font._sourceType, this.font._source, this.size, this.style, this._native);~0A @F}~0A @B}~0A@1 @BtextureKey = this._settingsKey + ~0d~1Un~0d + text;~0A @Btexture = FontRenderer._textureCache.get(textureKey);~0A @Bif (texture == null) {~0A @Ftexture = new TextSurface(this, text + ~0d@1);~0A @FFontRenderer._textureCache[textureKey] = texture;~0A @B}~0A@1 @Breturn texture;~0A @7}~0A @3}~0A}~0A%&Jj[Graphics2DText:FontResource.cry]~0Anamespace Graphics2DText {~0A@1 @3class FontResource {~0A @7field _sourceType;~0A @7field _source;~0A@1 @7~12private~0A @7constructor(sourceType, source) {~0A @Bthis._sourceType = sourceType;~0A @Bthis._source = source;~0A @7}~0A@1 @7function getRenderer() {~0A @Breturn new FontRenderer(this);~0A @7}~0A@1 @7static field _cache = {};~0A@1 @7static function _getKey(sourceType, source) {~0A @Breturn sourceType + source;~0A @7}~0A@1 @7static function _get(sourceType, source) {~0A @Bkey = sourceType + source;~0A @Bfont = FontResource._cache.get(key);~0A @Bif (font == null) {~0A @Ffont = new FontResource(sourceType, source);~0A @FFontResource._cache[key] = font;~0A @B}~0A @Breturn font;~0A @7}~0A@1 @7static function fromResource(path) {~0A @Bif (!$$lib_graphics2dtext_isResourceAvailable(path)) {~0A @Fthrow new FontNotFoundException(~0YFont resource not found: ~0d~0Y + path + ~0Y~0d~0Y);~0A @B}~0A @Breturn FontResource._get(FontSourceType.RESOURCE, path);~0A @7}~0A@1 @7static function fromDisk(path) {~0A @Bthrow new NotImplementedException();~0A @7}~0A@1 @7static function fromSystem(name) {~0A @Bif (!FontResource.isSystemFontPresent(name)) {~0A @Fthrow new FontNotFoundException(~0YFont not installed: ~0d~0Y + name + ~0Y~0d~0Y);~0A @B}~0A @Breturn FontResource._get(FontSourceType.SYSTEM, name);~0A @7}~0A@1 @7static function isSystemFontPresent(name) {~0A @Breturn $$lib_graphics2dtext_isSystemFontPresent(name);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultSerifFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.SERIF);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultSansSerifFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.SANS_SERIF);~0A @7}~0A@1 @7// TODO: implement this~0A @7static function getDefaultMonospaceFont() {~0A @Breturn FontResource._get(FontSourceType.DEFAULT, FontClass.MONOSPACE);~0A @7}~0A @3}~0A}~0A%&Jk[Graphics2DText:GLRenderer.cry]~0Aimport Math;~0A@1namespace Graphics2DText {~0A@1 @3/*~0A @7A GL renderer juggles around some textures~0A@1 @7A GL instance always stays alive.~0A @7They are only created on a unique (font, style, size) basis~0A @7They will unload their textures if unused and will essentially take up no space, so having a~0A @7lifetime tied to the life of the app is okay.~0A@1 @7nativeData[0] -> some native object that takes in a character code and generates a bitmap.~0A @3*/~0A @3class GLRenderer {~0A @7/*~0A @BnativeData[0] -> some sort of native font resource the system can use to generate~0A @Fbitmaps that can be loaded as textures.~0A @FIf the nativeRenderer happens to only include face, style, and size, then this may possibly be the same instance.~0A @BnativeData[1] -> a nullable int-to-int dictionary that maps char code ID~0ds to texture ID~0ds~0A @Fset to null to invalidate and reconstruct~0A @7*/~0A@1 @7field sheets = [];~0A @7field sheetByCharId = {};~0A @7field tileByCharId = {};~0A @7field spaceWidth = null;~0A @7field nativeFont = null;~0A@1 @7static field glRenderers = {};~0A @7static field unknownChars = [];~0A@1 @7static function get(sourceType, sourceId, size, style, nativeFont) {~0A @Bkey = [sourceType, sourceId, size, style].join(~0d:~0d);~0A @Brenderer = GLRenderer.glRenderers.get(key);~0A @Bif (renderer == null) {~0A @Frenderer = new GLRenderer(nativeFont, size);~0A @FGLRenderer.glRenderers[key] = renderer;~0A @B}~0A @Breturn renderer;~0A @7}~0A@1 @7~12private~0A @7constructor(nativeFont, size) {~0A @Bthis.nativeFont = nativeFont;~0A @Bthis.spaceWidth = size * 3 / 10;~0A @B$@2(~0dallocNativeData~0d, this, 1);~0A @B$@2(~0dsetNativeData~0d, this, 0, null);~0A @7}~0A@1 @7function renderText(text, sizeOut, textSurfaceWithNativeData, tileList) {~0A @Bwidth = 0;~0A @Bheight = 0;~0A @BnewTiles = null;~0A @BcharIds = [];~0A @Bxs = [];~0A @Bys = [];~0A @BlastTile = null;~0A @Bfor (c : text) {~0A @FcharId = Core.ord(c);~0A @Fif (c == ~0d ~0d) {~0A @Jwidth += this.spaceWidth;~0A @F} else if (c == ~0d~1Ur~0d || c == ~0d~1Un~0d) {~0A @Jthrow new Core.NotImplementedException();~0A @F} else {~0A @JcharIds.add(charId);~0A @Jtile = this.tileByCharId.get(charId);~0A @Jif (tile == null) {~0A @Nretry = true;~0A @Ntile = new GLTile(this, charId);~0A @Nif (newTiles == null) newTiles = [];~0A @NnewTiles.add(tile);~0A @J}~0A @JlastTile = tile;~0A @Jxs.add(width - tile.leftMargin);~0A @Jys.add(0);~0A @JtileList.add(tile);~0A @Jheight = Math.max(height, tile.height);~0A @Jwidth += tile.effectiveWidth;~0A @F}~0A @B}~0A @Bwidth += (lastTile.width - lastTile.effectiveWidth - tile.leftMargin) * 6 / 10;~0A@1 @Bif (newTiles != null) {~0A @F// Just dump all of them into new sheets.~0A @F// The consolidator will get triggered at the end of the frame and make the packing better.~0A @Fsheets = GLTextureSheet.makeSheets(newTiles);~0A @Ffor (sheet : sheets) {~0A @Jthis.sheets.add(sheet);~0A @Jfor (tile : sheet.tiles) {~0A @Nthis.sheetByCharId[tile.charId] = sheet;~0A @Nthis.tileByCharId[tile.charId] = tile;~0A @J}~0A @F}~0A @B}~0A@1 @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 1, xs);~0A @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 2, ys);~0A @B$$lib_graphics2dtext_glSetNativeDataIntArray(textSurfaceWithNativeData, 3, charIds);~0A @B$@2(~0dsetNativeData~0d, textSurfaceWithNativeData, 4, charIds.length);~0A@1 @BsizeOut[0] = width;~0A @BsizeOut[1] = height;~0A @7}~0A@1 @7/*~0A @BIf there are two or more textures that are less than or equal to 512 x 512, then trigger a reconsolidation~0A @BThis is called once per frame.~0A@1 @BTODO: add this to a Game frame end callback~0A @7*/~0A @7function consolidate() {~0A @Bthrow new NotImplementedException();~0A @7}~0A @3}~0A}~0A%&Jl[Graphics2DText:GLTextureSheet.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7nativeData[0] -> bitmap instance (lifetime is very short, discarded once loaded)~0A @3*/~0A @3class GLTextureSheet {~0A @7field tiles = [];~0A @7field tilesByCharId = {};~0A@1 @7constructor(rows) {~0A @By = 0;~0A @Bheight = rows[0][0].height;~0A @Bxs = [];~0A @Bys = [];~0A @Btiles = [];~0A @Bfor (row : rows) {~0A @Fthis.tiles.concat(row);~0A @Fx = 0;~0A @Ffor (tile : row) {~0A @Jthis.tilesByCharId[tile.charId] = tile;~0A @Jtile.sheetX = x;~0A @Jtile.sheetY = y;~0A @Jtile.sheet = this;~0A @Jtile.currentTextureId = null;~0A @Jxs.add(x);~0A @Jys.add(y);~0A @Jtiles.add(tile);~0A @Jx += tile.width;~0A @F}~0A @Fy += height;~0A @B}~0A @B// This will apply the properties to the individual tile~0ds metadata~0A @B// It will not load the texture yet.~0A @B// TODO: remove ~0YLoadTexture~0Y from the name.~0A @B$$lib_graphics2dtext_glGenerateAndLoadTexture(xs, ys, tiles, y);~0A @7}~0A@1 @7static function makeSheets(tiles) {~0A @B// A simple O(n) greedy packing algorithm~0A @B// Since sheets are on a per-size basis, all tiles will have the same height~0A @B// that makes things a little simpler.~0A@1 @Bsheets = [];~0A @BtilesLength = tiles.length;~0A @BtileIndex = 0;~0A @Bif (tiles.length > 0) {~0A @Fheight = tiles[0].height;~0A @FrowCount = 1024 / height;~0A @Ftiles.sort(GLTextureSheet.sortByWidthKeyFunction);~0A @Frows = [];~0A @Fwhile (rows.length < rowCount && tileIndex < tilesLength) {~0A @Jrow = [];~0A @Jrows.add(row);~0A @Jwidth = 0;~0A @J// Fill the front of the row with as many large tiles as possible~0A @Jwhile (tileIndex < tilesLength && width + tiles[tileIndex].width < 1024) {~0A @Ntile = tiles[tileIndex++];~0A @Nrow.add(tile);~0A @Nwidth += tile.width;~0A @J}~0A @J// once you run out of space, fill the row with as many small tiles as possible~0A @Jwhile (tileIndex < tilesLength && width + tiles[tilesLength - 1].width < 1024) {~0A @Ntile = tiles[--tilesLength];~0A @Nrow.add(tile);~0A @Nwidth += tile.width;~0A @J}~0A @F}~0A @Fsheets.add(new GLTextureSheet(rows));~0A @B}~0A @Breturn sheets;~0A @7}~0A@1 @7static function sortByWidthKeyFunction(tile) {~0A @Breturn tile.width;~0A @7}~0A @3}~0A}~0A%&Jm[Graphics2DText:GLTile.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7The following are attributes of the image and never change once allocated:~0A @7nativeData[0] -> A bitmap instance of the tile~0A @7nativeData[1] -> pixel width (int)~0A @7nativeData[2] -> pixel height (int)~0A @7nativeData[3] -> left margin (int)~0A @7nativeData[4] -> effective width (int) (distance to right margin from left margin)~0A@1 @7The following are values added each time this is allocated to a texture~0A @7nativeData[5] -> GL texture ID# or -1 if not initialized~0A @7nativeData[6] -> bitmap instance that needs to be loaded into the [5] GL Texture ID, or null if already loaded.~0A @7nativeData[7] -> texture region left~0A @7nativeData[8] -> texture region top~0A @7nativeData[9] -> texture region right~0A @7nativeData[10] -> texture region bottom~0A @7.@2~0A @7nativeData[11] -> full texture width (always 1024)~0A @7nativeData[12] -> full texture height~0A @3*/~0A @3class GLTile {~0A @7field charId;~0A @7field width;~0A @7field height;~0A @7field currentTextureId;~0A @7field sheet;~0A @7field sheetX;~0A @7field sheetY;~0A @7field lastUsed;~0A @7field renderer;~0A @7field leftMargin;~0A @7field effectiveWidth;~0A@1 @7constructor(renderer, charId) {~0A @Bthis.charId = charId;~0A @Bthis.renderer = renderer;~0A @B$@2(~0dallocNativeData~0d, this, 13);~0A @Bsize = [0, 0, 0, 0];~0A @Bif (!$$lib_graphics2dtext_glRenderCharTile(renderer.nativeFont, this, charId, size)) {~0A @Fthrow new InvalidArgumentException(~0YCould not render character (~0Y + charId + ~0Y)~0Y);~0A @B}~0A @Bthis.width = size[0];~0A @Bthis.height = size[1];~0A @Bthis.leftMargin = size[2];~0A @Bthis.effectiveWidth = size[3];~0A @7}~0A @3}~0A}~0A%&Jn[Graphics2DText:NativeFont.cry]~0Anamespace Graphics2DText {~0A@1 @3/*~0A @7This class is not exposed to the user.~0A@1 @7Wraps a native font font instance.~0A @7Almost all platforms have some sort of notion of a font object.~0A @7What properties of a font constitutes a unique font object varies, though.~0A @7This class encompasses whatever that notion is.~0A@1 @7nativeData[0] -> native font instance. This will be:~0A @B- JS -> a simple struct with the attributes in it~0A @B- PyGame -> a pygame.font.Font instance~0A @B- Java -> a java.awt.Font instance~0A @B- C# -> a font object~0A@1 @3*/~0A @3class NativeFont {~0A@1 @7field key;~0A@1 @7static field _nativeFontInstances = {};~0A@1 @7~12private~0A @7constructor(type, id, size, style, r, g, b) {~0A @B// Native code must generate the key because some of these attributes will be dropped.~0A @B// For example, PyGame has a single font instance no matter what color, but a font instance changes~0A @B// depending on the size and style. Therefore r/g/b will be dropped, but the others must be part of~0A @B// the unique key.~0A @Bthis.key = NativeFont.getUniqueKey(type, id, size, r, g, b, style);~0A@1 @B$@2(~0dallocNativeData~0d, this, 1);~0A @Boutput = [null];~0A @B// assigns native font instance to native data~0A @Bstatus = $$lib_graphics2dtext_createNativeFont(this, type, id, size, r, g, b, style);~0A @Bif ($@2(~0disJavaScript~0d) && type == 1) {~0A @Fi = 0;~0A @Fwhile (!$$lib_graphics2dtext_isDynamicFontLoaded()) {~0A @Jif (++i > 10@3) throw new FontNotFoundException(~0YError loading font resource.~0Y);~0A @JCore.sleep(.001);~0A @F}~0A @B}~0A @Bswitch (status) {~0A @Fcase 0: break; // all is fine~0A @Fcase 1: throw new FontNotFoundException(~0YFont not installed: ~0d~0Y + id + ~0Y~0d~0Y);~0A @Fcase 2: throw new FontNotFoundException(~0YFont resource not found: ~0d~0Y + id + ~0Y~0d~0Y);~0A @Fdefault: throw new Exception(); // this won~0dt happen~0A @B}~0A @7}~0A@1 @7static function get(type, id, size, style, r, g, b) {~0A @Bkey = NativeFont.getUniqueKey(type, id, size, r, g, b, style);~0A @BnativeFont = NativeFont._nativeFontInstances.get(key);~0A @Bif (nativeFont == null) {~0A @FnativeFont = new NativeFont(type, id, size, style, r, g, b);~0A @FNativeFont._nativeFontInstances[key] = nativeFont;~0A @B}~0A @Breturn nativeFont;~0A @7}~0A@1 @7static function getUniqueKey(type, id, size, r, g, b, style) {~0A @Boutput = [];~0A @B$$lib_graphics2dtext_getNativeFontUniqueKey(~0A @F// convert everything to strings~0A @Ftype + ~0d@1, id + ~0d@1, size + ~0d@1, r + ~0d@1, g + ~0d@1, b + ~0d@1, style + ~0d@1,~0A @Foutput);~0A @Breturn output.join(~0d|~0d);~0A @7}~0A @3}~0A}~0A%&Jo[Graphics2DText:TextSurface.cry]~0Aimport Graphics2D;~0A@1namespace Graphics2DText {~0A@1 @3/*~0A @7Presents itself as something similar to a GraphicsTexture that can be drawn to the screen.~0A @7The actual implementation may vary depending on the platform.~0A @7It may either be a cached image or a set of drawing instructions.~0A @3*/~0A @3class TextSurface {~0A @7field _glRenderer = null;~0A @7field _isGl = false;~0A @7field width;~0A @7field height;~0A @7field text;~0A @7field tiles = null;~0A@1 @7constructor(fontRenderer, text) {~0A @Bthis.text = text;~0A@1 @B/*~0A @Ffor bitmap based platforms:~0A @FnativeData[0] -> a native image object such as a pygame.Surface or JS canvas~0A@1 @Ffor GL based platforms:~0A @FnativeData[0] -> unused~0A @FnativeData[1] -> an int[] of x coordinates~0A @FnativeData[2] -> an int[] of y coordinates~0A @FnativeData[3] -> an int[] of character codes~0A @FnativeData[4] -> number of characters to render (array.length of the above 3 arrays)~0A @FnativeData[5] -> red~0A @FnativeData[6] -> green~0A @FnativeData[7] -> blue~0A @B*/~0A@1 @BsizeOut = [0, 0];~0A @Bif ($$lib_graphics2dtext_isGlRenderer()) {~0A @Fthis.tiles = [];~0A @F$@2(~0dallocNativeData~0d, this, 8);~0A @Fthis._glRenderer = fontRenderer._glRenderer;~0A @Fthis._glRenderer.renderText(text, sizeOut, this, this.tiles);~0A @F$@2(~0dsetNativeData~0d, this, 5, fontRenderer.red);~0A @F$@2(~0dsetNativeData~0d, this, 6, fontRenderer.green);~0A @F$@2(~0dsetNativeData~0d, this, 7, fontRenderer.blue);~0A @Fthis._isGl = true;~0A @B} else {~0A @F$@2(~0dallocNativeData~0d, this, 1);~0A @F$$lib_graphics2dtext_renderText(~0A @JsizeOut,~0A @Jthis,~0A @JfontRenderer._native,~0A @JfontRenderer.font._sourceType,~0A @JfontRenderer.font._source,~0A @JfontRenderer.size,~0A @JfontRenderer.style,~0A @JfontRenderer.red,~0A @JfontRenderer.green,~0A @JfontRenderer.blue,~0A @Jtext);~0A @B}~0A @Bthis.width = sizeOut[0];~0A @Bthis.height = sizeOut[1];~0A @7}~0A@1 @7function _refreshGlRenderer() {~0A @Bthrow new Core.NotImplementedException();~0A @7}~0A@1 @7function draw(x, y) {~0A @Breturn this.drawWithAlpha(x, y, 255);~0A @7}~0A@1 @7function drawWithAlpha(x, y, alpha) {~0A @Bif (this._isGl){~0A @Freturn $$lib_graphics2dtext_glRenderTextSurface(this, this.tiles, Graphics2D.Draw._queue, x, y, alpha);~0A @B} else {~0A @FGraphics2D.Draw.rectangle(0, 0, 10, 10, 255, 0, 0); // ensure the Draw._queue has capacity~0A @Freturn $$lib_graphics2dtext_simpleBlit(this, Graphics2D.Draw._queue, x, y, alpha);~0A @B}~0A @7}~0A @3}~0A}~0A%&Jpsource/Input.cry~0Aimport Game;~0D~0A~0D~0A// Represents input events since the last call to window.pumpEvents().~0D~0Aclass Input {~0D~0A~09static field keysDown = new Set();~0D~0A~09static field keysPressed = new Set();~0D~0A~09static field keysReleased = new Set();~0D~0A~09static field leftClick = false;~0D~0A~09static field rightClick = false;~0D~0A~09static field mousePos = Vec2.zero();~0D~0A~0D~0A~09// Processes relevant input events and removes them from the event list.~0D~0A~09static function update(eventList) {~0D~0A~09@1Input.keysPressed = new Set();~0D~0A~09@1Input.keysReleased = new Set();~0D~0A~09@1Input.leftClick = false;~0D~0A~09@1Input.rightClick = false;~0D~0A~0D~0A~09@1for (i = 0; i < eventList.length;) {~0D~0A~09@2event = eventList[i];~0D~0A~09@2if (event.type == Game.EventType.KEY_DOWN) {~0D~0A~09@3Input.keysDown.add(event.key);~0D~0A~09@3Input.keysPressed.add(event.key);~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.KEY_UP) {~0D~0A~09@3Input.keysDown.remove(event.key);~0D~0A~09@3Input.keysReleased.add(event.key);~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_LEFT_DOWN) {~0D~0A~09@3Input.leftClick = true;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_RIGHT_DOWN) {~0D~0A~09@3Input.rightClick = true;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else if (event.type == Game.EventType.MOUSE_MOVE) {~0D~0A~09@3Input.mousePos.x = event.x;~0D~0A~09@3Input.mousePos.y = event.y;~0D~0A~09@3eventList.remove(i);~0D~0A~09@2} else {~0D~0A~09@3++i;~0D~0A~09@2}~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09static function pressed(key) {~0D~0A~09@1return Input.keysPressed.contains(key);~0D~0A~09}~0D~0A~09static function released(key) {~0D~0A~09@1return Input.keysReleased.contains(key);~0D~0A~09}~0D~0A~09static function down(key) {~0D~0A~09@1return Input.keysDown.contains(key);~0D~0A~09}~0D~0A~09static function up(key) {~0D~0A~09@1return !Input.keysDown.contains(key);~0D~0A~09}~0D~0A}~0D~0A%&Jqsource/main.cry~0Aimport Game;~0Aimport Graphics2D;~0Aimport Math;~0Aimport Random;~0A@1const FPS = 60;~0Aconst X_RES = 800;~0Aconst Y_RES = 600;~0A@1const DIE_DOG_SHOOT_CHANCE = 0.02;~0A@1enum GameState { MENU, CAMPAIGN, DANCE_DOG }~0A@1function main() {~0A~09window = new Game.GameWindow(~0YLUKEWARM~0Y, FPS, X_RES, Y_RES);~0A@1~09gameState = GameState.MENU;~0A~09titleImage = Font.title.render(~0YL U K E W A R M~0Y);~0A~09campaignImage = Font.black.render(~0YCampaign~0Y);~0A~09danceDogImage = Font.black.render(~0YDance, Dog~0Y);~0A~09menuChoice = 0;~0A@1~09programRunning = true;~0A~09while (programRunning) {~0A~09@1eventList = window.pumpEvents();~0A~09@1Input.update(eventList);~0A~09@1for (i = 0; i < eventList.length; i++) {~0A~09@2event = eventList[i];~0A~09@2if (event.type == Game.EventType.QUIT) {~0A~09@3programRunning = false;~0A~09@2}~0A~09@1}~0A@1~09@1if (Input.pressed(Game.KeyboardKey.F2)) {~0A~09@2// Restart game.~0A~09@2gameState = GameState.MENU;~0A~09@1}~0A@1~09@1switch (gameState) {~0A~09@2case GameState.MENU:~0A~09@3if (Input.pressed(Game.KeyboardKey.UP) || Input.pressed(Game.KeyboardKey.W)) {~0A~09@4--menuChoice;~0A~09@3}~0A~09@3if (Input.pressed(Game.KeyboardKey.DOWN) || Input.pressed(Game.KeyboardKey.S)) {~0A~09@4++menuChoice;~0A~09@3}~0A~09@3menuChoice ~0b= 2;~0A@1~09@3if (Input.pressed(Game.KeyboardKey.ENTER) || Input.pressed(Game.KeyboardKey.SPACE)) {~0A~09@4switch (menuChoice) {~0A~09@5case 0:~0A~09@6// Campaign~0A~09@6gameState = GameState.CAMPAIGN;~0A~09@6env = new Environment();~0A~09@6env.characters =~0A~09@7[ new Character(new Player(env), new Vec2(X_RES / 2, Y_RES / 2))~0A~09@7, new Character(new AI(env), new Vec2(X_RES / 4, Y_RES / 4))~0A~09@7, new Character(new AI(env), new Vec2(3 * X_RES / 4, Y_RES / 4))~0A~09@7, new Character(new AI(env), new Vec2(3 * X_RES / 4, 3 * Y_RES / 4))~0A~09@7, new Character(new AI(env), new Vec2(X_RES / 4, 3 * Y_RES / 4))~0A~09@7];~0A~09@6break;~0A~09@5case 1:~0A~09@6// Die, Dog~0A~09@6gameState = GameState.DANCE_DOG;~0A~09@6env = new Environment();~0A~09@6env.characters = [new Character(new Player(env), new Vec2(X_RES / 2, Y_RES / 2))];~0A~09@6score = 0;~0A~09@6break;~0A~09@4}~0A~09@3}~0A@1~09@3Graphics2D.Draw.fill(255, 255, 255);~0A~09@3// Title~0A~09@3new Drawing()~0A~09@4.setImage(titleImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 4)~0A~09@4.alignCenter()~0A~09@4.alignMiddle()~0A~09@4.draw();~0A~09@3// Campaign~0A~09@3campaignDrawing = new Drawing()~0A~09@4.setImage(campaignImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 2)~0A~09@4.alignCenter()~0A~09@4.alignBottom();~0A~09@3// Dance, Dog~0A~09@3danceDogDrawing = new Drawing()~0A~09@4.setImage(danceDogImage)~0A~09@4.setPos(X_RES / 2, Y_RES / 2)~0A~09@4.alignCenter()~0A~09@4.alignTop();~0A~09@3// Highlight current menu choice.~0A~09@3switch (menuChoice) {~0A~09@4case 0:~0A~09@5campaignDrawing.setBgColor(Color.red(128));~0A~09@5break;~0A~09@4case 1:~0A~09@5danceDogDrawing.setBgColor(Color.red(128));~0A~09@5break;~0A~09@3}~0A~09@3// Draw menu options.~0A~09@3campaignDrawing.draw();~0A~09@3danceDogDrawing.draw();~0A@1~09@3break;~0A~09@2case GameState.CAMPAIGN:~0A~09@3// Draw environment.~0A~09@3env.draw();~0A@1~09@3// Update environment.~0A~09@3env.update();~0A@1~09@3// Draw timer.~0A~09@3timeImage = Font.white.render(~0YTime: ~0Y + Math.floor(env.totalTime));~0A~09@3new Drawing()~0A~09@4.setImage(timeImage)~0A~09@4.setPos(0, 0)~0A~09@4.setBgColor(Color.black(128))~0A~09@4.draw();~0A@1~09@3// Draw health if the player is alive.~0A~09@3if (env.characters.length > 0) {~0A~09@4healthImage = Font.red.render(~0YHealth: ~0Y + env.characters[0].health);~0A~09@4new Drawing()~0A~09@5.setImage(healthImage)~0A~09@5.setPos(0, timeImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3}~0A~09@3break;~0A~09@2case GameState.DANCE_DOG:~0A~09@3// Choose target: the player or a random point if the player is dead.~0A~09@3target = env.characters.length > 0~0A~09@4? env.characters[0].pos~0A~09@4: new Vec2(Random.randomInt(0, X_RES), Random.randomInt(0, Y_RES))~0A~09@4;~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(Vec2.zero(), target);~0A~09@3}~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(new Vec2(X_RES, 0), target);~0A~09@3}~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(new Vec2(0, Y_RES), target);~0A~09@3}~0A~09@3if (Random.randomFloat() < DIE_DOG_SHOOT_CHANCE) {~0A~09@4env.shoot(new Vec2(X_RES, Y_RES), target);~0A~09@3}~0A@1~09@3// Update environment.~0A~09@3env.update();~0A@1~09@3// Remove out-of-bounds bullets and update score.~0A~09@3for (i = 0; i < env.bullets.length; ++i) {~0A~09@4if (env.outOfBounds(env.bullets[i])) {~0A~09@5if (env.characters.length > 0 && env.bullets[i].source != env.characters[0]) {~0A~09@6++score;~0A~09@5}~0A~09@5env.bullets.remove(i);~0A~09@5--i;~0A~09@4}~0A~09@3}~0A@1~09@3// Draw environment.~0A~09@3env.draw();~0A@1~09@3// Draw timer.~0A~09@3timeImage = Font.white.render(~0YTime: ~0Y + Math.floor(env.totalTime));~0A~09@3new Drawing()~0A~09@4.setImage(timeImage)~0A~09@4.setPos(0, 0)~0A~09@4.setBgColor(Color.black(128))~0A~09@4.draw();~0A@1~09@3// Draw score.~0A~09@3scoreImage = Font.lime.render(~0YScore: ~0Y + score);~0A~09@3new Drawing()~0A~09@4.setImage(scoreImage)~0A~09@4.setPos(0, timeImage.height)~0A~09@4.setBgColor(Color.black(128))~0A~09@4.draw();~0A@1~09@3// Draw health if the player is alive.~0A~09@3if (env.characters.length > 0) {~0A~09@4healthImage = Font.red.render(~0YHealth: ~0Y + env.characters[0].health);~0A~09@4new Drawing()~0A~09@5.setImage(healthImage)~0A~09@5.setPos(0, timeImage.height + scoreImage.height)~0A~09@5.setBgColor(Color.black(128))~0A~09@5.draw();~0A~09@3}~0A~09@3break;~0A~09@1}~0A@1~09@1window.clockTick();~0A~09}~0A}~0A%&Jrsource/Player.cry~0Aimport Game;~0D~0A~0D~0A// Interface for an agent, which controls a character.~0D~0Aclass Player : Agent {~0D~0A~09constructor(env) : base(env) {}~0D~0A~0D~0A~09function control(character) {~0D~0A~09@1if (Input.leftClick && !Input.mousePos.equals(character.pos)) {~0D~0A~09@2bulletHeading = Input.mousePos.minus(character.pos).normalize();~0D~0A~09@2bulletPos = character.pos.plus(bulletHeading.times(BULLET_SPAWN_DISTANCE));~0D~0A~09@2bulletVel = bulletHeading.times(BULLET_SPEED);~0D~0A~09@2~0D~0A~09@2this.env.bullets.add(new Bullet(character, bulletPos, bulletVel));~0D~0A~09@1}~0D~0A~09@1character.vel = Vec2.zero();~0D~0A~09@1if (Input.down(Game.KeyboardKey.A)) {~0D~0A~09@2--character.vel.x;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.D)) {~0D~0A~09@2++character.vel.x;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.W)) {~0D~0A~09@2--character.vel.y;~0D~0A~09@1}~0D~0A~09@1if (Input.down(Game.KeyboardKey.S)) {~0D~0A~09@2++character.vel.y;~0D~0A~09@1}~0D~0A~09@1character.vel.normalize();~0D~0A~09@1character.vel = character.vel.times(CHARACTER_SPEED);~0D~0A~09}~0D~0A~0D~0A~09function controlsTime() { return true; }~0D~0A}~0D~0A%&Jssource/Set.cry~0A// Implementation of Set using a built-in dictionary.~0D~0Aclass Set {~0D~0A~09field keys = {};~0D~0A~0D~0A~09constructor(keys = {}) {~0D~0A~09@1this.keys = keys;~0D~0A~09}~0D~0A~0D~0A~09// Removes all elements from the set.~0D~0A~09function clear() {~0D~0A~09@1this.keys.clear();~0D~0A~09}~0D~0A~09// Returns a one-level-deep copy of the set.~0D~0A~09function clone() {~0D~0A~09@1return new Set(this.keys.clone());~0D~0A~09}~0D~0A~09// Returns whether this set contains the given key.~0D~0A~09function contains(key) {~0D~0A~09@1return this.keys.contains(key);~0D~0A~09}~0D~0A~09// Adds the given key to the set.~0D~0A~09function add(key) {~0D~0A~09@1this.keys[key] = null; // Value unused.~0D~0A~09}~0D~0A~09// Removes the given key from the set, if present.~0D~0A~09function remove(key) {~0D~0A~09@1this.keys.remove(key);~0D~0A~09}~0D~0A}~0D~0A%&Jtsource/Util.cry~0Aimport Random;~0D~0A~0D~0A// Utility functions that don~0dt fit anywhere else.~0D~0Aclass Util {~0D~0A~09// Fisher-Yates shuffle a list.~0D~0A~09static function shuffle(list) {~0D~0A~09@1for (i = 0; i < list.length - 1; ++i) {~0D~0A~09@2j = Random.randomInt(i, list.length);~0D~0A~09@2t = list[i];~0D~0A~09@2list[i] = list[j];~0D~0A~09@2list[j] = t;~0D~0A~09@1}~0D~0A~09}~0D~0A~0D~0A~09// Solves ax^2 + bx + c = 0 and returns the list of real roots. The a coefficient must not be zero.~0D~0A~09static function getQuadraticRoots(a, b, c) {~0D~0A~09@1determinant = b ** 2 + 4 * a * c;~0D~0A~09@1if (determinant < 0.0) {~0D~0A~09@2// No roots.~0D~0A~09@2return [];~0D~0A~09@1} else if (determinant > 0.0) {~0D~0A~09@2// Two roots.~0D~0A~09@2return~0D~0A~09@3[ (-b - determinant ** 0.5) / (2.0 * a)~0D~0A~09@3, (-b + determinant ** 0.5) / (2.0 * a)~0D~0A~09@3];~0D~0A~09@1} else {~0D~0A~09@2// One root.~0D~0A~09@2return [-b / (2.0 * a)];~0D~0A~09@1}~0D~0A~09}~0D~0A}~0D~0A%&Jusource/Vec2.cry~0A// A simple 2D vector type.~0D~0Aclass Vec2 {~0D~0A~09field x;~0D~0A~09field y;~0D~0A~0D~0A~09static function zero() { return new Vec2(0.0, 0.0); }~0D~0A~0D~0A~09constructor(x, y) {~0D~0A~09@1this.x = x;~0D~0A~09@1this.y = y;~0D~0A~09}~0D~0A~0D~0A~09function clone() {~0D~0A~09@1return new Vec2(this.x, this.y);~0D~0A~09}~0D~0A~0D~0A~09function isZero() {~0D~0A~09@1return this.x == 0.0 && this.y == 0.0;~0D~0A~09}~0D~0A~0D~0A~09function plus(that) {~0D~0A~09@1return new Vec2(this.x + that.x, this.y + that.y);~0D~0A~09}~0D~0A~0D~0A~09function minus(that) {~0D~0A~09@1return new Vec2(this.x - that.x, this.y - that.y);~0D~0A~09}~0D~0A~0D~0A~09function times(k) {~0D~0A~09@1return new Vec2(this.x * k, this.y * k);~0D~0A~09}~0D~0A~0D~0A~09function dividedBy(k) {~0D~0A~09@1return new Vec2(this.x / k, this.y / k);~0D~0A~09}~0D~0A~0D~0A~09function lengthSquared() {~0D~0A~09@1return this.x ** 2 + this.y ** 2;~0D~0A~09}~0D~0A~0D~0A~09function length() {~0D~0A~09@1return this.lengthSquared() ** 0.5;~0D~0A~09}~0D~0A~0D~0A~09function normalize()~0D~0A~09{~0D~0A~09@1if (!this.isZero()) {~0D~0A~09@2l = this.length();~0D~0A~09@2this.x /= l;~0D~0A~09@2this.y /= l;~0D~0A~09@1}~0D~0A~09@1return this;~0D~0A~09}~0D~0A~0D~0A~09function normalized()~0D~0A~09{~0D~0A~09@1result = this.clone();~0D~0A~09@1result.normalize();~0D~0A~09@1return result;~0D~0A~09}~0D~0A~0D~0A~09function equals(that) {~0D~0A~09@1return this.x == that.x && this.y == that.y;~0D~0A~09}~0D~0A}~0D~0A%5A001X5A00157A001@1z2@2mRA002336495C6F7I8L9OARBUCXDa5A7090JAW0XHYeZ@11a@1Ob@1lG@29H@2K1@2V7A0011287A00291K*B00A%*B0US%*B0uC%*B0@1ZT%*B0@2KI%*B0@3AJ%&f1Core,v1%&f2Math,v1%&f3Random,v1%&f4Graphics2D,v1%&f5Game,v1%&f6ImageResources,v1%&f7Graphics2DText,v1%1R@1Zx#1nr3#1o1^3#1oA3#1oW^3#1pp3#1q1^3#2HZ3#2Hg^3#2Hl3#2Hs^3#2LD3#2LL^3#2g43#2hK^3#2hk3#2ht3#2i8^3#2iC^3#2lA3#2lK3#2lu^3#2m2^3#2rY3#2rj^3#2ry3#2sB^3#2sM3#2sV^3#2sp3#2t9^3#2zU3#34F^3#34K3#34R^3#34z3#35A^3#3793#37X3#37v^3#38E^3#38n3#38x^3#39D3#39c^3#39l3#3AA^3#3AN3#3Ah^3!TLukewarm%~AVjg0000I@6X0main%5i32106C64@1t1M2302h42313Ot02h56C510102323Ot22h66C510102333Ot22h76C510102342h42352h82363j6f2b@693j026C500112373j736C21d0u2h42383j843j732M727B2bG3j733j841W2393j952M62h92Q02b22hA2362j82h92702382Z^L2hB6C21e1u2b22h42313j183r2@5X2hD6C21e1u2e22hC6C21e1u2b42j52h92712352hF6C21e1u2e22hE6C21e1u2b42j52h92702352j52hG2742352hI6C21e1u2e22hH6C21e1u2bo3j593r0m2h92316C60b1k23A3jAA3jAA6C61m1v3iKJ6C62@181y6C62F1h3jAA6C6171J3iML6C62@181y6C62F1h3jAA6C6171J3iM36C62@181y6C62F1h3jAA6C6171J3iN36C62@181y6C62F1h3jAA6C6171J3iNL6C62@181y6C62F1h2L535B0391F2hG2316C60b1k23A3jAA3jAA6C61m1v3iKJ6C62@181y6C62F1h2L135B02h423B39104iOOO6C23@270T6C60W1j3j2H6C5101G3iMJ6C5201F6C5001E6C5001D6C5000C6C60W1j3j3J6C5101G3iKJ6C5201F6C5001E6C5001I23C6C60W1j3j4L6C5101G3iKJ6C5201F6C5001E6C5001K23D3j593r1A3jCN2hP6C21K1i6C5100M39153jDO2hP6C21K1i6C5100M39103jCN6C5000C3jDO6C5000C391@3Y3jAA6C5000C3jAA6C5000P3Ot12hQ3jAA2MQ3II12706C5101023E6C60W1j3jER6C5101G3i446C5201F2hP6C21G1i6C5101M6C5000C3jAA2MB2M72h427D2bL3Ot32hR3jAA2MB2h41W2MS2706C5101023F6C60W1j3jFT6C5101G2h43jER2MU6C5201F2hP6C21G1i6C5101M6C5000C391@2l3jAA2MB2M72h427D2b63jAA2MB2h41W2MV2Z53i246C12@3r103i346C12@3r106C62@181y23G5ES3012hT27B2b43jAA6C20w1y3jGX6C5200W5ES3012hT27B2b53jAA3i426C62@181y3jGX6C5200W5ES3012hT27B2b53jAA3i346C62@181y3jGX6C5200W5ES3012hT27B2b53jAA3i326C62@181y3jGX6C5200W3jAA6C5000P2h42383j843jAA2MZ2M727B2bf3jAA3jAA2MZ3j841W6C5101Y2bT3jAA2MB2M72h427D2cA3jAA2MZ3j841W2Ma3jAA2MB2h41W2Q12b42jB2h927023B3jAA2MZ3j846C5100b2j82h92712382j82h92702382Z^l3jAA6C5000C3Ot12hQ3jAA2MQ3II12706C5101023E6C60W1j3jER6C5101G3i446C5201F2hP6C21G1i6C5101M6C5000C3Ot42hU3jBc2706C5101023H6C60W1j3jHd6C5101G2h43jER2MU6C5201F2hP6C21G1i6C5101M6C5000C3jAA2MB2M72h427D2bO3Ot32hR3jAA2MB2h41W2MS2706C5101023F6C60W1j3jFT6C5101G2h43jER2MU3jHd2MU2706C5201F2hP6C21G1i6C5101M6C5000C39103j026C5000e2Z%-383%2o0~BV@19j12002712assert%2hV2313j0h3j1i2h83I712o1~AV@1Ak1100150fail%2hA3j0i2hA3I712o1~AV@1Bm1100130chr%3j0l3I812o1~AV@1Cn0000020currentTime%3IA12o1~AV@1Do1100130ord%3j0l3I912o1~AV@1Ep1100130parseFloat%3j0l3I212o1~AV@1Fq1100130parseInt%3j0l3I112o1~AV@1Gr1100130print%3j0l3I312o1~AV@1Ht11001C0sleep%3j0s6I512432c33j0s2h427E2hW2h83I703j0s3IU12o1~AV@1Iu1100130typeof%3j0l3I412o1~AV@1Jv1100130isString%3j0l5I51152o1~AV@1Kw1100130isNumber%3j0l6I512432o1~AV@1Lz22002B0_LIB_CORE_list_sort_by_key%3j1x2M72h927D2b53j1x3j0y3j1x6C12@1M103IB02o0~AV@1M@1322004I0_LIB_CORE_list_map%2L02322h42hX3j1x1y2Y63j2@113j0y3j3@126C410106C5100@102Z^71l1l1l3j2@112o1~AV@1N@1522005U0_LIB_CORE_list_filter%2L02322h42hX3j1x1y2YI3j0y3j3@126C410102343j4@145I5112182b42hA2hY2hA3I703j4@142b33j2@113j3@126C5100@102Z^J1l1l1l3j2@112o1~AV@1O@160000020getCurrentExecutionToken%3I612o1~AV@1P@170000020getExecutionIterationCounter%3IT12o1~AV@1Q@180000020getProjectId%3IV12o1~AV@1R@1A2200240_LIB_CORE_invoke%3j0y3j1@196C4^10102o1~AV@1T@1B22002j0_LIB_CORE_generateException%3j063r3d3j1i6C61@1W131u3j1i6C61@1X141u3j1i6C61@1Y151u3j1i6C61@1Z161u3j1i6C61@1a171u3j1i6C61@1b181u3j1i6C61@1c191u3j1i6C61@1d1A1u3j1i6C61@1f1C1u3j1i6C61@1h1E1u3j1i6C61@1i1F1u3j1i6C61@1j1G1u3j1i6C61@1k1H1u3j1i6C61@1V121u2o0~AV@1l@1D1100130getClassFromInstance%3j0@1C3Id12o1~BV@1m@1I01004U12getClasses%2hV2303Ib12313j0@1E2hV2Q12bK2L02322h42hX3j1@111y2Y83j3@1G3j0@1E6C5101@1F2b33j2@1H3j3@1G6C5100@102Z^91l1l1l3j2@1H2o13j1@112o1~AV@1n@1K11001A0getMethods%3j0@1J3I413r433j0@1J3Ic12o12hZ6C61@1a171u2o0~AV@3b@1M1100130arccos%3j0@1L3ID12o1~AV@3c@1N1100130arcsin%3j0@1L3IE12o1~BV@3d@1Q12002612arctan%2h92313j0@1O3j1@1P3IF12o1~AV@3e@1S1100130cos%3j0@1R3IG12o1~AV@3f@1T1100130floor%3j0l3II12o1~AV@3g@1U1100130sin%3j0@1R3IO12o1~AV@3h@1V1100130tan%3j0@1R3IP12o1~AV@3i@1W1100140log10%3j0l2ha3IQ12o1~AV@3j@1X1100140ln%3j0l2hb3IQ12o1~AV@3k@1Y1100140log2%3j0l2hc3IQ12o1~AV@3l@1Z1100130abs%3j0l3IC12o1~AV@3m@1b2200240max%3j0@1a3j1@143IJ12o1~AV@3n@1c2200240min%3j0@1a3j1@143IK12o1~AV@3o@1f3300350ensureRange%3j0l3j1@1d3j2@1e3IH12o1~AV@3p@1h1100130sign%3j0@1g3IN12o1~AV@3q@1i0000020randomFloat%5ES3012o1~BV@3r@1l12002K12randomInt%2hV2313j1@1j2hV2Q02b72h43j0@1k5Ed3212m22he6C11@3s102Z63j0@1k3j1@1j5Ed3212m22hf6C11@3s102o1~AV@3s@1n1100140_randomIntErrorHelper%3j0@1m6C61@1a171u2o0~AV@3t@1o0000020randomBool%5Eg3012o1~BV@3u@1r12002812randomChance%2h92315ES3013j1@1p2723j0@1q27B2o1~AV1@1s111I140control%2hh6C61@1V121u2o0~AV2@1t001I040controlsTime%2hh6C61@1V121u2o0~AV3^1113I130<constructor>%3j0A2602o0~MFI^1@1u3^1000A0V11@1s1012@1t20Agent%~AV4@1s111J4w0control%5ES3012hT27B2b42hi5ES3012722635ES3012hT27B2b82N42hj27D2b22hj2Z12hk2645ES3012hT27B2bO7C3061J53j0@1x2MV6C5101@1w6C5001@1v2313j0@1x2MV3j1@202hl6C5101@1z6C5101@1y2323j1@202hm6C5101@1z2332N02MZ3j0@1x3j2@213j3@226C63C1g6C5100@103j0@1x2N33IG12N33IO16C62@181y2N46C5101@1z35@2302o0~AV5@1t001J020controlsTime%2hA2o1~AV6@26001J1X0getTarget%2h42303j042N02MB2M727B2bJ2N02MB3j041W2M@246C5001@1t2b72N02MB3j041W2MV6C5001@252o12j02h92702302Z^P3i246C12@3r103i346C12@3r106C62@181y2o1~AV7^1113J170<constructor>%3j0A6C7130I2hi5ES3012722632o0~WFJI@277^1003@280V04@290k11@1s4012@1t5015@2660AI%~AV8@2K221KA@2S0collidesWith%3j0@2A2M@232N16C5101@1w2323j2@2C6C5001@2B2b22hA2o12N23j0@2A2M@2D2702hG2752332N02343j0@2A2MV2353j2@2C2M@1P2hG2753j2@2C2M@2E2hG2752702362hG3j4@2F2M@1P3j2@2C2M@1P2723j2@2C2M@1P3j5@2G2M@1P2722713j4@2F2M@2E3j2@2C2M@2E2722703j2@2C2M@2E3j5@2G2M@2E2722712722373j4@2F2M@1P2hG2753j5@2G2M@1P2hG2752702hG3j4@2F2M@1P2723j5@2G2M@1P2722713j4@2F2M@2E2hG2752703j5@2G2M@2E2hG2752702hG3j4@2F2M@2E2723j5@2G2M@2E2722713j3@2H2712383j6@1a3j7@143j8@1G6C23u1x2393j9@2I2M72h42Q02b32hA2o12Zg3j9@2I2M72h92Q02bD2hj3j9@2I2h41W27C2c53j9@2I2h41W3j1@2J27C2o12ZO2hj3j9@2I2h41W27C2c53j9@2I2h41W3j1@2J27C2eB2hj3j9@2I2h91W27C2c53j9@2I2h91W3j1@2J27C2o12o0~AV9^1333K370<constructor>%3j0V2603j1@232613j2@2D2622o0~RFK^1@2L9^1000V0V01@230V02@2D0V13@2K80Body%~AVAP111g170update%2N02N13j0@2J6C5101@1z6C5101@1y2602o0~AVBC001g1@160draw%2N02N12hk6C5101@1z6C5101@1w2302N02N56C5101@1w6C5001@2M2N03j0@2N6C5101@1w6C5001@2M27B2b22N52302N02M@1P2hn2703II12N02M@2E2hn2703II13j0@2N2M@1P2hn2703II13j0@2N2M@2E2hn2703II15i44Oo6C28@230T3OT12hG2N02M@1P2N22712hn2703II12N02M@2E2N22712hn2703II12hp2N22722hp2N22722h42h42h42hO4IS092o0~AVC^1333g3A0<constructor>%3j1V3j2@232hq6C7390K3j0a2643j1V6C5001@252652o0~RFgK@2OC^1004a0V05@2P0V16PA017CB0Bullet%~AVDP111h1q0update%2N02N13j0@2J6C5101@1z6C5101@1y2602N02M@1P2N227B2b42N02N235@1P02ZC2N02M@1P2h22N227127D2b52N02h22N227135@1P02N02M@2E2N227B2b42N02N235@2E02ZC2N02M@2E2h32N227127D2b52N02h32N227135@2E02N41t6C5100@1s2o0~AVEC001h1c0draw%2N46C5001@1t2b26C20G1i2Z16C20K1i2303OT12hG2N02M@1P2N22712hn2703II12N02M@2E2N22712hn2703II12hp2N22722hp2N22723j0@2Q2M@2R3j0@2Q2M@2S3j0@2Q2M@142hO4IS092o0~AVF^1223h270<constructor>%3j1V6C20w1y2hm6C7390K3j0@242642o0~RFhK@2TF^1004@240V05S0r16PD017CE0Character%~BVG@2U012i1612black%2hO2304i4443j0@1a6C64L1i2o1~BVH@2V012i1612gray%2hO2304iPPP3j0@1a6C64L1i2o1~BVI@2W012i1612silver%2hO2304isss3j0@1a6C64L1i2o1~BVJ@2X012i1612white%2hO2304iOOO3j0@1a6C64L1i2o1~BVK@2Y012i1612red%2hO2304i44O3j0@1a6C64L1i2o1~BVL^1343i4B12<constructor>%2hO2333j0@2R2603j1@2S2613j2@142623j3@1a2632o0~RFi^1@2ZL^1000@2R0V01@2S0V02@140V03@1a0VColor%~AVMF221j260setPos%3j0@1P2603j1@2E2611t2o1~AVN@2a001j040alignLeft%2hj2621t2o1~AVOE001j040alignCenter%2hn2621t2o1~AVP@2b001j040alignRight%2hb2621t2o1~AVQK001j040alignTop%2hj2631t2o1~AVRD001j040alignMiddle%2hn2631t2o1~AVSI001j040alignBottom%2hb2631t2o1~AVTM111j140setBgColor%3j0@2Q2641t2o1~AVUG111j140setImage%3j0@2c2651t2o1~AVVC001j2k0draw%2N02N52M@2d2N22723II12712302N12N52MU2N32723II12712312N42hV2Q12bH3OT12h93j0@2e3j1@2f2N52M@2d2N52MU2N42M@2R2N42M@2S2N42M@142N42M@1a4IS092N52hV2Q12b42N53j0@2e3j1@2f6C5200C2o0~AVW^1003j010<constructor>%2o0~@1PFj^1@2gW^1000@1P0401@2E0402@2h0j03@2i0j04@2j0V05@2c0V16FM017@2aN018EO019@2bP01AKQ01BDR01CIS01DMT01EGU01FCV0Drawing%~AVXP001k2@270update%2h42303j042N02M727B2bA2N03j041W2N26C5100P2j02h92702302Z^F2h42303j042N12M727B2bv2N13j041W2N26C5100P2h42313j1@2k2N02M727B2be2N13j041W2N03j1@2k1W2N26C5201@2K2bQ2N13j046C5100b2j02h92712302N03j1@2k1W2P12MS2h927135S02N03j1@2k1W2MS2h427C2b32N03j1@2k6C5100b39152j12h92702312Z^j2j02h92702302Z%-62%2N02M72h427D2bc2h42303j042N02M727B2bU2N03j041W2M@246C5001@1t2bJ2N03j041W2M@236C5001@2B2b32ht2622ZA2N22ht2702622N22hb27D2b22hb2622j02h92702302Z^Z2Z22hb2622N32N22702632o0~AVYC001k1Z0draw%4iOOO6C23@270T2h42303j042N12M727B2b92N13j041W6C5000C2j02h92702302Z^E2h42303j042N02M727B2b92N03j041W6C5000C2j02h92702302Z^E2o0~AVZY111k1e0outOfBounds%3j0@2l2MV2M@1P2hu3j0@2l2M@2D27227B2eU3j0@2l2MV2M@1P2h22hp3j0@2l2M@2D27227027D2eJ3j0@2l2MV2M@2E2hu3j0@2l2M@2D27227B2eA3j0@2l2MV2M@2E2h32hp3j0@2l2M@2D27227027D2o1~AVaW221k4H0shoot%3j0@2m6C5001@252323j1@2n3j0@2m6C5101@1w6C5001@1v2hm6C5101@1z2332N12hV3j2@213j3@226C63C1g6C5100@102o0~AVb^1003k010<constructor>%2o0~lFk^1@2ob^1000B1001Z1002@2J0t03Q0j14PX015CY016YZ017Wa0Environment%~AV@3v^1004t0v0<constructor>%2hv6C21@2Z1n6C5001@2r4i4446C5301@2q2hw6C5101@2p34t02hv6C21@2Z1n6C5001@2r4iOOO6C5301@2q2hx6C5101@2p34t12hv6C21@2Z1n6C5001@2r4i4446C5301@2q2hx6C5101@2p34t22hv6C21@2Z1n6C5001@2r4i44O6C5301@2q2hx6C5101@2p34t32hv6C21@2Z1n6C5001@2r4i4O46C5301@2q2hx6C5101@2p34t42hv6C21@2Z1n6C5001@2r4i4OO6C5301@2q2hx6C5101@2p34t52hv6C21@2Z1n6C5001@2r4i4P46C5301@2q2hx6C5101@2p34t62o0~AVc^1003t010<constructor>%2o0~7Ft^1@2sc@3v7Font%~AV@3w^1004u0D0<constructor>%6C60s1w34u06C60s1w34u16C60s1w34u22hA34u32hA34u46C20w1y34u52o0~AVdP112u3@1a0update%6C60s1w34u16C60s1w34u22hA34u32hA34u42h42313j143j032M727B2b@1K3j033j141W2323j252M62hx2Q02bC3Ou03j252M@2t6C5100@103Ou13j252M@2t6C5100@103j033j146C5100b2Z^Q3j252M62hy2Q02bC3Ou03j252M@2t6C5100b3Ou23j252M@2t6C5100@103j033j146C5100b2Z^h3j252M62hz2Q02b62h834u33j033j146C5100b2Z^s3j252M62h@102Q02b62h834u43j033j146C5100b2Z%-65%3j252M62hH2Q02bC3Ou53j252M@1P35@1P03Ou53j252M@2E35@2E03j033j146C5100b2Z%-82%2j12h92702312Z%-87%2o0~AVe@2v112u140pressed%3Ou13j0@2t6C5101@2u2o1~AVf@2w112u140released%3Ou23j0@2t6C5101@2u2o1~AVg@2x112u140down%3Ou03j0@2t6C5101@2u2o1~AVh@2y112u150up%3Ou03j0@2t6C5101@2u182o1~AVi^1003u010<constructor>%2o0~7Fu^1@2zi@3w6Input%~AVk@1s111v4@1N0control%3Ou32c53Ou53j0@1x2MV6C5101@30182bO3Ou53j0@1x2MV6C5101@1w6C5001@1v2313j0@1x2MV3j1@202hl6C5101@1z6C5101@1y2323j1@202hm6C5101@1z2332N02MZ3j0@1x3j2@213j3@226C63C1g6C5100@103j0@1x6C20w1y35@2302h@116C21g1u2b73j0@1x2M@232P12M@1P2h927135@1P02h@126C21g1u2b73j0@1x2M@232P12M@1P2h927035@1P02hC6C21g1u2b73j0@1x2M@232P12M@2E2h927135@2E02hE6C21g1u2b73j0@1x2M@232P12M@2E2h927035@2E03j0@1x2M@236C5000@1v3j0@1x3j0@1x2M@232hk6C5101@1z35@2302o0~AVl@1t001v020controlsTime%2h82o1~AVm^1113v130<constructor>%3j0A6C7130I2o0~HFvI@31m^1011@1sk012@1tl0Player%~AVn@32001w030clear%2N06C5000@322o0~AVo@25001w040clone%2N06C5001@256C61s1w2o1~AVp@2u111w140contains%2N03j0@2t6C5101@2u2o1~AVq@10111w150add%2N03j0@2t2hV2202o0~AVrb111w140remove%2N03j0@2t6C5100b2o0~BVs^1013w1512<constructor>%2K02303j0@342602o0~bFw^1@33s^1000@342011@32n012@25o013@2up014@10q015br0Set%~AVt@35112x4Y0shuffle%2h42313j143j0x2M72h927127B2bO3j143j0x2M76C12@3r102323j0x3j141W2333j0x3j143j0x3j2@2k1W2203j0x3j2@2k3j3@122202j12h92702312Z^V2o0~AVu@37332x4r0getQuadraticRoots%3j1@142hG2752h@133j0@1a2723j2@1G2722702333j3@362hj27B2b32L02o12ZZ3j3@362hj27D2bN3j1@141k3j3@362hn2752712hp3j0@1a2722733j1@141k3j3@362hn2752702hp3j0@1a2722732L22o12Z83j1@141k2hp3j0@1a2722732L12o12o0~AVv^1003x010<constructor>%2o0~7Fx^1@38v^10Util%~AVw@39002y030zero%3ijj6C62@181y2o1~AVx@25001y040clone%2N02N16C62@181y2o1~AVy@2B001y080isZero%2N02hj2Q02c32N12hj2Q02o1~AVz@1y111y1A0plus%2N03j0@2A2M@1P2702N13j0@2A2M@2E2706C62@181y2o1~AV@10@1w111y1A0minus%2N03j0@2A2M@1P2712N13j0@2A2M@2E2716C62@181y2o1~AV@11@1z111y180times%2N03j0@3A2722N13j0@3A2726C62@181y2o1~AV@12@3B111y180dividedBy%2N03j0@3A2732N13j0@3A2736C62@181y2o1~AV@13@2M001y080lengthSquared%2N02hG2752N12hG2752702o1~AV@147001y040length%7C30@131y82hn2752o1~AV@15@1v001y1F0normalize%7C30y1y3182bA7C30@141y92302N03j0@3C2732602N13j0@3C2732611t2o1~AV@16@3E001y160normalized%7C30x1y22303j0@3D6C5000@1v3j0@3D2o1~AV@17@30111y1A0equals%2N03j0@2A2M@1P2Q02c42N13j0@2A2M@2E2Q02o1~AV@18^1223y250<constructor>%3j0@1P2603j1@2E2612o0~@1AFy^1@3F@18^1000@1P0V01@2E0V12@25x013@2By014@1yz015@1w@10016@1z@11017@3B@12018@2M@130197@1401A@1v@1501B@3E@1601C@30@170Vec2%~AV@1S^10031010<constructor>%2o0~7F1^1@3G@1S^10Core.Object%~AV@1U@3H0012030getTrace%1t3Ia12o1~CV@1V^102322G224<constructor>%2hV2302hV2311t2hG3IY01t2h42hA3IZ03j0i2613j1@3J2602o0~MF2^1@3I@1V^1000@3J0V01i0V12@3H@1U0Core.Exception%~CV@1W^102332C224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V021t2h42h83IZ02o0~7F32@3K@1W^10Core.FatalException%~CV@1X^1023428224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7F42@3M@1X^10Core.AssertionFailedException%~CV@1Y^1023528224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7F52@3N@1Y^10Core.DivisionByZeroException%~CV@1Z^1023628224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7F62@3O@1Z^10Core.IndexOutOfRangeException%~CV@1a^1023728224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7F72@3P@1a^10Core.InvalidArgumentException%~CV@1b^1023828224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7F82@3Q@1b^10Core.InvalidAssignmentException%~CV@1c^1023928224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7F92@3R@1c^10Core.InvalidInvocationException%~CV@1d^1023A28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FA2@3S@1d^10Core.InvalidKeyException%~CV@1e^1023B28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FB2@3T@1e^10Core.InvalidOperationException%~CV@1f^1023C28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FC2@3U@1f^10Core.KeyNotFoundException%~CV@1g^1023D28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FD2@3V@1g^10Core.NotImplementedException%~CV@1h^1023E28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FE2@3W@1h^10Core.NullReferenceException%~CV@1i^1023F28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FF2@3X@1i^10Core.UnassignedVariableException%~CV@1j^1023G28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FG2@3Y@1j^10Core.UnknownFieldException%~CV@1k^1023H28224<constructor>%2hV2302hV2313j0@3L3j1@1G6C72@1V022o0~7FH2@3Z@1k^10Core.UnsupportedOperationException%~AV@1o^1113L130<constructor>%3j062602o0~CFL^1@3a@1o^100060VGame.Event%~AV@3x^1004M090<constructor>%2L034M12L034M22L034M32L034M42o0~AV@1p@3b002M060getScreenInfo%2hA2h42h42L35E@145112o1~AV@1qe001M1O0clockTick%2h42h43OM41y2Y33j0@126C400002Z^41l1l1l5E@155002h42h43OM31y2Y33j0@126C400002Z^41l1l1l2o0~AV@1r1001M5@3T0pumpEvents%2L02303OM15E@165112313j1@122M72322h42333j343j2@3d27B2b@2w3j1@123j342P12h92702331W3r5@2f3j1@123j342P12h92702331W3j1@123j342P12h92702331W6C62@1x1Q234391@2T3j1@123j342h92711W3i843j1@123j342P12h92702331W3j1@123j342P12h92702331W6C65@1v1O234391@263j1@123j342h92711W3iA43j1@123j342P12h92702331W3j1@123j342P12h92702331W6C65@1v1O234391@1j3j1@123j342h92711W3i8G3j1@123j342P12h92702331W3j1@123j342P12h92702331W6C65@1v1O234391@1M3j1@123j342h92711W3iAG3j1@123j342P12h92702331W3j1@123j342P12h92702331W6C65@1v1O234391z3j1@123j342P12h92702331W3j1@123j342P12h92702331W3j1@123j342P12h92702331W6C63@1y1R234391b3j1@123j342P12h92702331W2h86C62@1u1N234391Q3j1@123j342P12h92702331W2hA6C62@1u1N234391F3j1@123j342P12h92702331W6C61@1z1S23439152hA2hV2h83I7039103j0@113j4@3c6C5100@102Z%-186%3OM22M72h427D2bC2h42h93OM21y2Y43j1@123j0@116C410002Z^51l1l1l3j0@112o1~AV@1s@3f111M1F0setTitle%2j02h@172702303j0@3e2M72h42Q02b32h@186C61@1a171u3j0@3e5E@195112o1~CV@1t^1463M9@2S224<constructor>%2hV2342hV2353j0@3e5I51152h@1A2h83I702h@1B2362h@1C2372h@1D2383j1@3j6I512432h@1E3j6@122702h83I703j2@2d6I512432h@1C3j6@122702h83I703j3U6I512432h@1D3j6@122702h83I703j4@3k2hV2Q02e23j4@3k6I512432h@1F3j7@3l2703j6@122702h83I703j5@3m2hV2Q02e23j5@3m6I512432h@1F3j8@3n2703j6@122702h83I703OM02hV2Q02h@1G2h83I701t34M03j1@3j2673j4@3k2m13j2@2d2343j5@3m2m13j3U2353j2@2d3II12323j3U3II12333j4@3k3II12343j5@3m3II12353j2@2d2613j3U2622h@1H2363j2@2d2h427D3j7@3l3j6@122702h83I703j3U2h427D3j8@3n3j6@122702h83I703j4@3k2h427D2h@1F3j7@3l2703j6@122702h83I703j5@3m2h427D2h@1F3j8@3n2703j6@122702h83I703j1@3j2h427D2h@1E3j6@122702h83I703j1@3j5E@1I5103j2@2d3j3U3j4@3k3j5@3m5E@1J5403j0@3e5E@195102o0~bFM^1@3g@1t@3x501@3h0V02@3i0V07@3j0V18e@1q0191@1r01A@3f@1s0Game.GameWindow%~AV@1u^1223N2B0<constructor>%3j1@2x2b22hx2Z12hy6C71@1o0L3j0@2t2613j1@2x2622o0~HFNL@3o@1u^1001@2t0V02@2x0VGame.KeyEvent%~AV@1w^1333P370<constructor>%3j066C71@1o0L3j1@1P2613j2@2E2622o0~HFPL@3p@1w^1001@1P0V02@2E0VGame.MouseEvent%~AV@1v^1553O590<constructor>%3j063j3@1P3j4@2E6C73@1w0P3j1@3r2633j2@2x2642o0~HFOP@3q@1v^1003@3r0V04@2x0VGame.MouseClickEvent%~AV@1x^1223Q250<constructor>%2hH3j0@1P3j1@2E6C73@1w0P2o0~7FQP@3s@1x^10Game.MouseMoveEvent%~AV@1y^1333R370<constructor>%2h@1K3j0@1P3j1@2E6C73@1w0P3j2@3u2632o0~CFRP@3t@1y^1003@3u0VGame.MouseScrollEvent%~AV@1z^1113S150<constructor>%2h96C71@1o0L3j0@3w2612o0~CFSL@3v@1z^1001@3w0VGame.QuitEvent%~AV@29^1004T0J0<constructor>%6C60@1S1134T06C60@1S1134T13OT03OT22h45E@1L4303OT13OT32h45E@1L4303OM44n@202T6C5100@103OM34n@212T6C5100@102o0~AV@20@3x002T1J0_renderer%3OT15E@1M4103OT13OT32h95E@1L4303OT12303OT034T13j0@1234T03OT32303OT234T33j0@1234T22o0~AV@21@3y002T070_rendererReset%2hV34T33OT13OT32hG5E@1L4312o1~BV@22@3z782T8E12ellipse%2hO2373OT12hG3j0@2e3j1@2f3j2@2d3j3U3j4@2R3j5@2S3j6@143j7@1a4IS192o1~BV@23@45892T9@1Y12line%2hO2383j4@402h927B2b12o03Ie03j1@413j3@422Q02bL3OT12h93j0@433j2@443IK13j1@413j4@402hG2732713j2@443j0@432713IC13j4@403j5@2R3j6@2S3j7@143j8@1a4IS192o13j0@433j2@442Q02bL3OT12h93j0@433j4@402hG2732713j1@413j3@423IK13j4@403j3@423j1@412713IC13j5@2R3j6@2S3j7@143j8@1a4IS192o13j4@402hX27B2c25E@1N401182bD3OT12hX3j0@433j1@413j2@443j3@423j4@403j5@2R3j6@2S3j7@143j8@1a4IS1A2o13OT12hr3j0@433j1@413j2@443j3@423j4@402h42h42h43j5@2R3j6@2S3j7@143j8@1a4IS0D3OT15E@1O4112o1~BV@24@46782T8E12rectangle%2hO2373OT12h93j0@2e3j1@2f3j2@2d3j3U3j4@2R3j5@2S3j6@143j7@1a4IS192o1~BV@25@4D9A2TAG12triangle%2hO2393OT12h@133j0@473j1@483j2@493j3@4A3j4@4B3j5@4C3j6@2R3j7@2S3j8@143j9@1a4IS1B2o1~BV@26@4GBC2TCI12quad%2hO23B3OT12hr3j0@473j1@483j2@493j3@4A3j4@4B3j5@4C3j6@4E3j7@4F3j8@2R3j9@2S3jA@143jB@1a4IS1D2o1~AV@27@4H332T4K0fill%3OM02333OT13OT32hG5E@1L4303OT12h92h42h43j3@122M@3h3j3@122M@3i3j0@2R3j1@2S3j2@142hO4IS192o1~AV@28^1003T010<constructor>%2o0~7FT^1@4I@28@294Graphics2D.Draw%~AV@3y^1004e050<constructor>%2h42h42L234e02o0~AV@2A@4f112eG@2X0load%3j0@4J2M@4K2313j1@4M6C5000@4L3j0@4J2M@4N2323j0@4J2M@4O2335E@1P4012b@1W3j1@4M2M@4P2343Of03j4@2t6C5101@4Q2353j5@4R2hV2Q02bm6C60@2P1f2353j1@4M2M@2d6C21@2B1e2363j1@4M2MU6C21@2B1e2373j5@4R3j6@4S35@2d03j5@4R3j7@4T35U02h43j6@4S3j7@4T2L26C62@3a1d2383j1@4M2M@2d3j1@4M2MU2hA6C63@3D1Z2393j9@4U3j1@4M35@4K03j8@4W6C5000@4V3j8@4W3j9@4U3i446C5300@4X3j8@4W6C5000@4Y3j5@4R2h83j8@4W5E@1Q4303Of03j4@2t3j5@4R2203j0@4J2M@4Z23A3j0@4J2M@4a23B3j5@4R2M@2d2hj27023C3j5@4R2MU2hj27023D3jA@1P3jC@4b2733jB@2E3jD@4c2733jA@1P3j2@2d2703jC@4b2733jB@2E3j3U2703jD@4c2732L423E2Zb2h43j2@2d3j3U2L26C62@3a1d2383j8@4W6C5000@4V3j8@4W3j0@4J3j0@4J2M@4Z1k3j0@4J2M@4a1k6C5300@4X3j8@4W6C5000@4Y6C60@2P1f2353j5@4R3j2@2d35@2d03j5@4R3j3U35U03j5@4R2h83j8@4W5E@1Q4302hj2hj2hb2hb2L423E3j5@4R3j2@2d3j3U6C63@2O1e23F3jF@4d3j5@4R3jE@4e3j2@2d3j3U5E@1R4503jF@4d2o1~AV@2B@4h112e2V0_nextPowerOf2%3j0@1g3j0@1g2h92712762h42Q02b23j0@1g2o13j0@1g2hG2732313j1@4g2h427D2b92j03j1@4g2772302j12hG2732312Z^D3j0@1g2h92702o1~AV@2CC221e2F0draw%3OT11t8i44444443j0@1P3j1@2E3i445E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2D@4j331e3G0drawWithAlpha%3OT11t8i444444@1U3j0@1P3j1@2E2h43j2@4i5E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2E@4m661e6T0drawRegion%3j4@2d2h42Q02e33j5U2h42Q02b12o03OT11t2h93j2@4k3j3@4l3j4@2d3j5U3i443j0@1P3j1@2E3i445E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2F@4n441e4Q0drawStretched%3j2@2d2h42Q02e33j3U2h42Q02b12o03OT11t6i4444G3j2@2d3j3U3j0@1P3j1@2E3i445E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2G@4u881e8c0drawRegionStretched%3j2@4r2h42Q02eB3j3@4q2h42Q02e73j6@4p2h42Q02e33j7@4o2h42Q02b12o03OT11t2hX3j4@4k3j5@4l3j6@4p3j7@4o3j2@4r3j3@4q3j0@4s3j1@4t3i445E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2H@4v991e9L0drawRegionStretchedWithAlpha%3OT11t2h@1V3j4@4k3j5@4l3j6@4p3j7@4o3j2@4r3j3@4q3j0@4s3j1@4t3i445E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2I@4w331e3G0drawRotated%3OT11t8i444444@133j0@1P3j1@2E3j2@1R2h45E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2J@4x441e4G0drawRotatedWithAlpha%3OT11t8i444444@1W3j0@1P3j1@2E3j2@1R3j3@4i5E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2K@4yAA1eAM0drawWithOptions%3OT11t2h@1X3j4@4k3j5@4l3j6@4p3j7@4o3j2@4r3j3@4q3j0@4s3j1@4t3j8@1R3j9@4i5E@1S4D12b22hV2Z42hA2h@1T2hA3I712o1~AV@2L@51111e3R0_createResCopy%3j0@4z3j0@4z2L22315E@1P401182bI6C60@2P1f2323j2@503j0@4z2M@2d35@2d03j2@503j0@4z2MU35U03j2@502hA3j0@4z5E@1Q4303j1@112h93j2@502203j1@112o1~AV@2M@52221e4T0flip%3j0@3n2e13j1@2C182b21t2o12N07C31@2L1eD2323j2@4z2h91W2N12N26C63@2O1e2331t3j3@113j0@3n3j1@2C3j2@4z2h41W3j2@4z2h91W5E@1Y4612o1~AV@2N@55221e7@1F0scale%3j0@3l5I51132c23j1@3n5I5113182e73j0@3l2h42Q02e33j1@3n2h42Q02b42hA2h@1Z2hA3I703j0@3l2h427B2323j1@3n2h427B2333j2@542e13j3@532bB3j2@543j3@537C32@2M1eE2343j0@3l3IC12303j1@3n3IC12312Z21t2343j0@3l2N12Q02c33j1@3n2N22Q02b23j4@4W2o12N07C31@2L1eD2353j5@4z2h91W3j0@3l3j1@3n6C63@2O1e2363j4@4W3j6@113j0@3l3j1@3n3j5@4z2h41W3j5@4z2h91W5E@1a4603j6@112o1~AV@2O^1333e370<constructor>%3j0@582603j1@2d2613j2U2622o0~@1KFe^1@56@2O@3y100@570V01@2d0V02U0V14C@2C015@4j@2D016@4m@2E017@4n@2F018@4u@2G019@4v@2H01A@4w@2I01B@4x@2J01C@4y@2K01D@51@2L01E@52@2M01F@55@2N0Graphics2D.GraphicsTexture%~AV@3z^1004f030<constructor>%2K034f02o0~AV@2P^1003f010<constructor>%2o0~HFf^1@59@2P@3z101@2d0V02U0VGraphics2D.GraphicsTextureResource%~AV@2Q^1113l140<constructor>%3j0@3L2hV6C72@1V022o0~7Fl2@5A@2Q^10Graphics2DText.FontNotFoundException%~AV@40^1004m030<constructor>%2K034m02o0~AV@2R@2q331m3C0setColor%3j0@2Y2633j1@5B2643j2@5C2652hV2662hV2671t2o1~AV@2S@2p111m180setSize%3j0@5D2612hV2662hV2671t2o1~AV@2T@5F111m180setStyle%3j0@5E2622hV2662hV2671t2o1~AV@2U0111m3@130render%2N62hV2Q02bZ2N02M@5G2N02M@5H2N12N22N32N42N56C27@2p1r2662N02M@5G2N02M@5H2N12N22N32N42N52L72h@1b6C5101@5I2675E@1c7012b92N02M@5G2N02M@5H2N12N22N66C25@2h1o2682N72h@1d2703j0@5J2702313Om03j1@5K6C5101@4Q2323j2@4d2hV2Q02bA1t3j0@5J2h@172706C62@2v1s2323Om03j1@5K3j2@4d2203j2@4d2o1~AV@2V^1113m1A0<constructor>%3j0@5M2Xn182b32h@1e6C61@1a171u3j0@5M2602o0~@1AFm^1@5L@2V@40100@5M0V01@5D0@1W02@5E0403@2Y0O04@5B0O05@5C0O06@5N0V07@5O0V08@5P0V1A@2q@2R01B@2p@2S01C@5F@2T01D0@2U0Graphics2DText.FontRenderer%~AV@41^1004n030<constructor>%2K034n02o0~AV@2W@2r001n030getRenderer%1t6C61@2V1m2o1~AV@2X@5R222n240_getKey%3j0@5Q3j1a2702o1~AV@2Y@5S222n4M0_get%3j0@5Q3j1a2702323On03j2@2t6C5101@4Q2333j3@5M2hV2Q02b83j0@5Q3j1a6C62@2g1n2333On03j2@2t3j3@5M2203j3@5M2o1~AV@2Z@5U112n1F0fromResource%3j0@5T5E@1f711182b72h@1g3j0@5T2702h@1h2706C61@2Q1l1u2h93j0@5T6C22@2Y1n2o1~AV@2a@5V112n130fromDisk%6C60@1g1D1u2o0~AV@2b@5X112n1F0fromSystem%3j0@5W5E@1i711182b72h@1j3j0@5W2702h@1h2706C61@2Q1l1u2hX3j0@5W6C22@2Y1n2o1~AV@2c@5Y112n130isSystemFontPresent%3j0@5W5E@1i7112o1~AV@2d@5Z002n030getDefaultSerifFont%3i946C22@2Y1n2o1~AV@2e@5a002n030getDefaultSansSerifFont%3iG46C22@2Y1n2o1~AV@2f@5b002n030getDefaultMonospaceFont%3iX46C22@2Y1n2o1~AV@2g^1223n250<constructor>%3j0@5Q2603j1a2612o0~MFn^1@5c@2g@41100@5G0V01@5H0V13@2r@2W0Graphics2DText.FontResource%~AV@42^1004o050<constructor>%2K034o02L034o12o0~AV@2h@4Q552o7Q0get%3j0@5Q3j1@5d3j2@5D3j3@5E2L42h@1b6C5101@5I2353Oo03j5@2t6C5101@4Q2363j6@5e2hV2Q02b83j4@5f3j2@5D6C62@2k1o2363Oo03j5@2t3j6@5e2203j6@5e2o1~AV@2i@5v441oH@2q0renderText%2h42342h42352hV2362L02372L02382L02392hV23A2h42h@1V3j0@5J1y2Y@1C3jB@1G3I9123C3jB@1G2h@1k2Q02b52j42N32702342Z^D3jB@1G2h@1l2Q02e33jB@1G2h@1d2Q02b36C60@1g1D1u2Z^O3j7@5g3jC@5h6C5100@102N23jC@5h6C5101@4Q23D3jD@5i2hV2Q02bF2h823E1t3jC@5h6C62@2o1q23D3j6@5j2hV2Q02b22L02363j6@5j3jD@5i6C5100@103jD@5i23A3j8@5k3j4@2d3jD@5i2M@5l2716C5100@103j9@5m2h46C5100@103j3@5n3jD@5i6C5100@103j5U3jD@5i2MU3IJ12352j43jD@5i2M@5o2702342Z%-75%1l1l1l2j43jA@5p2M@2d3jA@5p2M@5o2713jD@5i2M@5l2712h@1m2722h@1n2732702343j6@5j2hV2Q12bZ3j6@5j6C21@2l1p23F2h42hx3jF@5q1y2YO2N03jG@5r6C5100@102h42hI3jG@5r2M@5s1y2YB2N13jD@5i2M@5h3jG@5r2202N23jD@5i2M@5h3jD@5i2202Z^C1l1l1l2Z^P1l1l1l3j2@5t2h93j8@5k5E@1o7303j2@5t2hG3j9@5m5E@1o7303j2@5t2hX3j7@5g5E@1o7303j2@5t2h@133j7@5g2M73IZ03j1@5u2h43j4@2d2203j1@5u2h93j5U2202o0~AV@2j@5w001o030consolidate%6C60@1g1D1u2o0~AV@2k^1223o2G0<constructor>%3j0@5f2643j1@5D2hX2722h@1n2732631t2h93IY01t2h42hV3IZ02o0~gFo^1@5x@2k@42200@5q1001@5y2002@5z2003@600V04@5f0V17@5v@2i018@5w@2j0Graphics2DText.GLRenderer%~AV@2l@67112pA@1n0makeSheets%2L02313j0@5s2M72322h42333j0@5s2M72h427D2b@1Z3j0@5s2h41W2MU2342h@1p3j4U2732353j0@5s4n@2m2p6C5100@612L02363j6@622M73j5@6627B2c33j3@643j2@6527B2b@182L02373j6@623j7@636C5100@102h42383j3@643j2@6527B2c83j8@2d3j0@5s3j3@641W2M@2d2702h@1p27B2bH3j0@5s3j3@642P12h92702331W2393j7@633j9@5i6C5100@102j83j9@5i2M@2d2702382Z^U3j3@643j2@6527B2cA3j8@2d3j0@5s3j2@652h92711W2M@2d2702h@1p27B2bH3j0@5s3j2@652h92712P12321W2393j7@633j9@5i6C5100@102j83j9@5i2M@2d2702382Z^W2Z%-79%3j1@5q3j6@626C61@2n1p6C5100@103j1@5q2o1~AV@2m@68112p130sortByWidthKeyFunction%3j0@5i2M@2d2o1~AV@2n^1113p9@1H0<constructor>%2h42313j0@622h41W2h41W2MU2322L02332L02342L02352h42h@1m3j0@621y2Yo2N03j6@636C5100@6B2h42372h42h@1U3j6@631y2YW2N13j8@5i2M@5h3j8@5i2203j8@5i3j7@1P35@6C03j8@5i3j1@2E35@6D03j8@5i1t35@5r03j8@5i2hV35@6E03j3@5k3j7@1P6C5100@103j4@5m3j1@2E6C5100@103j5@5s3j8@5i6C5100@102j73j8@5i2M@2d2702372Z^X1l1l1l2j13j2U2702312Z^p1l1l1l3j3@5k3j4@5m3j5@5s3j1@2E5E@1q7402o0~HFp^1@69@2n^1000@5s1001@6A20Graphics2DText.GLTextureSheet%~AV@2o^1223q3j0<constructor>%3j1@5h2603j0@5e2681t2hI3IY02h42h42h42h42L42323j0@5e2M@5f1t3j1@5h3j2@5D5E@1r741182b72h@1s3j1@5h2702h@1t2706C61@1a171u3j2@5D2h41W2613j2@5D2h91W2623j2@5D2hG1W2693j2@5D2hX1W26A2o0~@10Fq^1@6F@2o^1000@5h0V01@2d0V02U0V03@6E0V04@5r0V05@6C0V06@6D0V07@6G0V08@5e0V09@5l0V0A@5o0VGraphics2DText.GLTile%~AV@43^1004r030<constructor>%2K034r02o0~AV@2p@4Q772r9W0get%3j063j1@6H3j2@5D3j4@2R3j5@2S3j6@143j3@5E6C27@2q1r2373Or03j7@2t6C5101@4Q2383j8@5f2hV2Q02bD3j063j1@6H3j2@5D3j3@5E3j4@2R3j5@2S3j6@146C67@2r1r2383Or03j7@2t3j8@5f2203j8@5f2o1~AV@2q@6I772r8T0getUniqueKey%2L02373j062h@172703j1@6H2h@172703j2@5D2h@172703j3@2R2h@172703j4@2S2h@172703j5@142h@172703j6@5E2h@172703j7@115E@1u7803j7@112h@1v6C5101@5I2o1~AV@2r^1773rA@180<constructor>%3j063j1@6H3j2@5D3j4@2R3j5@2S3j6@143j3@5E6C27@2q1r2601t2h93IY02hV2L12371t3j063j1@6H3j2@5D3j4@2R3j5@2S3j6@143j3@5E5E@1w7812383IW12c33j062h92Q02bJ2h42395E@20701182bE3j942h92702P12392h@1x27D2b32h@1y6C61@2Q1l1u2h@1z6C11@1H002Z^H3j8@6K3r6F391G2h@1j3j1@6H2702h@1h2706C61@2Q1l1u2h@1g3j1@6H2702h@1h2706C61@2Q1l1u6C60@1V121u2o0~CFr^1@6J@2r@43100@2t0VGraphics2DText.NativeFont%~AV@2s@6L001s030_refreshGlRenderer%6C60@1g1D1u2o0~AV@2tC221s250draw%3j0@1P3j1@2E2hO7C33@2u1s82o1~AV@2u@4j331s3U0drawWithAlpha%2N12b91t2N53OT13j0@1P3j1@2E3j2@4i5E@217612o12ZI3OT12h92h42h42h@1n2h@1n2hO2h42h42hO4IS091t3OT13j0@1P3j1@2E3j2@4i5E@227512o12o0~AV@2v^1223s3@1C0<constructor>%3j1@5J2642h42h42L22325E@1c7012bW2L02651t2h@1U3IY03j0@6O2M@5P2602N03j1@5J3j2@5u1t2N56C5400@5v1t2hr3j0@6O2M@2Y3IZ01t2h@1m3j0@6O2M@5B3IZ01t2h@233j0@6O2M@5C3IZ02h82612ZP1t2h93IY03j2@5u1t3j0@6O2M@5N3j0@6O2M@5M2M@5G3j0@6O2M@5M2M@5H3j0@6O2M@5D3j0@6O2M@5E3j0@6O2M@2Y3j0@6O2M@5B3j0@6O2M@5C3j1@5J5E@247B03j2@5u2h41W2623j2@5u2h91W2632o0~qFs^1@6M@2v^1000@5P0V01@6N0A02@2d0V03U0V04@5J0V05@5s0V16@6L@2s017C@2t018@4j@2u0Graphics2DText.TextSurface%~AV@2w@6Q111U3M0getImage%3j0@6P2h86C22@3E1a2312N03j1@4z2h91W6C5101@4Q2323j2@5r2hV2Q02b42h@253j0@6P6C62@311V1u3j2@5r3j0@6P6C5101@6Q2o1~AV@2x@6R001U1N0isDone%2N42b22h82o12h42h42N11y2Y73j0@5r6C5001@6R182b22hA2o12Z^81l1l1l2h82642h82o1~AV@2y@6S001U2R0getProgress%2N42b22hb2o12hj2302h42h92N11y2Y92j03j1@5r6C5001@6S3j1@5r2M@6T2722702302Z^A1l1l1l3j0@6U2N32732o1~AV@2z@6V001U2J0getFiles%2L02302h42h92N11y2Y53j0@113j1@5r6C5001@6V6C5100@6B2Z^61l1l1l3j0@116C5000@613j0@112o1~AV@30^1113U3a0<constructor>%3j0@5q6C5001@252613j0@5q2M72h42Q02b32h82642ZO2h42h93j0@5q1y2YG3j1@5r2M@6b2322N03j2@6H3j1@5r2202N23j2@6H6C5100@102N33j1@5r2M@6T2702632Z^H1l1l1l2o0~qFU^1@6W@30^1000@6X2001@6Y0V02@6Z1003@6T0404@6a0A15@6Q@2w016@6R@2x017@6S@2y018@6V@2z0ImageResources.AggregatedImageSheet%~AV@31^1223V280<constructor>%3j0@6e2h@263j1@5T6C5201@6d6C71@1V023j1@5T2632o0~CFV2@6c@31^1003@5T0VImageResources.ImageNotFoundException%~AV@32^1223W280<constructor>%3j0@6e2h@263j1@6H6C5201@6d6C71@1V023j1@6H2632o0~CFW2@6f@32^1003@6H0VImageResources.SheetNotFoundException%~AV@33^1113X130<constructor>%3j0@1m6C71@1V022o0~7FX2@6g@33^10ImageResources.LoadFailedException%~AV@44^1004Y040<constructor>%2hV2L134Y02o0~AV@34@6Q001Y1X0getImage%2N42hV2Q12b22N42o12N2182b32h@276C61@1e1B1u2N32hV2Q02b32h@286C61@1e1B1u2N32M@2d2N32MU2hA6C63@3D1Z2303j0@4W2N335@4K03j0@4W2643j0@4W2o1~AV@35@6R001Y2q0isDone%2N22b22h82o11t2N33OY05E@296303OY02h41W2303j0@6K2h427D2bB2h82623j0@6K2h92Q12b32h@2A6C61@331X1u2h82o15E@2B6012bL3IT12313j1@1G2N02Q12b52h92613j1@1G2602Z42N12h92702612N12h@1n27D2b22h@2C6C11@1H002hA2o1~AV@36@6i112Y140loadFromResourcesAsync%3j0@6h5iVV8A6C25@381Y2o1~AV@37@6j112Y140loadFromResources%3j0@6h5iVVAA6C25@381Y2o1~AV@38@6t552YB@1d0_loadImpl%3j1@6k182bF3j0@6h6C21@391Y2353j5@6l2h91W2303j5@6l2hG1W2333j5@6l2hX1W2343iV96C62@3a1d2363j6@6m3j3@2d35@2d03j6@6m3j4U35U03j2@6n2bB6C60@3A1Y2373j7@6o3j6@6m35@6p03j6@6m3j0@6h3j7@6o5E@2D6303j7@6o2o12hA2h82L22385E@2B6012bX6C60@3A1Y2373j7@6o3j6@6m35@6p03j6@6m3j0@6h3j7@6o5E@2D6302h@2E6C11@1H002h@2C2393j7@6o6C5001@6R182bD3j9@6q6C11@1H002j92h@2F2722393j9@6q2h927D2b22h92392Z^H3j8@6s6C5000@6r2Z43j6@6m3j0@6h3j8@6s5E@2G6303j8@6s2h41W182b32h@2H6C61@331X1u3j3@2d3j4U2hA6C63@3D1Z23A3jA@2c3j6@6m35@4K03jA@2c2o1~AV@39@6v112Y2Q0getGenName%3j0@6h6C21@3E1a2313j1@6u2hV2Q02b42h@2I3j0@6h6C62@311V1u3j1@6u2h41W2h92Q02b72h@1h3j0@6h2702h@2J2706C61@331X1u3j1@6u2o1~AV@3A^1003Y010<constructor>%2o0~gFY^1@6w@3A@44100@6x0401@6y0402@6z0A03@6p0V04@700V16@6Q@34017@6R@350ImageResources.ImageLoader%~AV@3B@71001Z020getWidth%2N12o1~AV@3C@72001Z020getHeight%2N22o1~BV@3D^1233Z3F12<constructor>%2h82323j0@2d2613j1U2623j2@742b62h43j0@2d3j1U2L26C62@3a1d2602o0~gFZ^1@73@3D^1000@4K0V01@4N0V02@4O0V03@4Z0404@4a0415@71@3B016@72@3C0ImageResources.ImageResource%~AV@45^1004a050<constructor>%2K034a22K034a32o0~BV@3E@78122a4o12getFileInfo%2hA2316C20@3G0a3Oa03j0@6h6C5101@4Q2323j2@112hV2Q02bH3j0@6h6C5001@753i@2L@2K6C5201@6d2333Oa03j3@766C5101@4Q2323j2@112hV2Q12b43Oa03j0@6h3j2@112203j2@112hV2Q02b42h@2M3j0@6h6C62@311V1u3j1@772c53j2@112h41W2h92Q12b42h@2N3j0@6h6C62@311V1u3j2@112o1~AV@3F@79112a2P0getSheetInfo%6C20@3G0a3j0@5W3I412h@132Q12b32h@2O6C61@1a171u3Oa23j0@5W6C5101@4Q2313j1@6H2hV2Q02b42h@2P3j0@5W6C62@321W1u3Oa13j1@6H1W2o1~AV@3G@7L002aI@5N0ensureInitialized%3Oa02hV2Q12b12o02K02302K02313j0@7A34a03j1@7B34a15E@2Q6012322hV2332h42342h42hr3j2@7D2h@1d6C5101@7C1y2Y@4h3j5@452h@2R6C5101@7C2363j6@7E2h41W6C5001@753s0@4O3j6@7E2h91W2373j6@7E2hG1W3I112383j6@7E2hX1W3I112393j6@7E2h@134g1002h@2R6C5101@5I6C5001@7523A3j0@7A3jA@6h2h43j7@7F3j8@3l3j9@3n2L4220391@433j6@7E2h91W2333j6@7E2hG4g1002h@2R6C5101@5I6C5001@7523B3j1@7B3j3@7G2h@2S3jB@5W2h@2T3j3@7G2h@2U2K02K32203Oa23jB@5W3j3@7G220391@3d2j42h92702343j6@7E2h91W3I1123C3j6@7E2hG1W3I1123D3jC@2d2h42Q02c33jDU2h42Q02b42h@1p23C2h@1p23D3j1@7B3j3@7G1W2h@2U1W3j4@7H2h@1C3jC@2d2h@1D3jDU2h@2V2L02K3220391@2y3j6@7E2h91W2373j6@7E2hG1W3I1123E3j6@7E2hX1W3I1123F3j6@7E2h@131W3I1123C3j6@7E2hr1W3I1123D3j6@7E2h@1m1W3I1123G3j1@7B3j3@7G1W2h@2U1W3j4@7H1W2h@2V1W3j7@7F3jE@1P3jF@2E3jC@2d3jDU3jG@7I2L66C5100@10391@2D3j6@7E2h91W3I1123E3j6@7E2hG1W3I1123F3j6@7E2hX1W3I1123C3j6@7E2h@131W3I1123D3j6@7E2hr4g1002h@2R6C5101@5I6C5001@7523A3j0@7A3jA@6h2h93j3@7G3j4@7H3jE@1P3jF@2E3jC@2d3jDU2L72203Oa33j3@7G6C5101@4Q2m12L023H3Oa33j3@7G3jH@7J2203jH@7J3jA@6h6C5100@10391@1N3j6@7E2h91W2373j6@7E2hG1W3I1123C3j6@7E2hX1W3I1123D3j6@7E2h@131W3I1123G3j6@7E2hr4g1002h@2R6C5101@5I6C5001@7523A2j42h92702343j1@7B3j3@7G1W2h@2U1W3j4@7H2h@1C3jC@2d2h@1D3jDU2h@2V3j7@7F2h42h43jC@2d3jDU3jG@7I2L62L12K32203Oa33j3@7G6C5101@4Q2m12L023H3Oa33j3@7G3jH@7J2203jH@7J3jA@6h6C5100@103j0@7A3jA@6h2h93j3@7G3j4@7H2h42h43jC@2d3jDU2L722039193j6@7E3j6@7E2h41W6C5001@752M72L26C61@1V121u2Z%-292%1l1l1l2h42hy3Oa36C5001@7K1y2Y33jH@7J6C5000@612Z^41l1l1l2o0~AV@3H^1003a010<constructor>%2o0~7Fa^1@7M@3H@454ImageResources.ImageResourceManifest%~AV@46^1004b050<constructor>%2hV2hV2L234b02o0~AV@3I@6j112b140loadFromResources%3j0@5W3i8A6C23@3K1b2o1~AV@3J@6i112b140loadFromResourcesAsync%3j0@5W3i886C23@3K1b2o1~AV@3K@7O332b6Y0_initImpl%3j2@7N2c43j0@5W3I412hr2Q02bK2L02332h42h@133j0@5W1y2Y73j3@5q3j4@123j1@6n2hA6C23@3K1b6C5100@102Z^81l1l1l3j3@5q6C61@301U2o13j0@5W6C21@3F1a2353j5@6u3j1@6n6C62@3Q1b2o1~AV@3L@6Q111b4@120getImage%2N0182b32h@2W6C61@331X1u2N22hV2Q12b52N22M@7P7C31@3O0bB2hV2623j0@6P2h86C22@3E1a2313j1@4z2h91W2N42Q12b82h@2X2N32702h@2Y2703j0@6P6C62@311V1u2N53j1@4z2hG1W1W2323j1@4z2hr1W3j1@4z2h@1m1W2hA6C63@3D1Z2333j3@113j2@4W2M@4K35@4K03j3@113j1@4z2hX1W35@4Z03j3@113j1@4z2h@131W35@4a03j3@112o1~AV@3M@6R001b0F0isDone%2N02b22h82o12N23Ob06C5100@7Q3Ob02h41W2b22h82602N02o1~AV@3N@6S001b0J0getProgress%2N02b22hb2o12N23Ob06C5100@7Q3Ob02h41W2b42h82602hb2o13Ob02h91W2o1~AV@3O@7W111bB@1N0_turnTilesIntoSheet%2N12h@2U1W2312L02322h42hX3j1@7R6C5001@341y2Y@113j1@7R3j3@7S1W2343j4@7T2h@1C1W3j4@7T2h@1D1W6C62@3D1Z2353j5@4W2M@4K2363j6@4z6C5000@4V2h42h@233j4@7T2h@2V1W1y2YK3j7@5i2h41W2383j7@5i2h91W2393j7@5i2hG1W23A3j6@4z3j0@7U3j8@5W1W3j9@1P3jA@2E6C5300@4X2Z^L1l1l1l3j6@4z6C5000@4Y3j2@7V2M73j3@7S27C2b43j2@7V2hV6C5100@102Z^93j2@7V3j3@7S3j5@4W2202Z%-64%1l1l1l3j2@7V2652h82602hV2612o0~AV@3P@6V001b050getFiles%3Oa32N41W6C5001@252o1~AV@3Q^1223bA@1D0<constructor>%3j0@6u2613j0@6u2h@2S1W2633j0@6u2h@2T1W2643j0@6u2h@2U1W2322L02332h42h@133j2@7V6C5001@7K1y2Y63j3@5s3j4@7T2h@2V1W6C5100@6B2Z^71l1l1l3j3@5s2M72663j1@6n2b53j3@5s6C61@3T1c6C5001@4f2622ZX2K02352h42h@1m3j3@5s1y2YL3j6@5i2h41W2373j6@5i2hX1W2383j6@5i2h@131W2393j5@7c3j7@7d3j7@7d3iA83j8@2d3j9U6C25@381Y2202Z^M1l1l1l3j5@7c7C31@3O0bB2o0~@15Fb^1@7X@3Q@46100@6a0A01@7Y0V02@7Z0V03@7a0V04@6b0V05@7b0V06@6T0V18@6Q@3L019@6R@3M01A@6S@3N01B@7W@3O01C@6V@3P0ImageResources.ImageSheet%~AV@3R@4f001c4V0load%2h42h42N01y2YL3j0@5i2h41W2313j0@5i2hX1W2323j0@5i2h@131W2332N23j1@7d3j1@7d3i883j2@2d3j3U6C25@381Y2202Z^M1l1l1l1t2o1~AV@3S@7Q111c2x0getStatus%2N22M72h427D2bP2h42h92N26C5001@341y2YG2N23j1@2t1W6C5001@6R2bA2N13j1@2t2N23j1@2t1W6C5001@6Q2202N23j1@2t6C5100b2Z^H1l1l1l2N22M72h42Q02b93j0@7e2h42h82203j0@7e2h92hb2202ZE3j0@7e2h42hA2203j0@7e2h92hb2N12M72722N02M72732202o0~AV@3T^1113c130<constructor>%3j0@5s2602o0~WFc^1@7f@3T^1000@5s0V01@7P2002@7g2013@4f@3R014@7Q@3S0ImageResources.ImageSheetLoaderAsync%~AV@47^1004d030<constructor>%2h434d02o0~AV@3U@7h001d070updateResourceFingerprint%2N42h@2R2702N32702652o0~AV@3V@4V001d080lock%2h82662N32h92702637C30@3U0d72o0~AV@3W@4Y001d050unlock%1t5E@2Z6102hA2662o0~AV@3X@4X331dF@280blit%3j0@2c2M@4K2333j3@7i6C5000@4L7C30@3Z0dC3j1@1P2343j2@2E2353j1@1P3j3@7i2M@2d2702363j2@2E3j3@7i2MU2702372h42382h42393j3@7i2M@2d23A3j3@7i2MU23B3j6@7m2h427B2eB3j7@7l2h427B2e73j5@7k2N227E2e33j4@7j2N127E2b12o03j6@7m2N127E2bC3j6@7m2N127123C2j63jC@7n2712362jA3jC@7n27123A3j7@7l2N227E2bC3j7@7l2N227123C2j73jC@7n2712372jB3jC@7n27123B3j4@7j2h427B2b93j4@7j1k23C2h42342j83jC@7n2702383j5@7k2h427B2b93j5@7k1k23C2h42352j93jC@7n2702393jA@7o3j8@7p27123D3jB@7q3j9@7r27123E3jD@3l2h42Q02e33jE@3n2h42Q02b12o01t3j3@7i3j4@7j3j5@7k3j8@7p3j9@7r3jD@3l3jE@3n5E@2a6802o0~AV@3Y@4L001d060verifyUnlocked%2N62b32h@2b6C61@1e1B1u2o0~AV@3Z@7s001d070verifyLocked%2N6182b32h@2c6C61@1e1B1u2o0~AV@3a^1223d3q0<constructor>%3Od02P12h927034d02643j0@7x3r7L3j1@192h41W2613j1@192h91W262391C3j1@192h41W2323j2@7i2M@2d2613j2@7i2MU262391139103j0@7x2h92Q12bH1t2N12N25E@2d6303j0@7x2hG2Q02b92N32h92712637C30@3V0d83j2@7i3i447C33@3X0dA7C30@3W0d97C30@3U0d72o0~@15Fd^1@7t@3a@47101@2d0V02U0V03@7u0404@7v0V05@4P0V06@7w0A17@7h@3U018@4V@3V019@4Y@3W01A@4X@3X01B@4L@3Y01C@7s@3Z0ImageResources.NativeImageData%6C10j002o06C12@1R002o0";