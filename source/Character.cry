import Graphics2D;
import Math;

const CHARACTER_RADIUS = 15.0;
const CHARACTER_SPEED = 5.0;

// A computer- or human-controlled game character.
class Character : Body {
	field agent;
	field health = 5;

	constructor(agent, pos) : base(pos, Vec2.zero(), CHARACTER_RADIUS) {
		this.agent = agent;
	}

	function update(timeStep) {
		this.pos = this.pos.plus(this.vel.times(timeStep));

		// Clamp character to boundaries.
		if (this.pos.x < this.radius) {
			this.pos.x = this.radius;
		} else if (this.pos.x > X_RES - this.radius) {
			this.pos.x = X_RES - this.radius;
		}
		if (this.pos.y < this.radius) {
			this.pos.y = this.radius;
		} else if (this.pos.y > Y_RES - this.radius) {
			this.pos.y = Y_RES - this.radius;
		}

		this.agent.control(this);
	}

	function draw() {
		color = this.agent.controlsTime() ? Color.black() : Color.red();
		Graphics2D.Draw.ellipse
			( Math.floor(this.pos.x - this.radius + 0.5)
			, Math.floor(this.pos.y - this.radius + 0.5)
			, 2.0 * this.radius
			, 2.0 * this.radius
			, color.r, color.g, color.b
			);
	}
}
